{"version":3,"file":"component---src-templates-blog-post-js-f5289f8b17210fc3de53.js","mappings":"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,EAAG,UAAW,CAAC,EAAG,SAAU,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,SAAU,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,UAAW,CAAC,EAAG,SAAU,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,GAAI,UAAW,CAAC,GAAI,WAAY,CAAC,GAAI,YAAa,CAAC,GAAI,WAAY,CAAC,IAAK,UAAW,CAAC,EAAG,WAAY,CAAC,GAAI,WAAY,CAAC,EAAG,oBAAqB,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,sBAAuB,CAAC,EAAG,WAAY,CAAC,GAAI,eAAgB,CAAC,IAAK,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,aAAc,CAAC,EAAG,UAAW,CAAC,EAAG,SAAU,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,QAAS,CAAC,EAAG,QAAS,CAAC,EAAG,QAAS,CAAC,EAAG,aAAc,CAAC,EAAG,QAAS,CAAC,EAAG,SAAU,CAAC,EAAG,WAAY,CAAC,EAAG,SAAU,CAAC,EAAG,aAAc,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,SAAU,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,QAAS,CAAC,EAAG,QAAS,CAAC,EAAG,QAAS,CAAC,EAAG,aAAc,CAAC,EAAG,QAAS,CAAC,EAAG,SAAU,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,SAAU,CAAC,EAAG,UAAW,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,WAAY,CAAC,EAAG,cAAe,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,SAAU,CAAC,EAAG,YAAa,CAAC,EAAG,aAAc,CAAC,GAAI,YAAa,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,iBAAkB,CAAC,GAAI,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,YAAa,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,SAAU,CAAC,EAAG,YAAa,CAAC,EAAG,SAAU,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,SAAU,CAAC,EAAG,YAAa,CAAC,EAAG,SAAU,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,UA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,GAAK,QAK1CA,EAAaA,EAAwB,UAAI,GAAK,YAK9CA,EAAaA,EAAwB,UAAI,GAAK,YAK9CA,EAAaA,EAAmB,KAAI,GAAK,MAC5C,CA3BD,CA2BGA,KAAiBA,GAAe,CAAC,ICvC7B,MAAMC,GAAe,IAAI9G,IAAI,CAChC,WACA,cACA,eACA,eACA,gBACA,mBACA,WACA,UACA,gBACA,sBACA,cACA,mBACA,oBACA,oBACA,iBACA,eACA,UACA,UACA,UACA,UACA,UACA,iBACA,UACA,UACA,cACA,eACA,WACA,eACA,qBACA,cACA,SACA,eACA,gBACA,WACA,iBACA,iBACA,YACFvD,KAAKsK,GAAQ,CAACA,EAAIC,cAAeD,MACtBE,GAAiB,IAAIjH,IAAI,CAClC,gBACA,gBACA,gBACA,gBACA,cACA,WACA,gBACA,kBACA,WACA,cACA,WACA,oBACA,gBACA,eACA,mBACA,YACA,aACA,WACA,eACA,oBACA,eACA,cACA,cACA,mBACA,YACA,aACA,aACA,sBACA,mBACA,eACA,YACA,YACA,YACA,gBACA,sBACA,iBACA,OACA,OACA,cACA,YACA,qBACA,mBACA,mBACA,mBACA,eACA,cACA,eACA,cACA,eACA,iBACA,cACA,UACA,UACA,aACA,UACA,aACA,mBACA,mBACA,cACFvD,KAAKsK,GAAQ,CAACA,EAAIC,cAAeD,MCvF7BG,GAAoB,IAAIC,IAAI,CAC9B,QACA,SACA,MACA,SACA,UACA,WACA,YACA,aAEJ,SAASC,GAAczK,GACnB,OAAOA,EAAM0K,QAAQ,KAAM,SAC/B,CA+BA,MAAMC,GAAY,IAAIH,IAAI,CACtB,OACA,OACA,WACA,KACA,MACA,UACA,QACA,QACA,KACA,MACA,QACA,UACA,SACA,OACA,OACA,QACA,SACA,QACA,QAUG,SAASI,GAAOzK,EAAMnD,EAAU,CAAC,GACpC,MAAM6N,EAAQ,WAAY1K,EAAOA,EAAO,CAACA,GACzC,IAAIsD,EAAS,GACb,IAAK,IAAIvC,EAAI,EAAGA,EAAI2J,EAAMtL,OAAQ2B,IAC9BuC,GAAUqH,GAAWD,EAAM3J,GAAIlE,GA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C,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,eAAgB,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,SAAU,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,SAAU,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,UAAW,CAAC,EAAG,SAAU,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,UAAW,CAAC,EAAG,UAAW,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,UAAW,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,SAAU,CAAC,EAAG,SAAU,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,WAAY,CAAC,EAAG,WAAY,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CAAC,EAAG,YAAa,CA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B,EACAqC,mBAAmBryC,GACf,MAAyB,kBAAlBA,EAAKgwC,QAChB,EACAsC,cAActyC,GACV,OAAOP,OAAOS,UAAUC,eAAeC,KAAKJ,EAAM,UACtD,EAEAuyC,0BAA0BvyC,EAAMg7B,GAC5Bh7B,EAAKa,mBAAqBm6B,CAC9B,EACAwX,0BAA0BxyC,GACtB,OAAOA,EAAKa,kBAChB,EACA4xC,6BAA6BzyC,EAAM0yC,GAC/B1yC,EAAKa,mBAAqB,IAAKb,EAAKa,sBAAuB6xC,EAC/D,GCzKEC,GAAqB,OACrBC,GAAkB,sBAClBC,GAAwB,6DACxBC,GAAiC,CACnC,6CACA,6CACA,uDACA,kCACA,kCACA,yCACA,yCACA,iCACA,0BACA,2BACA,0BACA,gCACA,0BACA,wBACA,8BACA,8BACA,8BACA,8BACA,qCACA,qCACA,qCACA,qCACA,6BACA,sBACA,2CACA,wDACA,iDACA,mDACA,wDACA,iDACA,mDACA,sCACA,6CACA,6CACA,sDACA,8DACA,8CACA,iFACA,wEACA,uCACA,gDACA,uDACA,kCACA,+BACA,+BACA,yBACA,gCACA,kCACA,sCACA,2CACA,yCACA,wBACA,4BACA,sCACA,mCAEEC,GAA8C,IAC7CD,GACH,mCACA,wCAEEE,GAAyB,IAAI3oC,IAAI,CACnC,uCACA,qCACA,SAEE4oC,GAAoC,CAAC,mCAAoC,wCACzEC,GAAmD,IAClDD,GACH,mCACA,wCAGJ,SAASE,GAAU1X,EAAU2X,GACzB,OAAOA,EAASv/B,MAAM9T,GAAW07B,EAASjpB,WAAWzS,IACzD,CC/EA,MAAMszC,GAAa,CACfC,UAAW,YACXC,gBAAiB,yBAGfC,GAAsB,gBACtBC,GAA+B,gBAC/BC,GAA2B,IAAIxwC,IAAI,CACrC,gBACA,gBACA,gBACA,cACA,WACA,gBACA,kBACA,WACA,cACA,WACA,oBACA,gBACA,eACA,mBACA,YACA,aACA,WACA,eACA,oBACA,eACA,cACA,cACA,mBACA,YACA,aACA,aACA,sBACA,mBACA,eACA,YACA,YACA,YACA,gBACA,sBACA,iBACA,OACA,OACA,cACA,YACA,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","sources":["webpack://newsweb/./node_modules/@material-ui/icons/Email.js","webpack://newsweb/./node_modules/@material-ui/icons/Facebook.js","webpack://newsweb/./node_modules/@material-ui/icons/LinkedIn.js","webpack://newsweb/./node_modules/@material-ui/icons/Twitter.js","webpack://newsweb/./node_modules/boolbase/index.js","webpack://newsweb/./node_modules/cheerio/lib/esm/options.js","webpack://newsweb/./node_modules/domelementtype/lib/esm/index.js","webpack://newsweb/./node_modules/cheerio/node_modules/domhandler/lib/esm/node.js","webpack://newsweb/./node_modules/cheerio/node_modules/domhandler/lib/esm/index.js","webpack://newsweb/./node_modules/cheerio/node_modules/entities/lib/esm/decode_codepoint.js","webpack://newsweb/./node_modules/cheerio/node_modules/entities/lib/esm/generated/decode-data-html.js","webpack://newsweb/./node_modules/cheerio/node_modules/entities/lib/esm/generated/decode-data-xml.js","webpack://newsweb/./node_modules/cheerio/node_modules/entities/lib/esm/decode.js","webpack://newsweb/./node_modules/cheerio/node_modules/entities/lib/esm/generated/encode-html.js","webpack://newsweb/./node_modules/cheerio/node_modules/entities/lib/esm/escape.js","webpack://newsweb/./node_modules/cheerio/node_modules/entities/lib/esm/index.js","webpack://newsweb/./node_modules/cheerio/node_modules/dom-serializer/lib/esm/foreignNames.js","webpack://newsweb/./node_modules/cheerio/node_modules/dom-serializer/lib/esm/index.js","webpack://newsweb/./node_modules/cheerio/node_modules/domutils/lib/esm/stringify.js","webpack://newsweb/./node_modules/cheerio/node_modules/domutils/lib/esm/traversal.js","webpack://newsweb/./node_modules/cheerio/node_modules/domutils/lib/esm/manipulation.js","webpack://newsweb/./node_modules/cheerio/node_modules/domutils/lib/esm/helpers.js","webpack://newsweb/./node_modules/cheerio/lib/esm/static.js","webpack://newsweb/./node_modules/cheerio/lib/esm/utils.js","webpack://newsweb/./node_modules/cheerio/lib/esm/api/attributes.js","webpack://newsweb/./node_modules/css-what/lib/es/types.js","webpack://newsweb/./node_modules/css-what/lib/es/parse.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/domhandler/lib/esm/node.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/domhandler/lib/esm/index.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/entities/lib/esm/decode_codepoint.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/entities/lib/esm/generated/decode-data-html.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/entities/lib/esm/generated/decode-data-xml.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/entities/lib/esm/decode.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/entities/lib/esm/generated/encode-html.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/entities/lib/esm/escape.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/entities/lib/esm/index.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/dom-serializer/lib/esm/foreignNames.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/dom-serializer/lib/esm/index.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/domutils/lib/esm/stringify.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/domutils/lib/esm/traversal.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/domutils/lib/esm/manipulation.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/domutils/lib/esm/querying.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/domutils/lib/esm/legacy.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/domutils/lib/esm/helpers.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/domutils/lib/esm/feeds.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/css-select/lib/esm/sort.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/css-select/lib/esm/attributes.js","webpack://newsweb/./node_modules/nth-check/lib/esm/parse.js","webpack://newsweb/./node_modules/nth-check/lib/esm/index.js","webpack://newsweb/./node_modules/nth-check/lib/esm/compile.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/css-select/lib/esm/pseudo-selectors/filters.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/css-select/lib/esm/pseudo-selectors/pseudos.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/css-select/lib/esm/pseudo-selectors/aliases.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/css-select/lib/esm/pseudo-selectors/subselects.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/css-select/lib/esm/general.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/css-select/lib/esm/pseudo-selectors/index.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/css-select/lib/esm/compile.js","webpack://newsweb/./node_modules/cheerio-select/node_modules/css-select/lib/esm/index.js","webpack://newsweb/./node_modules/cheerio-select/lib/esm/positionals.js","webpack://newsweb/./node_modules/cheerio-select/lib/esm/helpers.js","webpack://newsweb/./node_modules/cheerio-select/lib/esm/index.js","webpack://newsweb/./node_modules/cheerio/lib/esm/api/traversing.js","webpack://newsweb/./node_modules/cheerio/lib/esm/parse.js","webpack://newsweb/./node_modules/cheerio/lib/esm/api/manipulation.js","webpack://newsweb/./node_modules/cheerio/lib/esm/api/css.js","webpack://newsweb/./node_modules/cheerio/lib/esm/api/forms.js","webpack://newsweb/./node_modules/cheerio/lib/esm/cheerio.js","webpack://newsweb/./node_modules/parse5/dist/common/unicode.js","webpack://newsweb/./node_modules/parse5/dist/common/error-codes.js","webpack://newsweb/./node_modules/parse5/dist/tokenizer/preprocessor.js","webpack://newsweb/./node_modules/parse5/dist/common/token.js","webpack://newsweb/./node_modules/parse5/node_modules/entities/lib/esm/generated/decode-data-html.js","webpack://newsweb/./node_modules/parse5/node_modules/entities/lib/esm/decode_codepoint.js","webpack://newsweb/./node_modules/parse5/node_modules/entities/lib/esm/generated/decode-data-xml.js","webpack://newsweb/./node_modules/parse5/node_modules/entities/lib/esm/decode.js","webpack://newsweb/./node_modules/parse5/dist/common/html.js","webpack://newsweb/./node_modules/parse5/dist/tokenizer/index.js","webpack://newsweb/./node_modules/parse5/dist/parser/open-element-stack.js","webpack://newsweb/./node_modules/parse5/dist/parser/formatting-element-list.js","webpack://newsweb/./node_modules/parse5/dist/tree-adapters/default.js","webpack://newsweb/./node_modules/parse5/dist/common/doctype.js","webpack://newsweb/./node_modules/parse5/dist/common/foreign-content.js","webpack://newsweb/./node_modules/parse5/dist/parser/index.js","webpack://newsweb/./node_modules/parse5/node_modules/entities/lib/esm/escape.js","webpack://newsweb/./node_modules/parse5/dist/serializer/index.js","webpack://newsweb/./node_modules/parse5-htmlparser2-tree-adapter/node_modules/domhandler/lib/esm/node.js","webpack://newsweb/./node_modules/parse5-htmlparser2-tree-adapter/dist/index.js","webpack://newsweb/./node_modules/cheerio/lib/esm/parsers/parse5-adapter.js","webpack://newsweb/./node_modules/parse5/dist/index.js","webpack://newsweb/./node_modules/cheerio/node_modules/htmlparser2/lib/esm/Tokenizer.js","webpack://newsweb/./node_modules/cheerio/node_modules/htmlparser2/lib/esm/Parser.js","webpack://newsweb/./node_modules/cheerio/node_modules/htmlparser2/lib/esm/index.js","webpack://newsweb/./node_modules/cheerio/lib/esm/index.js","webpack://newsweb/./node_modules/cheerio/lib/esm/load.js","webpack://newsweb/./src/templates/truncateHTML.js","webpack://newsweb/./src/templates/blogPost.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"\n}), 'Email');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5 3h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2m13 2h-2.5A3.5 3.5 0 0 0 12 8.5V11h-2v3h2v7h3v-7h3v-3h-3V9a1 1 0 0 1 1-1h2V5z\"\n}), 'Facebook');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14m-.5 15.5v-5.3a3.26 3.26 0 0 0-3.26-3.26c-.85 0-1.84.52-2.32 1.3v-1.11h-2.79v8.37h2.79v-4.93c0-.77.62-1.4 1.39-1.4a1.4 1.4 0 0 1 1.4 1.4v4.93h2.79M6.88 8.56a1.68 1.68 0 0 0 1.68-1.68c0-.93-.75-1.69-1.68-1.69a1.69 1.69 0 0 0-1.69 1.69c0 .93.76 1.68 1.69 1.68m1.39 9.94v-8.37H5.5v8.37h2.77z\"\n}), 'LinkedIn');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M22.46 6c-.77.35-1.6.58-2.46.69.88-.53 1.56-1.37 1.88-2.38-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29 0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15 0 1.49.75 2.81 1.91 3.56-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07 4.28 4.28 0 0 0 4 2.98 8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21 16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56.84-.6 1.56-1.36 2.14-2.23z\"\n}), 'Twitter');\n\nexports.default = _default;","module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};","const defaultOpts = {\n    xml: false,\n    decodeEntities: true,\n};\n/** Cheerio default options. */\nexport default defaultOpts;\nconst xmlModeDefault = {\n    _useHtmlParser2: true,\n    xmlMode: true,\n};\n/**\n * Flatten the options for Cheerio.\n *\n * This will set `_useHtmlParser2` to true if `xml` is set to true.\n *\n * @param options - The options to flatten.\n * @returns The flattened options.\n */\nexport function flatten(options) {\n    return (options === null || options === void 0 ? void 0 : options.xml)\n        ? typeof options.xml === 'boolean'\n            ? xmlModeDefault\n            : { ...xmlModeDefault, ...options.xml }\n        : options !== null && options !== void 0 ? options : undefined;\n}\n//# sourceMappingURL=options.js.map","/** Types of elements found in htmlparser2's DOM */\nexport var ElementType;\n(function (ElementType) {\n    /** Type for the root element of a document */\n    ElementType[\"Root\"] = \"root\";\n    /** Type for Text */\n    ElementType[\"Text\"] = \"text\";\n    /** Type for <? ... ?> */\n    ElementType[\"Directive\"] = \"directive\";\n    /** Type for <!-- ... --> */\n    ElementType[\"Comment\"] = \"comment\";\n    /** Type for <script> tags */\n    ElementType[\"Script\"] = \"script\";\n    /** Type for <style> tags */\n    ElementType[\"Style\"] = \"style\";\n    /** Type for Any tag */\n    ElementType[\"Tag\"] = \"tag\";\n    /** Type for <![CDATA[ ... ]]> */\n    ElementType[\"CDATA\"] = \"cdata\";\n    /** Type for <!doctype ...> */\n    ElementType[\"Doctype\"] = \"doctype\";\n})(ElementType || (ElementType = {}));\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\nexport function isTag(elem) {\n    return (elem.type === ElementType.Tag ||\n        elem.type === ElementType.Script ||\n        elem.type === ElementType.Style);\n}\n// Exports for backwards compatibility\n/** Type for the root element of a document */\nexport const Root = ElementType.Root;\n/** Type for Text */\nexport const Text = ElementType.Text;\n/** Type for <? ... ?> */\nexport const Directive = ElementType.Directive;\n/** Type for <!-- ... --> */\nexport const Comment = ElementType.Comment;\n/** Type for <script> tags */\nexport const Script = ElementType.Script;\n/** Type for <style> tags */\nexport const Style = ElementType.Style;\n/** Type for Any tag */\nexport const Tag = ElementType.Tag;\n/** Type for <![CDATA[ ... ]]> */\nexport const CDATA = ElementType.CDATA;\n/** Type for <!doctype ...> */\nexport const Doctype = ElementType.Doctype;\n","import { ElementType, isTag as isTagRaw } from \"domelementtype\";\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nexport class Node {\n    constructor() {\n        /** Parent of the node */\n        this.parent = null;\n        /** Previous sibling */\n        this.prev = null;\n        /** Next sibling */\n        this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n        this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n        this.endIndex = null;\n    }\n    // Read-write aliases for properties\n    /**\n     * Same as {@link parent}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get parentNode() {\n        return this.parent;\n    }\n    set parentNode(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Same as {@link prev}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get previousSibling() {\n        return this.prev;\n    }\n    set previousSibling(prev) {\n        this.prev = prev;\n    }\n    /**\n     * Same as {@link next}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nextSibling() {\n        return this.next;\n    }\n    set nextSibling(next) {\n        this.next = next;\n    }\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */\n    cloneNode(recursive = false) {\n        return cloneNode(this, recursive);\n    }\n}\n/**\n * A node that contains some data.\n */\nexport class DataNode extends Node {\n    /**\n     * @param data The content of the data node\n     */\n    constructor(data) {\n        super();\n        this.data = data;\n    }\n    /**\n     * Same as {@link data}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nodeValue() {\n        return this.data;\n    }\n    set nodeValue(data) {\n        this.data = data;\n    }\n}\n/**\n * Text within the document.\n */\nexport class Text extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Text;\n    }\n    get nodeType() {\n        return 3;\n    }\n}\n/**\n * Comments within the document.\n */\nexport class Comment extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Comment;\n    }\n    get nodeType() {\n        return 8;\n    }\n}\n/**\n * Processing instructions, including doc types.\n */\nexport class ProcessingInstruction extends DataNode {\n    constructor(name, data) {\n        super(data);\n        this.name = name;\n        this.type = ElementType.Directive;\n    }\n    get nodeType() {\n        return 1;\n    }\n}\n/**\n * A `Node` that can have children.\n */\nexport class NodeWithChildren extends Node {\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    constructor(children) {\n        super();\n        this.children = children;\n    }\n    // Aliases\n    /** First child of the node. */\n    get firstChild() {\n        var _a;\n        return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Last child of the node. */\n    get lastChild() {\n        return this.children.length > 0\n            ? this.children[this.children.length - 1]\n            : null;\n    }\n    /**\n     * Same as {@link children}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get childNodes() {\n        return this.children;\n    }\n    set childNodes(children) {\n        this.children = children;\n    }\n}\nexport class CDATA extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.CDATA;\n    }\n    get nodeType() {\n        return 4;\n    }\n}\n/**\n * The root node of the document.\n */\nexport class Document extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Root;\n    }\n    get nodeType() {\n        return 9;\n    }\n}\n/**\n * An element within the DOM.\n */\nexport class Element extends NodeWithChildren {\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    constructor(name, attribs, children = [], type = name === \"script\"\n        ? ElementType.Script\n        : name === \"style\"\n            ? ElementType.Style\n            : ElementType.Tag) {\n        super(children);\n        this.name = name;\n        this.attribs = attribs;\n        this.type = type;\n    }\n    get nodeType() {\n        return 1;\n    }\n    // DOM Level 1 aliases\n    /**\n     * Same as {@link name}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get tagName() {\n        return this.name;\n    }\n    set tagName(name) {\n        this.name = name;\n    }\n    get attributes() {\n        return Object.keys(this.attribs).map((name) => {\n            var _a, _b;\n            return ({\n                name,\n                value: this.attribs[name],\n                namespace: (_a = this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                prefix: (_b = this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name],\n            });\n        });\n    }\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */\nexport function isTag(node) {\n    return isTagRaw(node);\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */\nexport function isCDATA(node) {\n    return node.type === ElementType.CDATA;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */\nexport function isText(node) {\n    return node.type === ElementType.Text;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */\nexport function isComment(node) {\n    return node.type === ElementType.Comment;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDirective(node) {\n    return node.type === ElementType.Directive;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDocument(node) {\n    return node.type === ElementType.Root;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */\nexport function hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nexport function cloneNode(node, recursive = false) {\n    let result;\n    if (isText(node)) {\n        result = new Text(node.data);\n    }\n    else if (isComment(node)) {\n        result = new Comment(node.data);\n    }\n    else if (isTag(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Element(node.name, { ...node.attribs }, children);\n        children.forEach((child) => (child.parent = clone));\n        if (node.namespace != null) {\n            clone.namespace = node.namespace;\n        }\n        if (node[\"x-attribsNamespace\"]) {\n            clone[\"x-attribsNamespace\"] = { ...node[\"x-attribsNamespace\"] };\n        }\n        if (node[\"x-attribsPrefix\"]) {\n            clone[\"x-attribsPrefix\"] = { ...node[\"x-attribsPrefix\"] };\n        }\n        result = clone;\n    }\n    else if (isCDATA(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new CDATA(children);\n        children.forEach((child) => (child.parent = clone));\n        result = clone;\n    }\n    else if (isDocument(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Document(children);\n        children.forEach((child) => (child.parent = clone));\n        if (node[\"x-mode\"]) {\n            clone[\"x-mode\"] = node[\"x-mode\"];\n        }\n        result = clone;\n    }\n    else if (isDirective(node)) {\n        const instruction = new ProcessingInstruction(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    }\n    else {\n        throw new Error(`Not implemented yet: ${node.type}`);\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n        result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n}\nfunction cloneChildren(childs) {\n    const children = childs.map((child) => cloneNode(child, true));\n    for (let i = 1; i < children.length; i++) {\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n","import { ElementType } from \"domelementtype\";\nimport { Element, Text, Comment, CDATA, Document, ProcessingInstruction, } from \"./node.js\";\nexport * from \"./node.js\";\n// Default options\nconst defaultOpts = {\n    withStartIndices: false,\n    withEndIndices: false,\n    xmlMode: false,\n};\nexport class DomHandler {\n    /**\n     * @param callback Called once parsing has completed.\n     * @param options Settings for the handler.\n     * @param elementCB Callback whenever a tag is closed.\n     */\n    constructor(callback, options, elementCB) {\n        /** The elements of the DOM */\n        this.dom = [];\n        /** The root element for the DOM */\n        this.root = new Document(this.dom);\n        /** Indicated whether parsing has been completed. */\n        this.done = false;\n        /** Stack of open tags. */\n        this.tagStack = [this.root];\n        /** A data node that is still being written to. */\n        this.lastNode = null;\n        /** Reference to the parser instance. Used for location information. */\n        this.parser = null;\n        // Make it possible to skip arguments, for backwards-compatibility\n        if (typeof options === \"function\") {\n            elementCB = options;\n            options = defaultOpts;\n        }\n        if (typeof callback === \"object\") {\n            options = callback;\n            callback = undefined;\n        }\n        this.callback = callback !== null && callback !== void 0 ? callback : null;\n        this.options = options !== null && options !== void 0 ? options : defaultOpts;\n        this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n    }\n    onparserinit(parser) {\n        this.parser = parser;\n    }\n    // Resets the handler back to starting state\n    onreset() {\n        this.dom = [];\n        this.root = new Document(this.dom);\n        this.done = false;\n        this.tagStack = [this.root];\n        this.lastNode = null;\n        this.parser = null;\n    }\n    // Signals the handler that parsing is done\n    onend() {\n        if (this.done)\n            return;\n        this.done = true;\n        this.parser = null;\n        this.handleCallback(null);\n    }\n    onerror(error) {\n        this.handleCallback(error);\n    }\n    onclosetag() {\n        this.lastNode = null;\n        const elem = this.tagStack.pop();\n        if (this.options.withEndIndices) {\n            elem.endIndex = this.parser.endIndex;\n        }\n        if (this.elementCB)\n            this.elementCB(elem);\n    }\n    onopentag(name, attribs) {\n        const type = this.options.xmlMode ? ElementType.Tag : undefined;\n        const element = new Element(name, attribs, undefined, type);\n        this.addNode(element);\n        this.tagStack.push(element);\n    }\n    ontext(data) {\n        const { lastNode } = this;\n        if (lastNode && lastNode.type === ElementType.Text) {\n            lastNode.data += data;\n            if (this.options.withEndIndices) {\n                lastNode.endIndex = this.parser.endIndex;\n            }\n        }\n        else {\n            const node = new Text(data);\n            this.addNode(node);\n            this.lastNode = node;\n        }\n    }\n    oncomment(data) {\n        if (this.lastNode && this.lastNode.type === ElementType.Comment) {\n            this.lastNode.data += data;\n            return;\n        }\n        const node = new Comment(data);\n        this.addNode(node);\n        this.lastNode = node;\n    }\n    oncommentend() {\n        this.lastNode = null;\n    }\n    oncdatastart() {\n        const text = new Text(\"\");\n        const node = new CDATA([text]);\n        this.addNode(node);\n        text.parent = node;\n        this.lastNode = text;\n    }\n    oncdataend() {\n        this.lastNode = null;\n    }\n    onprocessinginstruction(name, data) {\n        const node = new ProcessingInstruction(name, data);\n        this.addNode(node);\n    }\n    handleCallback(error) {\n        if (typeof this.callback === \"function\") {\n            this.callback(error, this.dom);\n        }\n        else if (error) {\n            throw error;\n        }\n    }\n    addNode(node) {\n        const parent = this.tagStack[this.tagStack.length - 1];\n        const previousSibling = parent.children[parent.children.length - 1];\n        if (this.options.withStartIndices) {\n            node.startIndex = this.parser.startIndex;\n        }\n        if (this.options.withEndIndices) {\n            node.endIndex = this.parser.endIndex;\n        }\n        parent.children.push(node);\n        if (previousSibling) {\n            node.prev = previousSibling;\n            previousSibling.next = node;\n        }\n        node.parent = parent;\n        this.lastNode = null;\n    }\n}\nexport default DomHandler;\n","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map","import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map","// Generated using scripts/write-encode-map.ts\nfunction restoreDiff(arr) {\n    for (let i = 1; i < arr.length; i++) {\n        arr[i][0] += arr[i - 1][0] + 1;\n    }\n    return arr;\n}\n// prettier-ignore\nexport default new Map(/* #__PURE__ */ restoreDiff([[9, \"&Tab;\"], [0, \"&NewLine;\"], [22, \"&excl;\"], [0, \"&quot;\"], [0, \"&num;\"], [0, \"&dollar;\"], [0, \"&percnt;\"], [0, \"&amp;\"], [0, \"&apos;\"], [0, \"&lpar;\"], [0, \"&rpar;\"], [0, \"&ast;\"], [0, \"&plus;\"], [0, \"&comma;\"], [1, \"&period;\"], [0, \"&sol;\"], [10, \"&colon;\"], [0, \"&semi;\"], [0, { v: \"&lt;\", n: 8402, o: \"&nvlt;\" }], [0, { v: \"&equals;\", n: 8421, o: \"&bne;\" }], [0, { v: \"&gt;\", n: 8402, o: \"&nvgt;\" }], [0, \"&quest;\"], [0, \"&commat;\"], [26, \"&lbrack;\"], [0, \"&bsol;\"], [0, \"&rbrack;\"], [0, \"&Hat;\"], [0, \"&lowbar;\"], [0, \"&DiacriticalGrave;\"], [5, { n: 106, o: \"&fjlig;\" }], [20, \"&lbrace;\"], [0, \"&verbar;\"], [0, \"&rbrace;\"], [34, \"&nbsp;\"], [0, \"&iexcl;\"], [0, \"&cent;\"], [0, \"&pound;\"], [0, \"&curren;\"], [0, \"&yen;\"], [0, \"&brvbar;\"], [0, \"&sect;\"], [0, \"&die;\"], [0, \"&copy;\"], [0, \"&ordf;\"], [0, \"&laquo;\"], [0, \"&not;\"], [0, \"&shy;\"], [0, \"&circledR;\"], [0, \"&macr;\"], [0, \"&deg;\"], [0, \"&PlusMinus;\"], [0, \"&sup2;\"], [0, \"&sup3;\"], [0, \"&acute;\"], [0, \"&micro;\"], [0, \"&para;\"], [0, \"&centerdot;\"], [0, \"&cedil;\"], [0, \"&sup1;\"], [0, \"&ordm;\"], [0, \"&raquo;\"], [0, \"&frac14;\"], [0, \"&frac12;\"], [0, \"&frac34;\"], [0, \"&iquest;\"], [0, \"&Agrave;\"], [0, \"&Aacute;\"], [0, \"&Acirc;\"], [0, \"&Atilde;\"], [0, \"&Auml;\"], [0, \"&angst;\"], [0, \"&AElig;\"], [0, \"&Ccedil;\"], [0, \"&Egrave;\"], [0, \"&Eacute;\"], [0, \"&Ecirc;\"], [0, \"&Euml;\"], [0, \"&Igrave;\"], [0, \"&Iacute;\"], [0, \"&Icirc;\"], [0, \"&Iuml;\"], [0, \"&ETH;\"], [0, \"&Ntilde;\"], [0, \"&Ograve;\"], [0, \"&Oacute;\"], [0, \"&Ocirc;\"], [0, \"&Otilde;\"], [0, \"&Ouml;\"], [0, \"&times;\"], [0, \"&Oslash;\"], [0, \"&Ugrave;\"], [0, \"&Uacute;\"], [0, \"&Ucirc;\"], [0, \"&Uuml;\"], [0, \"&Yacute;\"], [0, \"&THORN;\"], [0, \"&szlig;\"], [0, \"&agrave;\"], [0, \"&aacute;\"], [0, \"&acirc;\"], [0, \"&atilde;\"], [0, \"&auml;\"], [0, \"&aring;\"], [0, \"&aelig;\"], [0, \"&ccedil;\"], [0, \"&egrave;\"], [0, \"&eacute;\"], [0, \"&ecirc;\"], [0, \"&euml;\"], [0, \"&igrave;\"], [0, \"&iacute;\"], [0, \"&icirc;\"], [0, \"&iuml;\"], [0, \"&eth;\"], [0, \"&ntilde;\"], [0, \"&ograve;\"], [0, \"&oacute;\"], [0, \"&ocirc;\"], [0, \"&otilde;\"], [0, \"&ouml;\"], [0, \"&div;\"], [0, \"&oslash;\"], [0, \"&ugrave;\"], [0, \"&uacute;\"], [0, \"&ucirc;\"], [0, \"&uuml;\"], [0, \"&yacute;\"], [0, \"&thorn;\"], [0, \"&yuml;\"], [0, \"&Amacr;\"], [0, \"&amacr;\"], [0, \"&Abreve;\"], [0, \"&abreve;\"], [0, \"&Aogon;\"], [0, \"&aogon;\"], [0, \"&Cacute;\"], [0, \"&cacute;\"], [0, \"&Ccirc;\"], [0, \"&ccirc;\"], [0, \"&Cdot;\"], [0, \"&cdot;\"], [0, \"&Ccaron;\"], [0, \"&ccaron;\"], [0, \"&Dcaron;\"], [0, \"&dcaron;\"], [0, \"&Dstrok;\"], [0, \"&dstrok;\"], [0, \"&Emacr;\"], [0, \"&emacr;\"], [2, \"&Edot;\"], [0, \"&edot;\"], [0, \"&Eogon;\"], [0, \"&eogon;\"], [0, \"&Ecaron;\"], [0, \"&ecaron;\"], [0, \"&Gcirc;\"], [0, \"&gcirc;\"], [0, \"&Gbreve;\"], [0, \"&gbreve;\"], [0, \"&Gdot;\"], [0, \"&gdot;\"], [0, \"&Gcedil;\"], [1, \"&Hcirc;\"], [0, \"&hcirc;\"], [0, \"&Hstrok;\"], [0, \"&hstrok;\"], [0, \"&Itilde;\"], [0, \"&itilde;\"], [0, \"&Imacr;\"], [0, \"&imacr;\"], [2, \"&Iogon;\"], [0, \"&iogon;\"], [0, \"&Idot;\"], [0, \"&imath;\"], [0, \"&IJlig;\"], [0, \"&ijlig;\"], [0, \"&Jcirc;\"], [0, \"&jcirc;\"], [0, \"&Kcedil;\"], [0, \"&kcedil;\"], [0, \"&kgreen;\"], [0, \"&Lacute;\"], [0, \"&lacute;\"], [0, \"&Lcedil;\"], [0, \"&lcedil;\"], [0, \"&Lcaron;\"], [0, \"&lcaron;\"], [0, \"&Lmidot;\"], [0, \"&lmidot;\"], [0, \"&Lstrok;\"], [0, \"&lstrok;\"], [0, \"&Nacute;\"], [0, \"&nacute;\"], [0, \"&Ncedil;\"], [0, \"&ncedil;\"], [0, \"&Ncaron;\"], [0, \"&ncaron;\"], [0, \"&napos;\"], [0, \"&ENG;\"], [0, \"&eng;\"], [0, \"&Omacr;\"], [0, \"&omacr;\"], [2, \"&Odblac;\"], [0, \"&odblac;\"], [0, \"&OElig;\"], [0, \"&oelig;\"], [0, \"&Racute;\"], [0, \"&racute;\"], [0, \"&Rcedil;\"], [0, \"&rcedil;\"], [0, \"&Rcaron;\"], [0, \"&rcaron;\"], [0, \"&Sacute;\"], [0, \"&sacute;\"], [0, \"&Scirc;\"], [0, \"&scirc;\"], [0, \"&Scedil;\"], [0, \"&scedil;\"], [0, \"&Scaron;\"], [0, \"&scaron;\"], [0, \"&Tcedil;\"], [0, \"&tcedil;\"], [0, \"&Tcaron;\"], [0, \"&tcaron;\"], [0, \"&Tstrok;\"], [0, \"&tstrok;\"], [0, \"&Utilde;\"], [0, \"&utilde;\"], [0, \"&Umacr;\"], [0, \"&umacr;\"], [0, \"&Ubreve;\"], [0, \"&ubreve;\"], [0, \"&Uring;\"], [0, \"&uring;\"], [0, \"&Udblac;\"], [0, \"&udblac;\"], [0, \"&Uogon;\"], [0, \"&uogon;\"], [0, \"&Wcirc;\"], [0, \"&wcirc;\"], [0, \"&Ycirc;\"], [0, \"&ycirc;\"], [0, \"&Yuml;\"], [0, \"&Zacute;\"], [0, \"&zacute;\"], [0, \"&Zdot;\"], [0, \"&zdot;\"], [0, \"&Zcaron;\"], [0, \"&zcaron;\"], [19, \"&fnof;\"], [34, \"&imped;\"], [63, \"&gacute;\"], [65, \"&jmath;\"], [142, \"&circ;\"], [0, \"&caron;\"], [16, \"&breve;\"], [0, \"&DiacriticalDot;\"], [0, \"&ring;\"], [0, \"&ogon;\"], [0, \"&DiacriticalTilde;\"], [0, \"&dblac;\"], [51, \"&DownBreve;\"], [127, \"&Alpha;\"], [0, \"&Beta;\"], [0, \"&Gamma;\"], [0, \"&Delta;\"], [0, \"&Epsilon;\"], [0, \"&Zeta;\"], [0, \"&Eta;\"], [0, \"&Theta;\"], [0, \"&Iota;\"], [0, \"&Kappa;\"], [0, \"&Lambda;\"], [0, \"&Mu;\"], [0, \"&Nu;\"], [0, \"&Xi;\"], [0, \"&Omicron;\"], [0, \"&Pi;\"], [0, \"&Rho;\"], [1, \"&Sigma;\"], [0, \"&Tau;\"], [0, \"&Upsilon;\"], [0, \"&Phi;\"], [0, \"&Chi;\"], [0, \"&Psi;\"], [0, \"&ohm;\"], [7, \"&alpha;\"], [0, \"&beta;\"], [0, \"&gamma;\"], [0, \"&delta;\"], [0, \"&epsi;\"], [0, \"&zeta;\"], [0, \"&eta;\"], [0, \"&theta;\"], [0, \"&iota;\"], [0, \"&kappa;\"], [0, \"&lambda;\"], [0, \"&mu;\"], [0, \"&nu;\"], [0, \"&xi;\"], [0, \"&omicron;\"], [0, \"&pi;\"], [0, \"&rho;\"], [0, \"&sigmaf;\"], [0, \"&sigma;\"], [0, \"&tau;\"], [0, \"&upsi;\"], [0, \"&phi;\"], [0, \"&chi;\"], [0, \"&psi;\"], [0, \"&omega;\"], [7, \"&thetasym;\"], [0, \"&Upsi;\"], [2, \"&phiv;\"], [0, \"&piv;\"], [5, \"&Gammad;\"], [0, \"&digamma;\"], [18, \"&kappav;\"], [0, \"&rhov;\"], [3, \"&epsiv;\"], [0, \"&backepsilon;\"], [10, \"&IOcy;\"], [0, \"&DJcy;\"], [0, \"&GJcy;\"], [0, \"&Jukcy;\"], [0, \"&DScy;\"], [0, \"&Iukcy;\"], [0, \"&YIcy;\"], [0, \"&Jsercy;\"], [0, \"&LJcy;\"], [0, \"&NJcy;\"], [0, \"&TSHcy;\"], [0, \"&KJcy;\"], [1, \"&Ubrcy;\"], [0, \"&DZcy;\"], [0, \"&Acy;\"], [0, \"&Bcy;\"], [0, \"&Vcy;\"], [0, \"&Gcy;\"], [0, \"&Dcy;\"], [0, \"&IEcy;\"], [0, \"&ZHcy;\"], [0, \"&Zcy;\"], [0, \"&Icy;\"], [0, \"&Jcy;\"], [0, \"&Kcy;\"], [0, \"&Lcy;\"], [0, \"&Mcy;\"], [0, \"&Ncy;\"], [0, \"&Ocy;\"], [0, \"&Pcy;\"], [0, \"&Rcy;\"], [0, \"&Scy;\"], [0, \"&Tcy;\"], [0, \"&Ucy;\"], [0, \"&Fcy;\"], [0, \"&KHcy;\"], [0, \"&TScy;\"], [0, \"&CHcy;\"], [0, \"&SHcy;\"], [0, \"&SHCHcy;\"], [0, \"&HARDcy;\"], [0, \"&Ycy;\"], [0, \"&SOFTcy;\"], [0, \"&Ecy;\"], [0, \"&YUcy;\"], [0, \"&YAcy;\"], [0, \"&acy;\"], [0, \"&bcy;\"], [0, \"&vcy;\"], [0, \"&gcy;\"], [0, \"&dcy;\"], [0, \"&iecy;\"], [0, \"&zhcy;\"], [0, \"&zcy;\"], [0, \"&icy;\"], [0, \"&jcy;\"], [0, \"&kcy;\"], [0, \"&lcy;\"], [0, \"&mcy;\"], [0, \"&ncy;\"], [0, \"&ocy;\"], [0, \"&pcy;\"], [0, \"&rcy;\"], [0, \"&scy;\"], [0, \"&tcy;\"], [0, \"&ucy;\"], [0, \"&fcy;\"], [0, \"&khcy;\"], [0, \"&tscy;\"], [0, \"&chcy;\"], [0, \"&shcy;\"], [0, \"&shchcy;\"], [0, \"&hardcy;\"], [0, \"&ycy;\"], [0, \"&softcy;\"], [0, \"&ecy;\"], [0, \"&yucy;\"], [0, \"&yacy;\"], [1, \"&iocy;\"], [0, \"&djcy;\"], [0, \"&gjcy;\"], [0, \"&jukcy;\"], [0, \"&dscy;\"], [0, \"&iukcy;\"], [0, \"&yicy;\"], [0, \"&jsercy;\"], [0, \"&ljcy;\"], [0, \"&njcy;\"], [0, \"&tshcy;\"], [0, \"&kjcy;\"], [1, \"&ubrcy;\"], [0, \"&dzcy;\"], [7074, \"&ensp;\"], [0, \"&emsp;\"], [0, \"&emsp13;\"], [0, \"&emsp14;\"], [1, \"&numsp;\"], [0, \"&puncsp;\"], [0, \"&ThinSpace;\"], [0, \"&hairsp;\"], [0, \"&NegativeMediumSpace;\"], [0, \"&zwnj;\"], [0, \"&zwj;\"], [0, \"&lrm;\"], [0, \"&rlm;\"], [0, \"&dash;\"], [2, \"&ndash;\"], [0, \"&mdash;\"], [0, \"&horbar;\"], [0, \"&Verbar;\"], [1, \"&lsquo;\"], [0, \"&CloseCurlyQuote;\"], [0, \"&lsquor;\"], [1, \"&ldquo;\"], [0, \"&CloseCurlyDoubleQuote;\"], [0, \"&bdquo;\"], [1, \"&dagger;\"], [0, \"&Dagger;\"], [0, \"&bull;\"], [2, \"&nldr;\"], [0, \"&hellip;\"], [9, \"&permil;\"], [0, \"&pertenk;\"], [0, \"&prime;\"], [0, \"&Prime;\"], [0, \"&tprime;\"], [0, \"&backprime;\"], [3, \"&lsaquo;\"], [0, \"&rsaquo;\"], [3, \"&oline;\"], [2, \"&caret;\"], [1, \"&hybull;\"], [0, \"&frasl;\"], [10, \"&bsemi;\"], [7, \"&qprime;\"], [7, { v: \"&MediumSpace;\", n: 8202, o: \"&ThickSpace;\" }], [0, \"&NoBreak;\"], [0, \"&af;\"], [0, \"&InvisibleTimes;\"], [0, \"&ic;\"], [72, \"&euro;\"], [46, \"&tdot;\"], [0, \"&DotDot;\"], [37, \"&complexes;\"], [2, \"&incare;\"], [4, \"&gscr;\"], [0, \"&hamilt;\"], [0, \"&Hfr;\"], [0, \"&Hopf;\"], [0, \"&planckh;\"], [0, \"&hbar;\"], [0, \"&imagline;\"], [0, \"&Ifr;\"], [0, \"&lagran;\"], [0, \"&ell;\"], [1, \"&naturals;\"], [0, \"&numero;\"], [0, \"&copysr;\"], [0, \"&weierp;\"], [0, \"&Popf;\"], [0, \"&Qopf;\"], [0, \"&realine;\"], [0, \"&real;\"], [0, \"&reals;\"], [0, \"&rx;\"], [3, \"&trade;\"], [1, \"&integers;\"], [2, \"&mho;\"], [0, \"&zeetrf;\"], [0, \"&iiota;\"], [2, \"&bernou;\"], [0, \"&Cayleys;\"], [1, \"&escr;\"], [0, \"&Escr;\"], [0, \"&Fouriertrf;\"], [1, \"&Mellintrf;\"], [0, \"&order;\"], [0, \"&alefsym;\"], [0, \"&beth;\"], [0, \"&gimel;\"], [0, \"&daleth;\"], [12, \"&CapitalDifferentialD;\"], [0, \"&dd;\"], [0, \"&ee;\"], [0, \"&ii;\"], [10, \"&frac13;\"], [0, \"&frac23;\"], [0, \"&frac15;\"], [0, \"&frac25;\"], [0, \"&frac35;\"], [0, \"&frac45;\"], [0, \"&frac16;\"], [0, \"&frac56;\"], [0, \"&frac18;\"], [0, \"&frac38;\"], [0, \"&frac58;\"], [0, \"&frac78;\"], [49, \"&larr;\"], [0, \"&ShortUpArrow;\"], [0, \"&rarr;\"], [0, \"&darr;\"], [0, \"&harr;\"], [0, \"&updownarrow;\"], [0, \"&nwarr;\"], [0, \"&nearr;\"], [0, \"&LowerRightArrow;\"], [0, \"&LowerLeftArrow;\"], [0, \"&nlarr;\"], [0, \"&nrarr;\"], [1, { v: \"&rarrw;\", n: 824, o: \"&nrarrw;\" }], [0, \"&Larr;\"], [0, \"&Uarr;\"], [0, \"&Rarr;\"], [0, \"&Darr;\"], [0, \"&larrtl;\"], [0, \"&rarrtl;\"], [0, \"&LeftTeeArrow;\"], [0, \"&mapstoup;\"], [0, \"&map;\"], [0, \"&DownTeeArrow;\"], [1, \"&hookleftarrow;\"], [0, \"&hookrightarrow;\"], [0, \"&larrlp;\"], [0, \"&looparrowright;\"], [0, \"&harrw;\"], [0, \"&nharr;\"], [1, \"&lsh;\"], [0, \"&rsh;\"], [0, \"&ldsh;\"], [0, \"&rdsh;\"], [1, \"&crarr;\"], [0, \"&cularr;\"], [0, \"&curarr;\"], [2, \"&circlearrowleft;\"], [0, \"&circlearrowright;\"], [0, \"&leftharpoonup;\"], [0, \"&DownLeftVector;\"], [0, \"&RightUpVector;\"], [0, \"&LeftUpVector;\"], [0, \"&rharu;\"], [0, \"&DownRightVector;\"], [0, \"&dharr;\"], [0, \"&dharl;\"], [0, \"&RightArrowLeftArrow;\"], [0, \"&udarr;\"], [0, \"&LeftArrowRightArrow;\"], [0, \"&leftleftarrows;\"], [0, \"&upuparrows;\"], [0, \"&rightrightarrows;\"], [0, \"&ddarr;\"], [0, \"&leftrightharpoons;\"], [0, \"&Equilibrium;\"], [0, \"&nlArr;\"], [0, \"&nhArr;\"], [0, \"&nrArr;\"], [0, \"&DoubleLeftArrow;\"], [0, \"&DoubleUpArrow;\"], [0, \"&DoubleRightArrow;\"], [0, \"&dArr;\"], [0, \"&DoubleLeftRightArrow;\"], [0, \"&DoubleUpDownArrow;\"], [0, \"&nwArr;\"], [0, \"&neArr;\"], [0, \"&seArr;\"], [0, \"&swArr;\"], [0, \"&lAarr;\"], [0, \"&rAarr;\"], [1, \"&zigrarr;\"], [6, \"&larrb;\"], [0, \"&rarrb;\"], [15, \"&DownArrowUpArrow;\"], [7, \"&loarr;\"], [0, \"&roarr;\"], [0, \"&hoarr;\"], [0, \"&forall;\"], [0, \"&comp;\"], [0, { v: \"&part;\", n: 824, o: \"&npart;\" }], [0, \"&exist;\"], [0, \"&nexist;\"], [0, \"&empty;\"], [1, \"&Del;\"], [0, \"&Element;\"], [0, \"&NotElement;\"], [1, \"&ni;\"], [0, \"&notni;\"], [2, \"&prod;\"], [0, \"&coprod;\"], [0, \"&sum;\"], [0, \"&minus;\"], [0, \"&MinusPlus;\"], [0, \"&dotplus;\"], [1, \"&Backslash;\"], [0, \"&lowast;\"], [0, \"&compfn;\"], [1, \"&radic;\"], [2, \"&prop;\"], [0, \"&infin;\"], [0, \"&angrt;\"], [0, { v: \"&ang;\", n: 8402, o: \"&nang;\" }], [0, \"&angmsd;\"], [0, \"&angsph;\"], [0, \"&mid;\"], [0, \"&nmid;\"], [0, \"&DoubleVerticalBar;\"], [0, \"&NotDoubleVerticalBar;\"], [0, \"&and;\"], [0, \"&or;\"], [0, { v: \"&cap;\", n: 65024, o: \"&caps;\" }], [0, { v: \"&cup;\", n: 65024, o: \"&cups;\" }], [0, \"&int;\"], [0, \"&Int;\"], [0, \"&iiint;\"], [0, \"&conint;\"], [0, \"&Conint;\"], [0, \"&Cconint;\"], [0, \"&cwint;\"], [0, \"&ClockwiseContourIntegral;\"], [0, \"&awconint;\"], [0, \"&there4;\"], [0, \"&becaus;\"], [0, \"&ratio;\"], [0, \"&Colon;\"], [0, \"&dotminus;\"], [1, \"&mDDot;\"], [0, \"&homtht;\"], [0, { v: \"&sim;\", n: 8402, o: \"&nvsim;\" }], [0, { v: \"&backsim;\", n: 817, o: \"&race;\" }], [0, { v: \"&ac;\", n: 819, o: \"&acE;\" }], [0, \"&acd;\"], [0, \"&VerticalTilde;\"], [0, \"&NotTilde;\"], [0, { v: \"&eqsim;\", n: 824, o: \"&nesim;\" }], [0, \"&sime;\"], [0, \"&NotTildeEqual;\"], [0, \"&cong;\"], [0, \"&simne;\"], [0, \"&ncong;\"], [0, \"&ap;\"], [0, \"&nap;\"], [0, \"&ape;\"], [0, { v: \"&apid;\", n: 824, o: \"&napid;\" }], [0, \"&backcong;\"], [0, { v: \"&asympeq;\", n: 8402, o: \"&nvap;\" }], [0, { v: \"&bump;\", n: 824, o: \"&nbump;\" }], [0, { v: \"&bumpe;\", n: 824, o: \"&nbumpe;\" }], [0, { v: \"&doteq;\", n: 824, o: \"&nedot;\" }], [0, \"&doteqdot;\"], [0, \"&efDot;\"], [0, \"&erDot;\"], [0, \"&Assign;\"], [0, \"&ecolon;\"], [0, \"&ecir;\"], [0, \"&circeq;\"], [1, \"&wedgeq;\"], [0, \"&veeeq;\"], [1, \"&triangleq;\"], [2, \"&equest;\"], [0, \"&ne;\"], [0, { v: \"&Congruent;\", n: 8421, o: \"&bnequiv;\" }], [0, \"&nequiv;\"], [1, { v: \"&le;\", n: 8402, o: \"&nvle;\" }], [0, { v: \"&ge;\", n: 8402, o: \"&nvge;\" }], [0, { v: \"&lE;\", n: 824, o: \"&nlE;\" }], [0, { v: \"&gE;\", n: 824, o: \"&ngE;\" }], [0, { v: \"&lnE;\", n: 65024, o: \"&lvertneqq;\" }], [0, { v: \"&gnE;\", n: 65024, o: \"&gvertneqq;\" }], [0, { v: \"&ll;\", n: new Map(/* #__PURE__ */ restoreDiff([[824, \"&nLtv;\"], [7577, \"&nLt;\"]])) }], [0, { v: \"&gg;\", n: new Map(/* #__PURE__ */ restoreDiff([[824, \"&nGtv;\"], [7577, \"&nGt;\"]])) }], [0, \"&between;\"], [0, \"&NotCupCap;\"], [0, \"&nless;\"], [0, \"&ngt;\"], [0, \"&nle;\"], [0, \"&nge;\"], [0, \"&lesssim;\"], [0, \"&GreaterTilde;\"], [0, \"&nlsim;\"], [0, \"&ngsim;\"], [0, \"&LessGreater;\"], [0, \"&gl;\"], [0, \"&NotLessGreater;\"], [0, \"&NotGreaterLess;\"], [0, \"&pr;\"], [0, \"&sc;\"], [0, \"&prcue;\"], [0, \"&sccue;\"], [0, \"&PrecedesTilde;\"], [0, { v: \"&scsim;\", n: 824, o: \"&NotSucceedsTilde;\" }], [0, \"&NotPrecedes;\"], [0, \"&NotSucceeds;\"], [0, { v: \"&sub;\", n: 8402, o: \"&NotSubset;\" }], [0, { v: \"&sup;\", n: 8402, o: \"&NotSuperset;\" }], [0, \"&nsub;\"], [0, \"&nsup;\"], [0, \"&sube;\"], [0, \"&supe;\"], [0, \"&NotSubsetEqual;\"], [0, \"&NotSupersetEqual;\"], [0, { v: \"&subne;\", n: 65024, o: \"&varsubsetneq;\" }], [0, { v: \"&supne;\", n: 65024, o: \"&varsupsetneq;\" }], [1, \"&cupdot;\"], [0, \"&UnionPlus;\"], [0, { v: \"&sqsub;\", n: 824, o: \"&NotSquareSubset;\" }], [0, { v: \"&sqsup;\", n: 824, o: \"&NotSquareSuperset;\" }], [0, \"&sqsube;\"], [0, \"&sqsupe;\"], [0, { v: \"&sqcap;\", n: 65024, o: \"&sqcaps;\" }], [0, { v: \"&sqcup;\", n: 65024, o: \"&sqcups;\" }], [0, \"&CirclePlus;\"], [0, \"&CircleMinus;\"], [0, \"&CircleTimes;\"], [0, \"&osol;\"], [0, \"&CircleDot;\"], [0, \"&circledcirc;\"], [0, \"&circledast;\"], [1, \"&circleddash;\"], [0, \"&boxplus;\"], [0, \"&boxminus;\"], [0, \"&boxtimes;\"], [0, \"&dotsquare;\"], [0, \"&RightTee;\"], [0, \"&dashv;\"], [0, \"&DownTee;\"], [0, \"&bot;\"], [1, \"&models;\"], [0, \"&DoubleRightTee;\"], [0, \"&Vdash;\"], [0, \"&Vvdash;\"], [0, \"&VDash;\"], [0, \"&nvdash;\"], [0, \"&nvDash;\"], [0, \"&nVdash;\"], [0, \"&nVDash;\"], [0, \"&prurel;\"], [1, \"&LeftTriangle;\"], [0, \"&RightTriangle;\"], [0, { v: \"&LeftTriangleEqual;\", n: 8402, o: \"&nvltrie;\" }], [0, { v: \"&RightTriangleEqual;\", n: 8402, o: \"&nvrtrie;\" }], [0, \"&origof;\"], [0, \"&imof;\"], [0, \"&multimap;\"], [0, \"&hercon;\"], [0, \"&intcal;\"], [0, \"&veebar;\"], [1, \"&barvee;\"], [0, \"&angrtvb;\"], [0, \"&lrtri;\"], [0, \"&bigwedge;\"], [0, \"&bigvee;\"], [0, \"&bigcap;\"], [0, \"&bigcup;\"], [0, \"&diam;\"], [0, \"&sdot;\"], [0, \"&sstarf;\"], [0, \"&divideontimes;\"], [0, \"&bowtie;\"], [0, \"&ltimes;\"], [0, \"&rtimes;\"], [0, \"&leftthreetimes;\"], [0, \"&rightthreetimes;\"], [0, \"&backsimeq;\"], [0, \"&curlyvee;\"], [0, \"&curlywedge;\"], [0, \"&Sub;\"], [0, \"&Sup;\"], [0, \"&Cap;\"], [0, \"&Cup;\"], [0, \"&fork;\"], [0, \"&epar;\"], [0, \"&lessdot;\"], [0, \"&gtdot;\"], [0, { v: \"&Ll;\", n: 824, o: \"&nLl;\" }], [0, { v: \"&Gg;\", n: 824, o: \"&nGg;\" }], [0, { v: \"&leg;\", n: 65024, o: \"&lesg;\" }], [0, { v: \"&gel;\", n: 65024, o: \"&gesl;\" }], [2, \"&cuepr;\"], [0, \"&cuesc;\"], [0, \"&NotPrecedesSlantEqual;\"], [0, \"&NotSucceedsSlantEqual;\"], [0, \"&NotSquareSubsetEqual;\"], [0, \"&NotSquareSupersetEqual;\"], [2, \"&lnsim;\"], [0, \"&gnsim;\"], [0, \"&precnsim;\"], [0, \"&scnsim;\"], [0, \"&nltri;\"], [0, \"&NotRightTriangle;\"], [0, \"&nltrie;\"], [0, \"&NotRightTriangleEqual;\"], [0, \"&vellip;\"], [0, \"&ctdot;\"], [0, \"&utdot;\"], [0, \"&dtdot;\"], [0, \"&disin;\"], [0, \"&isinsv;\"], [0, \"&isins;\"], [0, { v: \"&isindot;\", n: 824, o: \"&notindot;\" }], [0, \"&notinvc;\"], [0, \"&notinvb;\"], [1, { v: \"&isinE;\", n: 824, o: \"&notinE;\" }], [0, \"&nisd;\"], [0, \"&xnis;\"], [0, \"&nis;\"], [0, \"&notnivc;\"], [0, \"&notnivb;\"], [6, \"&barwed;\"], [0, \"&Barwed;\"], [1, \"&lceil;\"], [0, \"&rceil;\"], [0, \"&LeftFloor;\"], [0, \"&rfloor;\"], [0, \"&drcrop;\"], [0, \"&dlcrop;\"], [0, \"&urcrop;\"], [0, \"&ulcrop;\"], [0, \"&bnot;\"], [1, \"&profline;\"], [0, \"&profsurf;\"], [1, \"&telrec;\"], [0, \"&target;\"], [5, \"&ulcorn;\"], [0, \"&urcorn;\"], [0, \"&dlcorn;\"], [0, \"&drcorn;\"], [2, \"&frown;\"], [0, \"&smile;\"], [9, \"&cylcty;\"], [0, \"&profalar;\"], [7, \"&topbot;\"], [6, \"&ovbar;\"], [1, \"&solbar;\"], [60, \"&angzarr;\"], [51, \"&lmoustache;\"], [0, \"&rmoustache;\"], [2, \"&OverBracket;\"], [0, \"&bbrk;\"], [0, \"&bbrktbrk;\"], [37, \"&OverParenthesis;\"], [0, \"&UnderParenthesis;\"], [0, \"&OverBrace;\"], [0, \"&UnderBrace;\"], [2, \"&trpezium;\"], [4, \"&elinters;\"], [59, \"&blank;\"], [164, \"&circledS;\"], [55, \"&boxh;\"], [1, \"&boxv;\"], [9, \"&boxdr;\"], [3, \"&boxdl;\"], [3, \"&boxur;\"], [3, \"&boxul;\"], [3, \"&boxvr;\"], [7, \"&boxvl;\"], [7, \"&boxhd;\"], [7, \"&boxhu;\"], [7, \"&boxvh;\"], [19, \"&boxH;\"], [0, \"&boxV;\"], [0, \"&boxdR;\"], [0, \"&boxDr;\"], [0, \"&boxDR;\"], [0, \"&boxdL;\"], [0, \"&boxDl;\"], [0, \"&boxDL;\"], [0, \"&boxuR;\"], [0, \"&boxUr;\"], [0, \"&boxUR;\"], [0, \"&boxuL;\"], [0, \"&boxUl;\"], [0, \"&boxUL;\"], [0, \"&boxvR;\"], [0, \"&boxVr;\"], [0, \"&boxVR;\"], [0, \"&boxvL;\"], [0, \"&boxVl;\"], [0, \"&boxVL;\"], [0, \"&boxHd;\"], [0, \"&boxhD;\"], [0, \"&boxHD;\"], [0, \"&boxHu;\"], [0, \"&boxhU;\"], [0, \"&boxHU;\"], [0, \"&boxvH;\"], [0, \"&boxVh;\"], [0, \"&boxVH;\"], [19, \"&uhblk;\"], [3, \"&lhblk;\"], [3, \"&block;\"], [8, \"&blk14;\"], [0, \"&blk12;\"], [0, \"&blk34;\"], [13, \"&square;\"], [8, \"&blacksquare;\"], [0, \"&EmptyVerySmallSquare;\"], [1, \"&rect;\"], [0, \"&marker;\"], [2, \"&fltns;\"], [1, \"&bigtriangleup;\"], [0, \"&blacktriangle;\"], [0, \"&triangle;\"], [2, \"&blacktriangleright;\"], [0, \"&rtri;\"], [3, \"&bigtriangledown;\"], [0, \"&blacktriangledown;\"], [0, \"&dtri;\"], [2, \"&blacktriangleleft;\"], [0, \"&ltri;\"], [6, \"&loz;\"], [0, \"&cir;\"], [32, \"&tridot;\"], [2, \"&bigcirc;\"], [8, \"&ultri;\"], [0, \"&urtri;\"], [0, \"&lltri;\"], [0, \"&EmptySmallSquare;\"], [0, \"&FilledSmallSquare;\"], [8, \"&bigstar;\"], [0, \"&star;\"], [7, \"&phone;\"], [49, \"&female;\"], [1, \"&male;\"], [29, \"&spades;\"], [2, \"&clubs;\"], [1, \"&hearts;\"], [0, \"&diamondsuit;\"], [3, \"&sung;\"], [2, \"&flat;\"], [0, \"&natural;\"], [0, \"&sharp;\"], [163, \"&check;\"], [3, \"&cross;\"], [8, \"&malt;\"], [21, \"&sext;\"], [33, \"&VerticalSeparator;\"], [25, \"&lbbrk;\"], [0, \"&rbbrk;\"], [84, \"&bsolhsub;\"], [0, \"&suphsol;\"], [28, \"&LeftDoubleBracket;\"], [0, \"&RightDoubleBracket;\"], [0, \"&lang;\"], [0, \"&rang;\"], [0, \"&Lang;\"], [0, \"&Rang;\"], [0, \"&loang;\"], [0, \"&roang;\"], [7, \"&longleftarrow;\"], [0, \"&longrightarrow;\"], [0, \"&longleftrightarrow;\"], [0, \"&DoubleLongLeftArrow;\"], [0, \"&DoubleLongRightArrow;\"], [0, \"&DoubleLongLeftRightArrow;\"], [1, \"&longmapsto;\"], [2, \"&dzigrarr;\"], [258, \"&nvlArr;\"], [0, \"&nvrArr;\"], [0, \"&nvHarr;\"], [0, \"&Map;\"], [6, \"&lbarr;\"], [0, \"&bkarow;\"], [0, \"&lBarr;\"], [0, \"&dbkarow;\"], [0, \"&drbkarow;\"], [0, \"&DDotrahd;\"], [0, \"&UpArrowBar;\"], [0, \"&DownArrowBar;\"], [2, \"&Rarrtl;\"], [2, \"&latail;\"], [0, \"&ratail;\"], [0, \"&lAtail;\"], [0, \"&rAtail;\"], [0, \"&larrfs;\"], [0, \"&rarrfs;\"], [0, \"&larrbfs;\"], [0, \"&rarrbfs;\"], [2, \"&nwarhk;\"], [0, \"&nearhk;\"], [0, \"&hksearow;\"], [0, \"&hkswarow;\"], [0, \"&nwnear;\"], [0, \"&nesear;\"], [0, \"&seswar;\"], [0, \"&swnwar;\"], [8, { v: \"&rarrc;\", n: 824, o: \"&nrarrc;\" }], [1, \"&cudarrr;\"], [0, \"&ldca;\"], [0, \"&rdca;\"], [0, \"&cudarrl;\"], [0, \"&larrpl;\"], [2, \"&curarrm;\"], [0, \"&cularrp;\"], [7, \"&rarrpl;\"], [2, \"&harrcir;\"], [0, \"&Uarrocir;\"], [0, \"&lurdshar;\"], [0, \"&ldrushar;\"], [2, \"&LeftRightVector;\"], [0, \"&RightUpDownVector;\"], [0, \"&DownLeftRightVector;\"], [0, \"&LeftUpDownVector;\"], [0, \"&LeftVectorBar;\"], [0, \"&RightVectorBar;\"], [0, \"&RightUpVectorBar;\"], [0, \"&RightDownVectorBar;\"], [0, \"&DownLeftVectorBar;\"], [0, \"&DownRightVectorBar;\"], [0, \"&LeftUpVectorBar;\"], [0, \"&LeftDownVectorBar;\"], [0, \"&LeftTeeVector;\"], [0, \"&RightTeeVector;\"], [0, \"&RightUpTeeVector;\"], [0, \"&RightDownTeeVector;\"], [0, \"&DownLeftTeeVector;\"], [0, \"&DownRightTeeVector;\"], [0, \"&LeftUpTeeVector;\"], [0, \"&LeftDownTeeVector;\"], [0, \"&lHar;\"], [0, \"&uHar;\"], [0, \"&rHar;\"], [0, \"&dHar;\"], [0, \"&luruhar;\"], [0, \"&ldrdhar;\"], [0, \"&ruluhar;\"], [0, \"&rdldhar;\"], [0, \"&lharul;\"], [0, \"&llhard;\"], [0, \"&rharul;\"], [0, \"&lrhard;\"], [0, \"&udhar;\"], [0, \"&duhar;\"], [0, \"&RoundImplies;\"], [0, \"&erarr;\"], [0, \"&simrarr;\"], [0, \"&larrsim;\"], [0, \"&rarrsim;\"], [0, \"&rarrap;\"], [0, \"&ltlarr;\"], [1, \"&gtrarr;\"], [0, \"&subrarr;\"], [1, \"&suplarr;\"], [0, \"&lfisht;\"], [0, \"&rfisht;\"], [0, \"&ufisht;\"], [0, \"&dfisht;\"], [5, \"&lopar;\"], [0, \"&ropar;\"], [4, \"&lbrke;\"], [0, \"&rbrke;\"], [0, \"&lbrkslu;\"], [0, \"&rbrksld;\"], [0, \"&lbrksld;\"], [0, \"&rbrkslu;\"], [0, \"&langd;\"], [0, \"&rangd;\"], [0, \"&lparlt;\"], [0, \"&rpargt;\"], [0, \"&gtlPar;\"], [0, \"&ltrPar;\"], [3, \"&vzigzag;\"], [1, \"&vangrt;\"], [0, \"&angrtvbd;\"], [6, \"&ange;\"], [0, \"&range;\"], [0, \"&dwangle;\"], [0, \"&uwangle;\"], [0, \"&angmsdaa;\"], [0, \"&angmsdab;\"], [0, \"&angmsdac;\"], [0, \"&angmsdad;\"], [0, \"&angmsdae;\"], [0, \"&angmsdaf;\"], [0, \"&angmsdag;\"], [0, \"&angmsdah;\"], [0, \"&bemptyv;\"], [0, \"&demptyv;\"], [0, \"&cemptyv;\"], [0, \"&raemptyv;\"], [0, \"&laemptyv;\"], [0, \"&ohbar;\"], [0, \"&omid;\"], [0, \"&opar;\"], [1, \"&operp;\"], [1, \"&olcross;\"], [0, \"&odsold;\"], [1, \"&olcir;\"], [0, \"&ofcir;\"], [0, \"&olt;\"], [0, \"&ogt;\"], [0, \"&cirscir;\"], [0, \"&cirE;\"], [0, \"&solb;\"], [0, \"&bsolb;\"], [3, \"&boxbox;\"], [3, \"&trisb;\"], [0, \"&rtriltri;\"], [0, { v: \"&LeftTriangleBar;\", n: 824, o: \"&NotLeftTriangleBar;\" }], [0, { v: \"&RightTriangleBar;\", n: 824, o: \"&NotRightTriangleBar;\" }], [11, \"&iinfin;\"], [0, \"&infintie;\"], [0, \"&nvinfin;\"], [4, \"&eparsl;\"], [0, \"&smeparsl;\"], [0, \"&eqvparsl;\"], [5, \"&blacklozenge;\"], [8, \"&RuleDelayed;\"], [1, \"&dsol;\"], [9, \"&bigodot;\"], [0, \"&bigoplus;\"], [0, \"&bigotimes;\"], [1, \"&biguplus;\"], [1, \"&bigsqcup;\"], [5, \"&iiiint;\"], [0, \"&fpartint;\"], [2, \"&cirfnint;\"], [0, \"&awint;\"], [0, \"&rppolint;\"], [0, \"&scpolint;\"], [0, \"&npolint;\"], [0, \"&pointint;\"], [0, \"&quatint;\"], [0, \"&intlarhk;\"], [10, \"&pluscir;\"], [0, \"&plusacir;\"], [0, \"&simplus;\"], [0, \"&plusdu;\"], [0, \"&plussim;\"], [0, \"&plustwo;\"], [1, \"&mcomma;\"], [0, \"&minusdu;\"], [2, \"&loplus;\"], [0, \"&roplus;\"], [0, \"&Cross;\"], [0, \"&timesd;\"], [0, \"&timesbar;\"], [1, \"&smashp;\"], [0, \"&lotimes;\"], [0, \"&rotimes;\"], [0, \"&otimesas;\"], [0, \"&Otimes;\"], [0, \"&odiv;\"], [0, \"&triplus;\"], [0, \"&triminus;\"], [0, \"&tritime;\"], [0, \"&intprod;\"], [2, \"&amalg;\"], [0, \"&capdot;\"], [1, \"&ncup;\"], [0, \"&ncap;\"], [0, \"&capand;\"], [0, \"&cupor;\"], [0, \"&cupcap;\"], [0, \"&capcup;\"], [0, \"&cupbrcap;\"], [0, \"&capbrcup;\"], [0, \"&cupcup;\"], [0, \"&capcap;\"], [0, \"&ccups;\"], [0, \"&ccaps;\"], [2, \"&ccupssm;\"], [2, \"&And;\"], [0, \"&Or;\"], [0, \"&andand;\"], [0, \"&oror;\"], [0, \"&orslope;\"], [0, \"&andslope;\"], [1, \"&andv;\"], [0, \"&orv;\"], [0, \"&andd;\"], [0, \"&ord;\"], [1, \"&wedbar;\"], [6, \"&sdote;\"], [3, \"&simdot;\"], [2, { v: \"&congdot;\", n: 824, o: \"&ncongdot;\" }], [0, \"&easter;\"], [0, \"&apacir;\"], [0, { v: \"&apE;\", n: 824, o: \"&napE;\" }], [0, \"&eplus;\"], [0, \"&pluse;\"], [0, \"&Esim;\"], [0, \"&Colone;\"], [0, \"&Equal;\"], [1, \"&ddotseq;\"], [0, \"&equivDD;\"], [0, \"&ltcir;\"], [0, \"&gtcir;\"], [0, \"&ltquest;\"], [0, \"&gtquest;\"], [0, { v: \"&leqslant;\", n: 824, o: \"&nleqslant;\" }], [0, { v: \"&geqslant;\", n: 824, o: \"&ngeqslant;\" }], [0, \"&lesdot;\"], [0, \"&gesdot;\"], [0, \"&lesdoto;\"], [0, \"&gesdoto;\"], [0, \"&lesdotor;\"], [0, \"&gesdotol;\"], [0, \"&lap;\"], [0, \"&gap;\"], [0, \"&lne;\"], [0, \"&gne;\"], [0, \"&lnap;\"], [0, \"&gnap;\"], [0, \"&lEg;\"], [0, \"&gEl;\"], [0, \"&lsime;\"], [0, \"&gsime;\"], [0, \"&lsimg;\"], [0, \"&gsiml;\"], [0, \"&lgE;\"], [0, \"&glE;\"], [0, \"&lesges;\"], [0, \"&gesles;\"], [0, \"&els;\"], [0, \"&egs;\"], [0, \"&elsdot;\"], [0, \"&egsdot;\"], [0, \"&el;\"], [0, \"&eg;\"], [2, \"&siml;\"], [0, \"&simg;\"], [0, \"&simlE;\"], [0, \"&simgE;\"], [0, { v: \"&LessLess;\", n: 824, o: \"&NotNestedLessLess;\" }], [0, { v: \"&GreaterGreater;\", n: 824, o: \"&NotNestedGreaterGreater;\" }], [1, \"&glj;\"], [0, \"&gla;\"], [0, \"&ltcc;\"], [0, \"&gtcc;\"], [0, \"&lescc;\"], [0, \"&gescc;\"], [0, \"&smt;\"], [0, \"&lat;\"], [0, { v: \"&smte;\", n: 65024, o: \"&smtes;\" }], [0, { v: \"&late;\", n: 65024, o: \"&lates;\" }], [0, \"&bumpE;\"], [0, { v: \"&PrecedesEqual;\", n: 824, o: \"&NotPrecedesEqual;\" }], [0, { v: \"&sce;\", n: 824, o: \"&NotSucceedsEqual;\" }], [2, \"&prE;\"], [0, \"&scE;\"], [0, \"&precneqq;\"], [0, \"&scnE;\"], [0, \"&prap;\"], [0, \"&scap;\"], [0, \"&precnapprox;\"], [0, \"&scnap;\"], [0, \"&Pr;\"], [0, \"&Sc;\"], [0, \"&subdot;\"], [0, \"&supdot;\"], [0, \"&subplus;\"], [0, \"&supplus;\"], [0, \"&submult;\"], [0, \"&supmult;\"], [0, \"&subedot;\"], [0, \"&supedot;\"], [0, { v: \"&subE;\", n: 824, o: \"&nsubE;\" }], [0, { v: \"&supE;\", n: 824, o: \"&nsupE;\" }], [0, \"&subsim;\"], [0, \"&supsim;\"], [2, { v: \"&subnE;\", n: 65024, o: \"&varsubsetneqq;\" }], [0, { v: \"&supnE;\", n: 65024, o: \"&varsupsetneqq;\" }], [2, \"&csub;\"], [0, \"&csup;\"], [0, \"&csube;\"], [0, \"&csupe;\"], [0, \"&subsup;\"], [0, \"&supsub;\"], [0, \"&subsub;\"], [0, \"&supsup;\"], [0, \"&suphsub;\"], [0, \"&supdsub;\"], [0, \"&forkv;\"], [0, \"&topfork;\"], [0, \"&mlcp;\"], [8, \"&Dashv;\"], [1, \"&Vdashl;\"], [0, \"&Barv;\"], [0, \"&vBar;\"], [0, \"&vBarv;\"], [1, \"&Vbar;\"], [0, \"&Not;\"], [0, \"&bNot;\"], [0, \"&rnmid;\"], [0, \"&cirmid;\"], [0, \"&midcir;\"], [0, \"&topcir;\"], [0, \"&nhpar;\"], [0, \"&parsim;\"], [9, { v: \"&parsl;\", n: 8421, o: \"&nparsl;\" }], [44343, { n: new Map(/* #__PURE__ */ restoreDiff([[56476, \"&Ascr;\"], [1, \"&Cscr;\"], [0, \"&Dscr;\"], [2, \"&Gscr;\"], [2, \"&Jscr;\"], [0, \"&Kscr;\"], [2, \"&Nscr;\"], [0, \"&Oscr;\"], [0, \"&Pscr;\"], [0, \"&Qscr;\"], [1, \"&Sscr;\"], [0, \"&Tscr;\"], [0, \"&Uscr;\"], [0, \"&Vscr;\"], [0, \"&Wscr;\"], [0, \"&Xscr;\"], [0, \"&Yscr;\"], [0, \"&Zscr;\"], [0, \"&ascr;\"], [0, \"&bscr;\"], [0, \"&cscr;\"], [0, \"&dscr;\"], [1, \"&fscr;\"], [1, \"&hscr;\"], [0, \"&iscr;\"], [0, \"&jscr;\"], [0, \"&kscr;\"], [0, \"&lscr;\"], [0, \"&mscr;\"], [0, \"&nscr;\"], [1, \"&pscr;\"], [0, \"&qscr;\"], [0, \"&rscr;\"], [0, \"&sscr;\"], [0, \"&tscr;\"], [0, \"&uscr;\"], [0, \"&vscr;\"], [0, \"&wscr;\"], [0, \"&xscr;\"], [0, \"&yscr;\"], [0, \"&zscr;\"], [52, \"&Afr;\"], [0, \"&Bfr;\"], [1, \"&Dfr;\"], [0, \"&Efr;\"], [0, \"&Ffr;\"], [0, \"&Gfr;\"], [2, \"&Jfr;\"], [0, \"&Kfr;\"], [0, \"&Lfr;\"], [0, \"&Mfr;\"], [0, \"&Nfr;\"], [0, \"&Ofr;\"], [0, \"&Pfr;\"], [0, \"&Qfr;\"], [1, \"&Sfr;\"], [0, \"&Tfr;\"], [0, \"&Ufr;\"], [0, \"&Vfr;\"], [0, \"&Wfr;\"], [0, \"&Xfr;\"], [0, \"&Yfr;\"], [1, \"&afr;\"], [0, \"&bfr;\"], [0, \"&cfr;\"], [0, \"&dfr;\"], [0, \"&efr;\"], [0, \"&ffr;\"], [0, \"&gfr;\"], [0, \"&hfr;\"], [0, \"&ifr;\"], [0, \"&jfr;\"], [0, \"&kfr;\"], [0, \"&lfr;\"], [0, \"&mfr;\"], [0, \"&nfr;\"], [0, \"&ofr;\"], [0, \"&pfr;\"], [0, \"&qfr;\"], [0, \"&rfr;\"], [0, \"&sfr;\"], [0, \"&tfr;\"], [0, \"&ufr;\"], [0, \"&vfr;\"], [0, \"&wfr;\"], [0, \"&xfr;\"], [0, \"&yfr;\"], [0, \"&zfr;\"], [0, \"&Aopf;\"], [0, \"&Bopf;\"], [1, \"&Dopf;\"], [0, \"&Eopf;\"], [0, \"&Fopf;\"], [0, \"&Gopf;\"], [1, \"&Iopf;\"], [0, \"&Jopf;\"], [0, \"&Kopf;\"], [0, \"&Lopf;\"], [0, \"&Mopf;\"], [1, \"&Oopf;\"], [3, \"&Sopf;\"], [0, \"&Topf;\"], [0, \"&Uopf;\"], [0, \"&Vopf;\"], [0, \"&Wopf;\"], [0, \"&Xopf;\"], [0, \"&Yopf;\"], [1, \"&aopf;\"], [0, \"&bopf;\"], [0, \"&copf;\"], [0, \"&dopf;\"], [0, \"&eopf;\"], [0, \"&fopf;\"], [0, \"&gopf;\"], [0, \"&hopf;\"], [0, \"&iopf;\"], [0, \"&jopf;\"], [0, \"&kopf;\"], [0, \"&lopf;\"], [0, \"&mopf;\"], [0, \"&nopf;\"], [0, \"&oopf;\"], [0, \"&popf;\"], [0, \"&qopf;\"], [0, \"&ropf;\"], [0, \"&sopf;\"], [0, \"&topf;\"], [0, \"&uopf;\"], [0, \"&vopf;\"], [0, \"&wopf;\"], [0, \"&xopf;\"], [0, \"&yopf;\"], [0, \"&zopf;\"]])) }], [8906, \"&fflig;\"], [0, \"&filig;\"], [0, \"&fllig;\"], [0, \"&ffilig;\"], [0, \"&ffllig;\"]]));\n//# sourceMappingURL=encode-html.js.map","export const xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? (str, index) => str.codePointAt(index)\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        (c, index) => (c.charCodeAt(index) & 0xfc00) === 0xd800\n            ? (c.charCodeAt(index) - 0xd800) * 0x400 +\n                c.charCodeAt(index + 1) -\n                0xdc00 +\n                0x10000\n            : c.charCodeAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(str) {\n    let ret = \"\";\n    let lastIdx = 0;\n    let match;\n    while ((match = xmlReplacer.exec(str)) !== null) {\n        const i = match.index;\n        const char = str.charCodeAt(i);\n        const next = xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        }\n        else {\n            ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape = encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n    return function escape(data) {\n        let match;\n        let lastIdx = 0;\n        let result = \"\";\n        while ((match = regex.exec(data))) {\n            if (lastIdx !== match.index) {\n                result += data.substring(lastIdx, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8 = getEscaper(/[&<>'\"]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [160, \"&nbsp;\"],\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([\n    [38, \"&amp;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n    [160, \"&nbsp;\"],\n]));\n//# sourceMappingURL=escape.js.map","import { decodeXML, decodeHTML, DecodingMode } from \"./decode.js\";\nimport { encodeHTML, encodeNonAsciiHTML } from \"./encode.js\";\nimport { encodeXML, escapeUTF8, escapeAttribute, escapeText, } from \"./escape.js\";\n/** The level of entities to support. */\nexport var EntityLevel;\n(function (EntityLevel) {\n    /** Support only XML entities. */\n    EntityLevel[EntityLevel[\"XML\"] = 0] = \"XML\";\n    /** Support HTML entities, which are a superset of XML entities. */\n    EntityLevel[EntityLevel[\"HTML\"] = 1] = \"HTML\";\n})(EntityLevel || (EntityLevel = {}));\nexport var EncodingMode;\n(function (EncodingMode) {\n    /**\n     * The output is UTF-8 encoded. Only characters that need escaping within\n     * XML will be escaped.\n     */\n    EncodingMode[EncodingMode[\"UTF8\"] = 0] = \"UTF8\";\n    /**\n     * The output consists only of ASCII characters. Characters that need\n     * escaping within HTML, and characters that aren't ASCII characters will\n     * be escaped.\n     */\n    EncodingMode[EncodingMode[\"ASCII\"] = 1] = \"ASCII\";\n    /**\n     * Encode all characters that have an equivalent entity, as well as all\n     * characters that are not ASCII characters.\n     */\n    EncodingMode[EncodingMode[\"Extensive\"] = 2] = \"Extensive\";\n    /**\n     * Encode all characters that have to be escaped in HTML attributes,\n     * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n     */\n    EncodingMode[EncodingMode[\"Attribute\"] = 3] = \"Attribute\";\n    /**\n     * Encode all characters that have to be escaped in HTML text,\n     * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n     */\n    EncodingMode[EncodingMode[\"Text\"] = 4] = \"Text\";\n})(EncodingMode || (EncodingMode = {}));\n/**\n * Decodes a string with entities.\n *\n * @param data String to decode.\n * @param options Decoding options.\n */\nexport function decode(data, options = EntityLevel.XML) {\n    const level = typeof options === \"number\" ? options : options.level;\n    if (level === EntityLevel.HTML) {\n        const mode = typeof options === \"object\" ? options.mode : undefined;\n        return decodeHTML(data, mode);\n    }\n    return decodeXML(data);\n}\n/**\n * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n *\n * @param data String to decode.\n * @param options Decoding options.\n * @deprecated Use `decode` with the `mode` set to `Strict`.\n */\nexport function decodeStrict(data, options = EntityLevel.XML) {\n    var _a;\n    const opts = typeof options === \"number\" ? { level: options } : options;\n    (_a = opts.mode) !== null && _a !== void 0 ? _a : (opts.mode = DecodingMode.Strict);\n    return decode(data, opts);\n}\n/**\n * Encodes a string with entities.\n *\n * @param data String to encode.\n * @param options Encoding options.\n */\nexport function encode(data, options = EntityLevel.XML) {\n    const opts = typeof options === \"number\" ? { level: options } : options;\n    // Mode `UTF8` just escapes XML entities\n    if (opts.mode === EncodingMode.UTF8)\n        return escapeUTF8(data);\n    if (opts.mode === EncodingMode.Attribute)\n        return escapeAttribute(data);\n    if (opts.mode === EncodingMode.Text)\n        return escapeText(data);\n    if (opts.level === EntityLevel.HTML) {\n        if (opts.mode === EncodingMode.ASCII) {\n            return encodeNonAsciiHTML(data);\n        }\n        return encodeHTML(data);\n    }\n    // ASCII and Extensive are equivalent\n    return encodeXML(data);\n}\nexport { encodeXML, escape, escapeUTF8, escapeAttribute, escapeText, } from \"./escape.js\";\nexport { encodeHTML, encodeNonAsciiHTML, \n// Legacy aliases (deprecated)\nencodeHTML as encodeHTML4, encodeHTML as encodeHTML5, } from \"./encode.js\";\nexport { EntityDecoder, DecodingMode, decodeXML, decodeHTML, decodeHTMLStrict, decodeHTMLAttribute, \n// Legacy aliases (deprecated)\ndecodeHTML as decodeHTML4, decodeHTML as decodeHTML5, decodeHTMLStrict as decodeHTML4Strict, decodeHTMLStrict as decodeHTML5Strict, decodeXML as decodeXMLStrict, } from \"./decode.js\";\n//# sourceMappingURL=index.js.map","export const elementNames = new Map([\n    \"altGlyph\",\n    \"altGlyphDef\",\n    \"altGlyphItem\",\n    \"animateColor\",\n    \"animateMotion\",\n    \"animateTransform\",\n    \"clipPath\",\n    \"feBlend\",\n    \"feColorMatrix\",\n    \"feComponentTransfer\",\n    \"feComposite\",\n    \"feConvolveMatrix\",\n    \"feDiffuseLighting\",\n    \"feDisplacementMap\",\n    \"feDistantLight\",\n    \"feDropShadow\",\n    \"feFlood\",\n    \"feFuncA\",\n    \"feFuncB\",\n    \"feFuncG\",\n    \"feFuncR\",\n    \"feGaussianBlur\",\n    \"feImage\",\n    \"feMerge\",\n    \"feMergeNode\",\n    \"feMorphology\",\n    \"feOffset\",\n    \"fePointLight\",\n    \"feSpecularLighting\",\n    \"feSpotLight\",\n    \"feTile\",\n    \"feTurbulence\",\n    \"foreignObject\",\n    \"glyphRef\",\n    \"linearGradient\",\n    \"radialGradient\",\n    \"textPath\",\n].map((val) => [val.toLowerCase(), val]));\nexport const attributeNames = new Map([\n    \"definitionURL\",\n    \"attributeName\",\n    \"attributeType\",\n    \"baseFrequency\",\n    \"baseProfile\",\n    \"calcMode\",\n    \"clipPathUnits\",\n    \"diffuseConstant\",\n    \"edgeMode\",\n    \"filterUnits\",\n    \"glyphRef\",\n    \"gradientTransform\",\n    \"gradientUnits\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keyPoints\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"lengthAdjust\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerUnits\",\n    \"markerWidth\",\n    \"maskContentUnits\",\n    \"maskUnits\",\n    \"numOctaves\",\n    \"pathLength\",\n    \"patternContentUnits\",\n    \"patternTransform\",\n    \"patternUnits\",\n    \"pointsAtX\",\n    \"pointsAtY\",\n    \"pointsAtZ\",\n    \"preserveAlpha\",\n    \"preserveAspectRatio\",\n    \"primitiveUnits\",\n    \"refX\",\n    \"refY\",\n    \"repeatCount\",\n    \"repeatDur\",\n    \"requiredExtensions\",\n    \"requiredFeatures\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"spreadMethod\",\n    \"startOffset\",\n    \"stdDeviation\",\n    \"stitchTiles\",\n    \"surfaceScale\",\n    \"systemLanguage\",\n    \"tableValues\",\n    \"targetX\",\n    \"targetY\",\n    \"textLength\",\n    \"viewBox\",\n    \"viewTarget\",\n    \"xChannelSelector\",\n    \"yChannelSelector\",\n    \"zoomAndPan\",\n].map((val) => [val.toLowerCase(), val]));\n","/*\n * Module dependencies\n */\nimport * as ElementType from \"domelementtype\";\nimport { encodeXML, escapeAttribute, escapeText } from \"entities\";\n/**\n * Mixed-case SVG and MathML tags & attributes\n * recognized by the HTML parser.\n *\n * @see https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inforeign\n */\nimport { elementNames, attributeNames } from \"./foreignNames.js\";\nconst unencodedElements = new Set([\n    \"style\",\n    \"script\",\n    \"xmp\",\n    \"iframe\",\n    \"noembed\",\n    \"noframes\",\n    \"plaintext\",\n    \"noscript\",\n]);\nfunction replaceQuotes(value) {\n    return value.replace(/\"/g, \"&quot;\");\n}\n/**\n * Format attributes\n */\nfunction formatAttributes(attributes, opts) {\n    var _a;\n    if (!attributes)\n        return;\n    const encode = ((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) === false\n        ? replaceQuotes\n        : opts.xmlMode || opts.encodeEntities !== \"utf8\"\n            ? encodeXML\n            : escapeAttribute;\n    return Object.keys(attributes)\n        .map((key) => {\n        var _a, _b;\n        const value = (_a = attributes[key]) !== null && _a !== void 0 ? _a : \"\";\n        if (opts.xmlMode === \"foreign\") {\n            /* Fix up mixed-case attribute names */\n            key = (_b = attributeNames.get(key)) !== null && _b !== void 0 ? _b : key;\n        }\n        if (!opts.emptyAttrs && !opts.xmlMode && value === \"\") {\n            return key;\n        }\n        return `${key}=\"${encode(value)}\"`;\n    })\n        .join(\" \");\n}\n/**\n * Self-enclosing tags\n */\nconst singleTag = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\n/**\n * Renders a DOM node or an array of DOM nodes to a string.\n *\n * Can be thought of as the equivalent of the `outerHTML` of the passed node(s).\n *\n * @param node Node to be rendered.\n * @param options Changes serialization behavior\n */\nexport function render(node, options = {}) {\n    const nodes = \"length\" in node ? node : [node];\n    let output = \"\";\n    for (let i = 0; i < nodes.length; i++) {\n        output += renderNode(nodes[i], options);\n    }\n    return output;\n}\nexport default render;\nfunction renderNode(node, options) {\n    switch (node.type) {\n        case ElementType.Root:\n            return render(node.children, options);\n        // @ts-expect-error We don't use `Doctype` yet\n        case ElementType.Doctype:\n        case ElementType.Directive:\n            return renderDirective(node);\n        case ElementType.Comment:\n            return renderComment(node);\n        case ElementType.CDATA:\n            return renderCdata(node);\n        case ElementType.Script:\n        case ElementType.Style:\n        case ElementType.Tag:\n            return renderTag(node, options);\n        case ElementType.Text:\n            return renderText(node, options);\n    }\n}\nconst foreignModeIntegrationPoints = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignObject\",\n    \"desc\",\n    \"title\",\n]);\nconst foreignElements = new Set([\"svg\", \"math\"]);\nfunction renderTag(elem, opts) {\n    var _a;\n    // Handle SVG / MathML in HTML\n    if (opts.xmlMode === \"foreign\") {\n        /* Fix up mixed-case element names */\n        elem.name = (_a = elementNames.get(elem.name)) !== null && _a !== void 0 ? _a : elem.name;\n        /* Exit foreign mode at integration points */\n        if (elem.parent &&\n            foreignModeIntegrationPoints.has(elem.parent.name)) {\n            opts = { ...opts, xmlMode: false };\n        }\n    }\n    if (!opts.xmlMode && foreignElements.has(elem.name)) {\n        opts = { ...opts, xmlMode: \"foreign\" };\n    }\n    let tag = `<${elem.name}`;\n    const attribs = formatAttributes(elem.attribs, opts);\n    if (attribs) {\n        tag += ` ${attribs}`;\n    }\n    if (elem.children.length === 0 &&\n        (opts.xmlMode\n            ? // In XML mode or foreign mode, and user hasn't explicitly turned off self-closing tags\n                opts.selfClosingTags !== false\n            : // User explicitly asked for self-closing tags, even in HTML mode\n                opts.selfClosingTags && singleTag.has(elem.name))) {\n        if (!opts.xmlMode)\n            tag += \" \";\n        tag += \"/>\";\n    }\n    else {\n        tag += \">\";\n        if (elem.children.length > 0) {\n            tag += render(elem.children, opts);\n        }\n        if (opts.xmlMode || !singleTag.has(elem.name)) {\n            tag += `</${elem.name}>`;\n        }\n    }\n    return tag;\n}\nfunction renderDirective(elem) {\n    return `<${elem.data}>`;\n}\nfunction renderText(elem, opts) {\n    var _a;\n    let data = elem.data || \"\";\n    // If entities weren't decoded, no need to encode them back\n    if (((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) !== false &&\n        !(!opts.xmlMode &&\n            elem.parent &&\n            unencodedElements.has(elem.parent.name))) {\n        data =\n            opts.xmlMode || opts.encodeEntities !== \"utf8\"\n                ? encodeXML(data)\n                : escapeText(data);\n    }\n    return data;\n}\nfunction renderCdata(elem) {\n    return `<![CDATA[${elem.children[0].data}]]>`;\n}\nfunction renderComment(elem) {\n    return `<!--${elem.data}-->`;\n}\n","import { isTag, isCDATA, isText, hasChildren, isComment, } from \"domhandler\";\nimport renderHTML from \"dom-serializer\";\nimport { ElementType } from \"domelementtype\";\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the outer HTML of.\n * @param options Options for serialization.\n * @returns `node`'s outer HTML.\n */\nexport function getOuterHTML(node, options) {\n    return renderHTML(node, options);\n}\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the inner HTML of.\n * @param options Options for serialization.\n * @returns `node`'s inner HTML.\n */\nexport function getInnerHTML(node, options) {\n    return hasChildren(node)\n        ? node.children.map((node) => getOuterHTML(node, options)).join(\"\")\n        : \"\";\n}\n/**\n * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags. Ignores comments.\n *\n * @category Stringify\n * @deprecated Use `textContent` instead.\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n */\nexport function getText(node) {\n    if (Array.isArray(node))\n        return node.map(getText).join(\"\");\n    if (isTag(node))\n        return node.name === \"br\" ? \"\\n\" : getText(node.children);\n    if (isCDATA(node))\n        return getText(node.children);\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n/**\n * Get a node's text content. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the text content of.\n * @returns `node`'s text content.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n */\nexport function textContent(node) {\n    if (Array.isArray(node))\n        return node.map(textContent).join(\"\");\n    if (hasChildren(node) && !isComment(node)) {\n        return textContent(node.children);\n    }\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n/**\n * Get a node's inner text, ignoring `<script>` and `<style>` tags. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n */\nexport function innerText(node) {\n    if (Array.isArray(node))\n        return node.map(innerText).join(\"\");\n    if (hasChildren(node) && (node.type === ElementType.Tag || isCDATA(node))) {\n        return innerText(node.children);\n    }\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n//# sourceMappingURL=stringify.js.map","import { isTag, hasChildren, } from \"domhandler\";\n/**\n * Get a node's children.\n *\n * @category Traversal\n * @param elem Node to get the children of.\n * @returns `elem`'s children, or an empty array.\n */\nexport function getChildren(elem) {\n    return hasChildren(elem) ? elem.children : [];\n}\n/**\n * Get a node's parent.\n *\n * @category Traversal\n * @param elem Node to get the parent of.\n * @returns `elem`'s parent node, or `null` if `elem` is a root node.\n */\nexport function getParent(elem) {\n    return elem.parent || null;\n}\n/**\n * Gets an elements siblings, including the element itself.\n *\n * Attempts to get the children through the element's parent first. If we don't\n * have a parent (the element is a root node), we walk the element's `prev` &\n * `next` to get all remaining nodes.\n *\n * @category Traversal\n * @param elem Element to get the siblings of.\n * @returns `elem`'s siblings, including `elem`.\n */\nexport function getSiblings(elem) {\n    const parent = getParent(elem);\n    if (parent != null)\n        return getChildren(parent);\n    const siblings = [elem];\n    let { prev, next } = elem;\n    while (prev != null) {\n        siblings.unshift(prev);\n        ({ prev } = prev);\n    }\n    while (next != null) {\n        siblings.push(next);\n        ({ next } = next);\n    }\n    return siblings;\n}\n/**\n * Gets an attribute from an element.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to retrieve.\n * @returns The element's attribute value, or `undefined`.\n */\nexport function getAttributeValue(elem, name) {\n    var _a;\n    return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n}\n/**\n * Checks whether an element has an attribute.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to look for.\n * @returns Returns whether `elem` has the attribute `name`.\n */\nexport function hasAttrib(elem, name) {\n    return (elem.attribs != null &&\n        Object.prototype.hasOwnProperty.call(elem.attribs, name) &&\n        elem.attribs[name] != null);\n}\n/**\n * Get the tag name of an element.\n *\n * @category Traversal\n * @param elem The element to get the name for.\n * @returns The tag name of `elem`.\n */\nexport function getName(elem) {\n    return elem.name;\n}\n/**\n * Returns the next element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the next sibling of.\n * @returns `elem`'s next sibling that is a tag, or `null` if there is no next\n * sibling.\n */\nexport function nextElementSibling(elem) {\n    let { next } = elem;\n    while (next !== null && !isTag(next))\n        ({ next } = next);\n    return next;\n}\n/**\n * Returns the previous element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the previous sibling of.\n * @returns `elem`'s previous sibling that is a tag, or `null` if there is no\n * previous sibling.\n */\nexport function prevElementSibling(elem) {\n    let { prev } = elem;\n    while (prev !== null && !isTag(prev))\n        ({ prev } = prev);\n    return prev;\n}\n//# sourceMappingURL=traversal.js.map","/**\n * Remove an element from the dom\n *\n * @category Manipulation\n * @param elem The element to be removed\n */\nexport function removeElement(elem) {\n    if (elem.prev)\n        elem.prev.next = elem.next;\n    if (elem.next)\n        elem.next.prev = elem.prev;\n    if (elem.parent) {\n        const childs = elem.parent.children;\n        const childsIndex = childs.lastIndexOf(elem);\n        if (childsIndex >= 0) {\n            childs.splice(childsIndex, 1);\n        }\n    }\n    elem.next = null;\n    elem.prev = null;\n    elem.parent = null;\n}\n/**\n * Replace an element in the dom\n *\n * @category Manipulation\n * @param elem The element to be replaced\n * @param replacement The element to be added\n */\nexport function replaceElement(elem, replacement) {\n    const prev = (replacement.prev = elem.prev);\n    if (prev) {\n        prev.next = replacement;\n    }\n    const next = (replacement.next = elem.next);\n    if (next) {\n        next.prev = replacement;\n    }\n    const parent = (replacement.parent = elem.parent);\n    if (parent) {\n        const childs = parent.children;\n        childs[childs.lastIndexOf(elem)] = replacement;\n        elem.parent = null;\n    }\n}\n/**\n * Append a child to an element.\n *\n * @category Manipulation\n * @param parent The element to append to.\n * @param child The element to be added as a child.\n */\nexport function appendChild(parent, child) {\n    removeElement(child);\n    child.next = null;\n    child.parent = parent;\n    if (parent.children.push(child) > 1) {\n        const sibling = parent.children[parent.children.length - 2];\n        sibling.next = child;\n        child.prev = sibling;\n    }\n    else {\n        child.prev = null;\n    }\n}\n/**\n * Append an element after another.\n *\n * @category Manipulation\n * @param elem The element to append after.\n * @param next The element be added.\n */\nexport function append(elem, next) {\n    removeElement(next);\n    const { parent } = elem;\n    const currNext = elem.next;\n    next.next = currNext;\n    next.prev = elem;\n    elem.next = next;\n    next.parent = parent;\n    if (currNext) {\n        currNext.prev = next;\n        if (parent) {\n            const childs = parent.children;\n            childs.splice(childs.lastIndexOf(currNext), 0, next);\n        }\n    }\n    else if (parent) {\n        parent.children.push(next);\n    }\n}\n/**\n * Prepend a child to an element.\n *\n * @category Manipulation\n * @param parent The element to prepend before.\n * @param child The element to be added as a child.\n */\nexport function prependChild(parent, child) {\n    removeElement(child);\n    child.parent = parent;\n    child.prev = null;\n    if (parent.children.unshift(child) !== 1) {\n        const sibling = parent.children[1];\n        sibling.prev = child;\n        child.next = sibling;\n    }\n    else {\n        child.next = null;\n    }\n}\n/**\n * Prepend an element before another.\n *\n * @category Manipulation\n * @param elem The element to prepend before.\n * @param prev The element be added.\n */\nexport function prepend(elem, prev) {\n    removeElement(prev);\n    const { parent } = elem;\n    if (parent) {\n        const childs = parent.children;\n        childs.splice(childs.indexOf(elem), 0, prev);\n    }\n    if (elem.prev) {\n        elem.prev.next = prev;\n    }\n    prev.parent = parent;\n    prev.prev = elem.prev;\n    prev.next = elem;\n    elem.prev = prev;\n}\n//# sourceMappingURL=manipulation.js.map","import { hasChildren } from \"domhandler\";\n/**\n * Given an array of nodes, remove any member that is contained by another\n * member.\n *\n * @category Helpers\n * @param nodes Nodes to filter.\n * @returns Remaining nodes that aren't contained by other nodes.\n */\nexport function removeSubsets(nodes) {\n    let idx = nodes.length;\n    /*\n     * Check if each node (or one of its ancestors) is already contained in the\n     * array.\n     */\n    while (--idx >= 0) {\n        const node = nodes[idx];\n        /*\n         * Remove the node if it is not unique.\n         * We are going through the array from the end, so we only\n         * have to check nodes that preceed the node under consideration in the array.\n         */\n        if (idx > 0 && nodes.lastIndexOf(node, idx - 1) >= 0) {\n            nodes.splice(idx, 1);\n            continue;\n        }\n        for (let ancestor = node.parent; ancestor; ancestor = ancestor.parent) {\n            if (nodes.includes(ancestor)) {\n                nodes.splice(idx, 1);\n                break;\n            }\n        }\n    }\n    return nodes;\n}\n/**\n * @category Helpers\n * @see {@link http://dom.spec.whatwg.org/#dom-node-comparedocumentposition}\n */\nexport var DocumentPosition;\n(function (DocumentPosition) {\n    DocumentPosition[DocumentPosition[\"DISCONNECTED\"] = 1] = \"DISCONNECTED\";\n    DocumentPosition[DocumentPosition[\"PRECEDING\"] = 2] = \"PRECEDING\";\n    DocumentPosition[DocumentPosition[\"FOLLOWING\"] = 4] = \"FOLLOWING\";\n    DocumentPosition[DocumentPosition[\"CONTAINS\"] = 8] = \"CONTAINS\";\n    DocumentPosition[DocumentPosition[\"CONTAINED_BY\"] = 16] = \"CONTAINED_BY\";\n})(DocumentPosition || (DocumentPosition = {}));\n/**\n * Compare the position of one node against another node in any other document,\n * returning a bitmask with the values from {@link DocumentPosition}.\n *\n * Document order:\n * > There is an ordering, document order, defined on all the nodes in the\n * > document corresponding to the order in which the first character of the\n * > XML representation of each node occurs in the XML representation of the\n * > document after expansion of general entities. Thus, the document element\n * > node will be the first node. Element nodes occur before their children.\n * > Thus, document order orders element nodes in order of the occurrence of\n * > their start-tag in the XML (after expansion of entities). The attribute\n * > nodes of an element occur after the element and before its children. The\n * > relative order of attribute nodes is implementation-dependent.\n *\n * Source:\n * http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order\n *\n * @category Helpers\n * @param nodeA The first node to use in the comparison\n * @param nodeB The second node to use in the comparison\n * @returns A bitmask describing the input nodes' relative position.\n *\n * See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for\n * a description of these values.\n */\nexport function compareDocumentPosition(nodeA, nodeB) {\n    const aParents = [];\n    const bParents = [];\n    if (nodeA === nodeB) {\n        return 0;\n    }\n    let current = hasChildren(nodeA) ? nodeA : nodeA.parent;\n    while (current) {\n        aParents.unshift(current);\n        current = current.parent;\n    }\n    current = hasChildren(nodeB) ? nodeB : nodeB.parent;\n    while (current) {\n        bParents.unshift(current);\n        current = current.parent;\n    }\n    const maxIdx = Math.min(aParents.length, bParents.length);\n    let idx = 0;\n    while (idx < maxIdx && aParents[idx] === bParents[idx]) {\n        idx++;\n    }\n    if (idx === 0) {\n        return DocumentPosition.DISCONNECTED;\n    }\n    const sharedParent = aParents[idx - 1];\n    const siblings = sharedParent.children;\n    const aSibling = aParents[idx];\n    const bSibling = bParents[idx];\n    if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {\n        if (sharedParent === nodeB) {\n            return DocumentPosition.FOLLOWING | DocumentPosition.CONTAINED_BY;\n        }\n        return DocumentPosition.FOLLOWING;\n    }\n    if (sharedParent === nodeA) {\n        return DocumentPosition.PRECEDING | DocumentPosition.CONTAINS;\n    }\n    return DocumentPosition.PRECEDING;\n}\n/**\n * Sort an array of nodes based on their relative position in the document,\n * removing any duplicate nodes. If the array contains nodes that do not belong\n * to the same document, sort order is unspecified.\n *\n * @category Helpers\n * @param nodes Array of DOM nodes.\n * @returns Collection of unique nodes, sorted in document order.\n */\nexport function uniqueSort(nodes) {\n    nodes = nodes.filter((node, i, arr) => !arr.includes(node, i + 1));\n    nodes.sort((a, b) => {\n        const relative = compareDocumentPosition(a, b);\n        if (relative & DocumentPosition.PRECEDING) {\n            return -1;\n        }\n        else if (relative & DocumentPosition.FOLLOWING) {\n            return 1;\n        }\n        return 0;\n    });\n    return nodes;\n}\n//# sourceMappingURL=helpers.js.map","import { textContent } from 'domutils';\nimport { default as defaultOptions, flatten as flattenOptions, } from './options.js';\n/**\n * Helper function to render a DOM.\n *\n * @param that - Cheerio instance to render.\n * @param dom - The DOM to render. Defaults to `that`'s root.\n * @param options - Options for rendering.\n * @returns The rendered document.\n */\nfunction render(that, dom, options) {\n    if (!that)\n        return '';\n    return that(dom !== null && dom !== void 0 ? dom : that._root.children, null, undefined, options).toString();\n}\n/**\n * Checks if a passed object is an options object.\n *\n * @param dom - Object to check if it is an options object.\n * @returns Whether the object is an options object.\n */\nfunction isOptions(dom, options) {\n    return (!options &&\n        typeof dom === 'object' &&\n        dom != null &&\n        !('length' in dom) &&\n        !('type' in dom));\n}\nexport function html(dom, options) {\n    /*\n     * Be flexible about parameters, sometimes we call html(),\n     * with options as only parameter\n     * check dom argument for dom element specific properties\n     * assume there is no 'length' or 'type' properties in the options object\n     */\n    const toRender = isOptions(dom) ? ((options = dom), undefined) : dom;\n    /*\n     * Sometimes `$.html()` is used without preloading html,\n     * so fallback non-existing options to the default ones.\n     */\n    const opts = {\n        ...defaultOptions,\n        ...this === null || this === void 0 ? void 0 : this._options,\n        ...flattenOptions(options !== null && options !== void 0 ? options : {}),\n    };\n    return render(this, toRender, opts);\n}\n/**\n * Render the document as XML.\n *\n * @param dom - Element to render.\n * @returns THe rendered document.\n */\nexport function xml(dom) {\n    const options = { ...this._options, xmlMode: true };\n    return render(this, dom, options);\n}\n/**\n * Render the document as text.\n *\n * This returns the `textContent` of the passed elements. The result will\n * include the contents of `script` and `stype` elements. To avoid this, use\n * `.prop('innerText')` instead.\n *\n * @param elements - Elements to render.\n * @returns The rendered document.\n */\nexport function text(elements) {\n    const elems = elements ? elements : this ? this.root() : [];\n    let ret = '';\n    for (let i = 0; i < elems.length; i++) {\n        ret += textContent(elems[i]);\n    }\n    return ret;\n}\nexport function parseHTML(data, context, keepScripts = typeof context === 'boolean' ? context : false) {\n    if (!data || typeof data !== 'string') {\n        return null;\n    }\n    if (typeof context === 'boolean') {\n        keepScripts = context;\n    }\n    const parsed = this.load(data, defaultOptions, false);\n    if (!keepScripts) {\n        parsed('script').remove();\n    }\n    /*\n     * The `children` array is used by Cheerio internally to group elements that\n     * share the same parents. When nodes created through `parseHTML` are\n     * inserted into previously-existing DOM structures, they will be removed\n     * from the `children` array. The results of `parseHTML` should remain\n     * constant across these operations, so a shallow copy should be returned.\n     */\n    return parsed.root()[0].children.slice();\n}\n/**\n * Sometimes you need to work with the top-level root element. To query it, you\n * can use `$.root()`.\n *\n * @example\n *\n * ```js\n * $.root().append('<ul id=\"vegetables\"></ul>').html();\n * //=> <ul id=\"fruits\">...</ul><ul id=\"vegetables\"></ul>\n * ```\n *\n * @returns Cheerio instance wrapping the root node.\n * @alias Cheerio.root\n */\nexport function root() {\n    return this(this._root);\n}\n/**\n * Checks to see if the `contained` DOM element is a descendant of the\n * `container` DOM element.\n *\n * @param container - Potential parent node.\n * @param contained - Potential child node.\n * @returns Indicates if the nodes contain one another.\n * @alias Cheerio.contains\n * @see {@link https://api.jquery.com/jQuery.contains/}\n */\nexport function contains(container, contained) {\n    // According to the jQuery API, an element does not \"contain\" itself\n    if (contained === container) {\n        return false;\n    }\n    /*\n     * Step up the descendants, stopping when the root element is reached\n     * (signaled by `.parent` returning a reference to the same object)\n     */\n    let next = contained;\n    while (next && next !== next.parent) {\n        next = next.parent;\n        if (next === container) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * $.merge().\n *\n * @param arr1 - First array.\n * @param arr2 - Second array.\n * @returns `arr1`, with elements of `arr2` inserted.\n * @alias Cheerio.merge\n * @see {@link https://api.jquery.com/jQuery.merge/}\n */\nexport function merge(arr1, arr2) {\n    if (!isArrayLike(arr1) || !isArrayLike(arr2)) {\n        return;\n    }\n    let newLength = arr1.length;\n    const len = +arr2.length;\n    for (let i = 0; i < len; i++) {\n        arr1[newLength++] = arr2[i];\n    }\n    arr1.length = newLength;\n    return arr1;\n}\n/**\n * Checks if an object is array-like.\n *\n * @param item - Item to check.\n * @returns Indicates if the item is array-like.\n */\nfunction isArrayLike(item) {\n    if (Array.isArray(item)) {\n        return true;\n    }\n    if (typeof item !== 'object' ||\n        !Object.prototype.hasOwnProperty.call(item, 'length') ||\n        typeof item.length !== 'number' ||\n        item.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < item.length; i++) {\n        if (!(i in item)) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=static.js.map","import { cloneNode, Document } from 'domhandler';\n/**\n * Check if the DOM element is a tag.\n *\n * `isTag(type)` includes `<script>` and `<style>` tags.\n *\n * @private\n * @category Utils\n * @param type - The DOM node to check.\n * @returns Whether the node is a tag.\n */\nexport { isTag } from 'domhandler';\n/**\n * Checks if an object is a Cheerio instance.\n *\n * @category Utils\n * @param maybeCheerio - The object to check.\n * @returns Whether the object is a Cheerio instance.\n */\nexport function isCheerio(maybeCheerio) {\n    return maybeCheerio.cheerio != null;\n}\n/**\n * Convert a string to camel case notation.\n *\n * @private\n * @category Utils\n * @param str - The string to be converted.\n * @returns String in camel case notation.\n */\nexport function camelCase(str) {\n    return str.replace(/[_.-](\\w|$)/g, (_, x) => x.toUpperCase());\n}\n/**\n * Convert a string from camel case to \"CSS case\", where word boundaries are\n * described by hyphens (\"-\") and all characters are lower-case.\n *\n * @private\n * @category Utils\n * @param str - The string to be converted.\n * @returns String in \"CSS case\".\n */\nexport function cssCase(str) {\n    return str.replace(/[A-Z]/g, '-$&').toLowerCase();\n}\n/**\n * Iterate over each DOM element without creating intermediary Cheerio instances.\n *\n * This is indented for use internally to avoid otherwise unnecessary memory\n * pressure introduced by _make.\n *\n * @category Utils\n * @param array - The array to iterate over.\n * @param fn - Function to call.\n * @returns The original instance.\n */\nexport function domEach(array, fn) {\n    const len = array.length;\n    for (let i = 0; i < len; i++)\n        fn(array[i], i);\n    return array;\n}\n/**\n * Create a deep copy of the given DOM structure. Sets the parents of the copies\n * of the passed nodes to `null`.\n *\n * @private\n * @category Utils\n * @param dom - The domhandler-compliant DOM structure.\n * @returns - The cloned DOM.\n */\nexport function cloneDom(dom) {\n    const clone = 'length' in dom\n        ? Array.prototype.map.call(dom, (el) => cloneNode(el, true))\n        : [cloneNode(dom, true)];\n    // Add a root node around the cloned nodes\n    const root = new Document(clone);\n    clone.forEach((node) => {\n        node.parent = root;\n    });\n    return clone;\n}\nvar CharacterCodes;\n(function (CharacterCodes) {\n    CharacterCodes[CharacterCodes[\"LowerA\"] = 97] = \"LowerA\";\n    CharacterCodes[CharacterCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n    CharacterCodes[CharacterCodes[\"UpperA\"] = 65] = \"UpperA\";\n    CharacterCodes[CharacterCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n    CharacterCodes[CharacterCodes[\"Exclamation\"] = 33] = \"Exclamation\";\n})(CharacterCodes || (CharacterCodes = {}));\n/**\n * Check if string is HTML.\n *\n * Tests for a `<` within a string, immediate followed by a letter and\n * eventually followed by a `>`.\n *\n * @private\n * @category Utils\n * @param str - The string to check.\n * @returns Indicates if `str` is HTML.\n */\nexport function isHtml(str) {\n    const tagStart = str.indexOf('<');\n    if (tagStart < 0 || tagStart > str.length - 3)\n        return false;\n    const tagChar = str.charCodeAt(tagStart + 1);\n    return (((tagChar >= CharacterCodes.LowerA && tagChar <= CharacterCodes.LowerZ) ||\n        (tagChar >= CharacterCodes.UpperA && tagChar <= CharacterCodes.UpperZ) ||\n        tagChar === CharacterCodes.Exclamation) &&\n        str.includes('>', tagStart + 2));\n}\n//# sourceMappingURL=utils.js.map","/**\n * Methods for getting and modifying attributes.\n *\n * @module cheerio/attributes\n */\nimport { text } from '../static.js';\nimport { isTag, domEach, camelCase, cssCase } from '../utils.js';\nimport { innerText, textContent } from 'domutils';\nconst hasOwn = Object.prototype.hasOwnProperty;\nconst rspace = /\\s+/;\nconst dataAttrPrefix = 'data-';\n/*\n * Lookup table for coercing string data-* attributes to their corresponding\n * JavaScript primitives\n */\nconst primitives = {\n    null: null,\n    true: true,\n    false: false,\n};\n// Attributes that are booleans\nconst rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;\n// Matches strings that look like JSON objects or arrays\nconst rbrace = /^{[^]*}$|^\\[[^]*]$/;\nfunction getAttr(elem, name, xmlMode) {\n    var _a;\n    if (!elem || !isTag(elem))\n        return undefined;\n    (_a = elem.attribs) !== null && _a !== void 0 ? _a : (elem.attribs = {});\n    // Return the entire attribs object if no attribute specified\n    if (!name) {\n        return elem.attribs;\n    }\n    if (hasOwn.call(elem.attribs, name)) {\n        // Get the (decoded) attribute\n        return !xmlMode && rboolean.test(name) ? name : elem.attribs[name];\n    }\n    // Mimic the DOM and return text content as value for `option's`\n    if (elem.name === 'option' && name === 'value') {\n        return text(elem.children);\n    }\n    // Mimic DOM with default value for radios/checkboxes\n    if (elem.name === 'input' &&\n        (elem.attribs['type'] === 'radio' || elem.attribs['type'] === 'checkbox') &&\n        name === 'value') {\n        return 'on';\n    }\n    return undefined;\n}\n/**\n * Sets the value of an attribute. The attribute will be deleted if the value is `null`.\n *\n * @private\n * @param el - The element to set the attribute on.\n * @param name - The attribute's name.\n * @param value - The attribute's value.\n */\nfunction setAttr(el, name, value) {\n    if (value === null) {\n        removeAttribute(el, name);\n    }\n    else {\n        el.attribs[name] = `${value}`;\n    }\n}\nexport function attr(name, value) {\n    // Set the value (with attr map support)\n    if (typeof name === 'object' || value !== undefined) {\n        if (typeof value === 'function') {\n            if (typeof name !== 'string') {\n                {\n                    throw new Error('Bad combination of arguments.');\n                }\n            }\n            return domEach(this, (el, i) => {\n                if (isTag(el))\n                    setAttr(el, name, value.call(el, i, el.attribs[name]));\n            });\n        }\n        return domEach(this, (el) => {\n            if (!isTag(el))\n                return;\n            if (typeof name === 'object') {\n                Object.keys(name).forEach((objName) => {\n                    const objValue = name[objName];\n                    setAttr(el, objName, objValue);\n                });\n            }\n            else {\n                setAttr(el, name, value);\n            }\n        });\n    }\n    return arguments.length > 1\n        ? this\n        : getAttr(this[0], name, this.options.xmlMode);\n}\n/**\n * Gets a node's prop.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the prop of.\n * @param name - Name of the prop.\n * @returns The prop's value.\n */\nfunction getProp(el, name, xmlMode) {\n    return name in el\n        ? // @ts-expect-error TS doesn't like us accessing the value directly here.\n            el[name]\n        : !xmlMode && rboolean.test(name)\n            ? getAttr(el, name, false) !== undefined\n            : getAttr(el, name, xmlMode);\n}\n/**\n * Sets the value of a prop.\n *\n * @private\n * @param el - The element to set the prop on.\n * @param name - The prop's name.\n * @param value - The prop's value.\n */\nfunction setProp(el, name, value, xmlMode) {\n    if (name in el) {\n        // @ts-expect-error Overriding value\n        el[name] = value;\n    }\n    else {\n        setAttr(el, name, !xmlMode && rboolean.test(name) ? (value ? '' : null) : `${value}`);\n    }\n}\nexport function prop(name, value) {\n    var _a;\n    if (typeof name === 'string' && value === undefined) {\n        const el = this[0];\n        if (!el || !isTag(el))\n            return undefined;\n        switch (name) {\n            case 'style': {\n                const property = this.css();\n                const keys = Object.keys(property);\n                keys.forEach((p, i) => {\n                    property[i] = p;\n                });\n                property.length = keys.length;\n                return property;\n            }\n            case 'tagName':\n            case 'nodeName': {\n                return el.name.toUpperCase();\n            }\n            case 'href':\n            case 'src': {\n                const prop = (_a = el.attribs) === null || _a === void 0 ? void 0 : _a[name];\n                /* eslint-disable node/no-unsupported-features/node-builtins */\n                if (typeof URL !== 'undefined' &&\n                    ((name === 'href' && (el.tagName === 'a' || el.name === 'link')) ||\n                        (name === 'src' &&\n                            (el.tagName === 'img' ||\n                                el.tagName === 'iframe' ||\n                                el.tagName === 'audio' ||\n                                el.tagName === 'video' ||\n                                el.tagName === 'source'))) &&\n                    prop !== undefined &&\n                    this.options.baseURI) {\n                    return new URL(prop, this.options.baseURI).href;\n                }\n                /* eslint-enable node/no-unsupported-features/node-builtins */\n                return prop;\n            }\n            case 'innerText': {\n                return innerText(el);\n            }\n            case 'textContent': {\n                return textContent(el);\n            }\n            case 'outerHTML':\n                return this.clone().wrap('<container />').parent().html();\n            case 'innerHTML':\n                return this.html();\n            default:\n                return getProp(el, name, this.options.xmlMode);\n        }\n    }\n    if (typeof name === 'object' || value !== undefined) {\n        if (typeof value === 'function') {\n            if (typeof name === 'object') {\n                throw new Error('Bad combination of arguments.');\n            }\n            return domEach(this, (el, i) => {\n                if (isTag(el)) {\n                    setProp(el, name, value.call(el, i, getProp(el, name, this.options.xmlMode)), this.options.xmlMode);\n                }\n            });\n        }\n        return domEach(this, (el) => {\n            if (!isTag(el))\n                return;\n            if (typeof name === 'object') {\n                Object.keys(name).forEach((key) => {\n                    const val = name[key];\n                    setProp(el, key, val, this.options.xmlMode);\n                });\n            }\n            else {\n                setProp(el, name, value, this.options.xmlMode);\n            }\n        });\n    }\n    return undefined;\n}\n/**\n * Sets the value of a data attribute.\n *\n * @private\n * @param el - The element to set the data attribute on.\n * @param name - The data attribute's name.\n * @param value - The data attribute's value.\n */\nfunction setData(el, name, value) {\n    var _a;\n    const elem = el;\n    (_a = elem.data) !== null && _a !== void 0 ? _a : (elem.data = {});\n    if (typeof name === 'object')\n        Object.assign(elem.data, name);\n    else if (typeof name === 'string' && value !== undefined) {\n        elem.data[name] = value;\n    }\n}\n/**\n * Read the specified attribute from the equivalent HTML5 `data-*` attribute,\n * and (if present) cache the value in the node's internal data store. If no\n * attribute name is specified, read _all_ HTML5 `data-*` attributes in this manner.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the data attribute of.\n * @param name - Name of the data attribute.\n * @returns The data attribute's value, or a map with all of the data attributes.\n */\nfunction readData(el, name) {\n    let domNames;\n    let jsNames;\n    let value;\n    if (name == null) {\n        domNames = Object.keys(el.attribs).filter((attrName) => attrName.startsWith(dataAttrPrefix));\n        jsNames = domNames.map((domName) => camelCase(domName.slice(dataAttrPrefix.length)));\n    }\n    else {\n        domNames = [dataAttrPrefix + cssCase(name)];\n        jsNames = [name];\n    }\n    for (let idx = 0; idx < domNames.length; ++idx) {\n        const domName = domNames[idx];\n        const jsName = jsNames[idx];\n        if (hasOwn.call(el.attribs, domName) &&\n            !hasOwn.call(el.data, jsName)) {\n            value = el.attribs[domName];\n            if (hasOwn.call(primitives, value)) {\n                value = primitives[value];\n            }\n            else if (value === String(Number(value))) {\n                value = Number(value);\n            }\n            else if (rbrace.test(value)) {\n                try {\n                    value = JSON.parse(value);\n                }\n                catch (e) {\n                    /* Ignore */\n                }\n            }\n            el.data[jsName] = value;\n        }\n    }\n    return name == null ? el.data : value;\n}\nexport function data(name, value) {\n    var _a;\n    const elem = this[0];\n    if (!elem || !isTag(elem))\n        return;\n    const dataEl = elem;\n    (_a = dataEl.data) !== null && _a !== void 0 ? _a : (dataEl.data = {});\n    // Return the entire data object if no data specified\n    if (!name) {\n        return readData(dataEl);\n    }\n    // Set the value (with attr map support)\n    if (typeof name === 'object' || value !== undefined) {\n        domEach(this, (el) => {\n            if (isTag(el)) {\n                if (typeof name === 'object')\n                    setData(el, name);\n                else\n                    setData(el, name, value);\n            }\n        });\n        return this;\n    }\n    if (hasOwn.call(dataEl.data, name)) {\n        return dataEl.data[name];\n    }\n    return readData(dataEl, name);\n}\nexport function val(value) {\n    const querying = arguments.length === 0;\n    const element = this[0];\n    if (!element || !isTag(element))\n        return querying ? undefined : this;\n    switch (element.name) {\n        case 'textarea':\n            return this.text(value);\n        case 'select': {\n            const option = this.find('option:selected');\n            if (!querying) {\n                if (this.attr('multiple') == null && typeof value === 'object') {\n                    return this;\n                }\n                this.find('option').removeAttr('selected');\n                const values = typeof value !== 'object' ? [value] : value;\n                for (let i = 0; i < values.length; i++) {\n                    this.find(`option[value=\"${values[i]}\"]`).attr('selected', '');\n                }\n                return this;\n            }\n            return this.attr('multiple')\n                ? option.toArray().map((el) => text(el.children))\n                : option.attr('value');\n        }\n        case 'input':\n        case 'option':\n            return querying\n                ? this.attr('value')\n                : this.attr('value', value);\n    }\n    return undefined;\n}\n/**\n * Remove an attribute.\n *\n * @private\n * @param elem - Node to remove attribute from.\n * @param name - Name of the attribute to remove.\n */\nfunction removeAttribute(elem, name) {\n    if (!elem.attribs || !hasOwn.call(elem.attribs, name))\n        return;\n    delete elem.attribs[name];\n}\n/**\n * Splits a space-separated list of names to individual names.\n *\n * @category Attributes\n * @param names - Names to split.\n * @returns - Split names.\n */\nfunction splitNames(names) {\n    return names ? names.trim().split(rspace) : [];\n}\n/**\n * Method for removing attributes by `name`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').removeAttr('class').html();\n * //=> <li>Pear</li>\n *\n * $('.apple').attr('id', 'favorite');\n * $('.apple').removeAttr('id class').html();\n * //=> <li>Apple</li>\n * ```\n *\n * @param name - Name of the attribute.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/removeAttr/}\n */\nexport function removeAttr(name) {\n    const attrNames = splitNames(name);\n    for (let i = 0; i < attrNames.length; i++) {\n        domEach(this, (elem) => {\n            if (isTag(elem))\n                removeAttribute(elem, attrNames[i]);\n        });\n    }\n    return this;\n}\n/**\n * Check to see if _any_ of the matched elements have the given `className`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').hasClass('pear');\n * //=> true\n *\n * $('apple').hasClass('fruit');\n * //=> false\n *\n * $('li').hasClass('pear');\n * //=> true\n * ```\n *\n * @param className - Name of the class.\n * @returns Indicates if an element has the given `className`.\n * @see {@link https://api.jquery.com/hasClass/}\n */\nexport function hasClass(className) {\n    return this.toArray().some((elem) => {\n        const clazz = isTag(elem) && elem.attribs['class'];\n        let idx = -1;\n        if (clazz && className.length) {\n            while ((idx = clazz.indexOf(className, idx + 1)) > -1) {\n                const end = idx + className.length;\n                if ((idx === 0 || rspace.test(clazz[idx - 1])) &&\n                    (end === clazz.length || rspace.test(clazz[end]))) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    });\n}\n/**\n * Adds class(es) to all of the matched elements. Also accepts a `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').addClass('fruit').html();\n * //=> <li class=\"pear fruit\">Pear</li>\n *\n * $('.apple').addClass('fruit red').html();\n * //=> <li class=\"apple fruit red\">Apple</li>\n * ```\n *\n * @param value - Name of new class.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/addClass/}\n */\nexport function addClass(value) {\n    // Support functions\n    if (typeof value === 'function') {\n        return domEach(this, (el, i) => {\n            if (isTag(el)) {\n                const className = el.attribs['class'] || '';\n                addClass.call([el], value.call(el, i, className));\n            }\n        });\n    }\n    // Return if no value or not a string or function\n    if (!value || typeof value !== 'string')\n        return this;\n    const classNames = value.split(rspace);\n    const numElements = this.length;\n    for (let i = 0; i < numElements; i++) {\n        const el = this[i];\n        // If selected element isn't a tag, move on\n        if (!isTag(el))\n            continue;\n        // If we don't already have classes — always set xmlMode to false here, as it doesn't matter for classes\n        const className = getAttr(el, 'class', false);\n        if (!className) {\n            setAttr(el, 'class', classNames.join(' ').trim());\n        }\n        else {\n            let setClass = ` ${className} `;\n            // Check if class already exists\n            for (let j = 0; j < classNames.length; j++) {\n                const appendClass = `${classNames[j]} `;\n                if (!setClass.includes(` ${appendClass}`))\n                    setClass += appendClass;\n            }\n            setAttr(el, 'class', setClass.trim());\n        }\n    }\n    return this;\n}\n/**\n * Removes one or more space-separated classes from the selected elements. If no\n * `className` is defined, all classes will be removed. Also accepts a `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').removeClass('pear').html();\n * //=> <li class=\"\">Pear</li>\n *\n * $('.apple').addClass('red').removeClass().html();\n * //=> <li class=\"\">Apple</li>\n * ```\n *\n * @param name - Name of the class. If not specified, removes all elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/removeClass/}\n */\nexport function removeClass(name) {\n    // Handle if value is a function\n    if (typeof name === 'function') {\n        return domEach(this, (el, i) => {\n            if (isTag(el)) {\n                removeClass.call([el], name.call(el, i, el.attribs['class'] || ''));\n            }\n        });\n    }\n    const classes = splitNames(name);\n    const numClasses = classes.length;\n    const removeAll = arguments.length === 0;\n    return domEach(this, (el) => {\n        if (!isTag(el))\n            return;\n        if (removeAll) {\n            // Short circuit the remove all case as this is the nice one\n            el.attribs['class'] = '';\n        }\n        else {\n            const elClasses = splitNames(el.attribs['class']);\n            let changed = false;\n            for (let j = 0; j < numClasses; j++) {\n                const index = elClasses.indexOf(classes[j]);\n                if (index >= 0) {\n                    elClasses.splice(index, 1);\n                    changed = true;\n                    /*\n                     * We have to do another pass to ensure that there are not duplicate\n                     * classes listed\n                     */\n                    j--;\n                }\n            }\n            if (changed) {\n                el.attribs['class'] = elClasses.join(' ');\n            }\n        }\n    });\n}\n/**\n * Add or remove class(es) from the matched elements, depending on either the\n * class's presence or the value of the switch argument. Also accepts a `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.apple.green').toggleClass('fruit green red').html();\n * //=> <li class=\"apple fruit red\">Apple</li>\n *\n * $('.apple.green').toggleClass('fruit green red', true).html();\n * //=> <li class=\"apple green fruit red\">Apple</li>\n * ```\n *\n * @param value - Name of the class. Can also be a function.\n * @param stateVal - If specified the state of the class.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/toggleClass/}\n */\nexport function toggleClass(value, stateVal) {\n    // Support functions\n    if (typeof value === 'function') {\n        return domEach(this, (el, i) => {\n            if (isTag(el)) {\n                toggleClass.call([el], value.call(el, i, el.attribs['class'] || '', stateVal), stateVal);\n            }\n        });\n    }\n    // Return if no value or not a string or function\n    if (!value || typeof value !== 'string')\n        return this;\n    const classNames = value.split(rspace);\n    const numClasses = classNames.length;\n    const state = typeof stateVal === 'boolean' ? (stateVal ? 1 : -1) : 0;\n    const numElements = this.length;\n    for (let i = 0; i < numElements; i++) {\n        const el = this[i];\n        // If selected element isn't a tag, move on\n        if (!isTag(el))\n            continue;\n        const elementClasses = splitNames(el.attribs['class']);\n        // Check if class already exists\n        for (let j = 0; j < numClasses; j++) {\n            // Check if the class name is currently defined\n            const index = elementClasses.indexOf(classNames[j]);\n            // Add if stateValue === true or we are toggling and there is no value\n            if (state >= 0 && index < 0) {\n                elementClasses.push(classNames[j]);\n            }\n            else if (state <= 0 && index >= 0) {\n                // Otherwise remove but only if the item exists\n                elementClasses.splice(index, 1);\n            }\n        }\n        el.attribs['class'] = elementClasses.join(' ');\n    }\n    return this;\n}\n//# sourceMappingURL=attributes.js.map","export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"Attribute\"] = \"attribute\";\n    SelectorType[\"Pseudo\"] = \"pseudo\";\n    SelectorType[\"PseudoElement\"] = \"pseudo-element\";\n    SelectorType[\"Tag\"] = \"tag\";\n    SelectorType[\"Universal\"] = \"universal\";\n    // Traversals\n    SelectorType[\"Adjacent\"] = \"adjacent\";\n    SelectorType[\"Child\"] = \"child\";\n    SelectorType[\"Descendant\"] = \"descendant\";\n    SelectorType[\"Parent\"] = \"parent\";\n    SelectorType[\"Sibling\"] = \"sibling\";\n    SelectorType[\"ColumnCombinator\"] = \"column-combinator\";\n})(SelectorType || (SelectorType = {}));\n/**\n * Modes for ignore case.\n *\n * This could be updated to an enum, and the object is\n * the current stand-in that will allow code to be updated\n * without big changes.\n */\nexport const IgnoreCaseMode = {\n    Unknown: null,\n    QuirksMode: \"quirks\",\n    IgnoreCase: true,\n    CaseSensitive: false,\n};\nexport var AttributeAction;\n(function (AttributeAction) {\n    AttributeAction[\"Any\"] = \"any\";\n    AttributeAction[\"Element\"] = \"element\";\n    AttributeAction[\"End\"] = \"end\";\n    AttributeAction[\"Equals\"] = \"equals\";\n    AttributeAction[\"Exists\"] = \"exists\";\n    AttributeAction[\"Hyphen\"] = \"hyphen\";\n    AttributeAction[\"Not\"] = \"not\";\n    AttributeAction[\"Start\"] = \"start\";\n})(AttributeAction || (AttributeAction = {}));\n","import { SelectorType, AttributeAction, } from \"./types\";\nconst reName = /^[^\\\\#]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;\nconst reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;\nconst actionTypes = new Map([\n    [126 /* Tilde */, AttributeAction.Element],\n    [94 /* Circumflex */, AttributeAction.Start],\n    [36 /* Dollar */, AttributeAction.End],\n    [42 /* Asterisk */, AttributeAction.Any],\n    [33 /* ExclamationMark */, AttributeAction.Not],\n    [124 /* Pipe */, AttributeAction.Hyphen],\n]);\n// Pseudos, whose data property is parsed as well.\nconst unpackPseudos = new Set([\n    \"has\",\n    \"not\",\n    \"matches\",\n    \"is\",\n    \"where\",\n    \"host\",\n    \"host-context\",\n]);\n/**\n * Checks whether a specific selector is a traversal.\n * This is useful eg. in swapping the order of elements that\n * are not traversals.\n *\n * @param selector Selector to check.\n */\nexport function isTraversal(selector) {\n    switch (selector.type) {\n        case SelectorType.Adjacent:\n        case SelectorType.Child:\n        case SelectorType.Descendant:\n        case SelectorType.Parent:\n        case SelectorType.Sibling:\n        case SelectorType.ColumnCombinator:\n            return true;\n        default:\n            return false;\n    }\n}\nconst stripQuotesFromPseudos = new Set([\"contains\", \"icontains\"]);\n// Unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152\nfunction funescape(_, escaped, escapedWhitespace) {\n    const high = parseInt(escaped, 16) - 0x10000;\n    // NaN means non-codepoint\n    return high !== high || escapedWhitespace\n        ? escaped\n        : high < 0\n            ? // BMP codepoint\n                String.fromCharCode(high + 0x10000)\n            : // Supplemental Plane codepoint (surrogate pair)\n                String.fromCharCode((high >> 10) | 0xd800, (high & 0x3ff) | 0xdc00);\n}\nfunction unescapeCSS(str) {\n    return str.replace(reEscape, funescape);\n}\nfunction isQuote(c) {\n    return c === 39 /* SingleQuote */ || c === 34 /* DoubleQuote */;\n}\nfunction isWhitespace(c) {\n    return (c === 32 /* Space */ ||\n        c === 9 /* Tab */ ||\n        c === 10 /* NewLine */ ||\n        c === 12 /* FormFeed */ ||\n        c === 13 /* CarriageReturn */);\n}\n/**\n * Parses `selector`, optionally with the passed `options`.\n *\n * @param selector Selector to parse.\n * @param options Options for parsing.\n * @returns Returns a two-dimensional array.\n * The first dimension represents selectors separated by commas (eg. `sub1, sub2`),\n * the second contains the relevant tokens for that selector.\n */\nexport function parse(selector) {\n    const subselects = [];\n    const endIndex = parseSelector(subselects, `${selector}`, 0);\n    if (endIndex < selector.length) {\n        throw new Error(`Unmatched selector: ${selector.slice(endIndex)}`);\n    }\n    return subselects;\n}\nfunction parseSelector(subselects, selector, selectorIndex) {\n    let tokens = [];\n    function getName(offset) {\n        const match = selector.slice(selectorIndex + offset).match(reName);\n        if (!match) {\n            throw new Error(`Expected name, found ${selector.slice(selectorIndex)}`);\n        }\n        const [name] = match;\n        selectorIndex += offset + name.length;\n        return unescapeCSS(name);\n    }\n    function stripWhitespace(offset) {\n        selectorIndex += offset;\n        while (selectorIndex < selector.length &&\n            isWhitespace(selector.charCodeAt(selectorIndex))) {\n            selectorIndex++;\n        }\n    }\n    function readValueWithParenthesis() {\n        selectorIndex += 1;\n        const start = selectorIndex;\n        let counter = 1;\n        for (; counter > 0 && selectorIndex < selector.length; selectorIndex++) {\n            if (selector.charCodeAt(selectorIndex) ===\n                40 /* LeftParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter++;\n            }\n            else if (selector.charCodeAt(selectorIndex) ===\n                41 /* RightParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter--;\n            }\n        }\n        if (counter) {\n            throw new Error(\"Parenthesis not matched\");\n        }\n        return unescapeCSS(selector.slice(start, selectorIndex - 1));\n    }\n    function isEscaped(pos) {\n        let slashCount = 0;\n        while (selector.charCodeAt(--pos) === 92 /* BackSlash */)\n            slashCount++;\n        return (slashCount & 1) === 1;\n    }\n    function ensureNotTraversal() {\n        if (tokens.length > 0 && isTraversal(tokens[tokens.length - 1])) {\n            throw new Error(\"Did not expect successive traversals.\");\n        }\n    }\n    function addTraversal(type) {\n        if (tokens.length > 0 &&\n            tokens[tokens.length - 1].type === SelectorType.Descendant) {\n            tokens[tokens.length - 1].type = type;\n            return;\n        }\n        ensureNotTraversal();\n        tokens.push({ type });\n    }\n    function addSpecialAttribute(name, action) {\n        tokens.push({\n            type: SelectorType.Attribute,\n            name,\n            action,\n            value: getName(1),\n            namespace: null,\n            ignoreCase: \"quirks\",\n        });\n    }\n    /**\n     * We have finished parsing the current part of the selector.\n     *\n     * Remove descendant tokens at the end if they exist,\n     * and return the last index, so that parsing can be\n     * picked up from here.\n     */\n    function finalizeSubselector() {\n        if (tokens.length &&\n            tokens[tokens.length - 1].type === SelectorType.Descendant) {\n            tokens.pop();\n        }\n        if (tokens.length === 0) {\n            throw new Error(\"Empty sub-selector\");\n        }\n        subselects.push(tokens);\n    }\n    stripWhitespace(0);\n    if (selector.length === selectorIndex) {\n        return selectorIndex;\n    }\n    loop: while (selectorIndex < selector.length) {\n        const firstChar = selector.charCodeAt(selectorIndex);\n        switch (firstChar) {\n            // Whitespace\n            case 32 /* Space */:\n            case 9 /* Tab */:\n            case 10 /* NewLine */:\n            case 12 /* FormFeed */:\n            case 13 /* CarriageReturn */: {\n                if (tokens.length === 0 ||\n                    tokens[0].type !== SelectorType.Descendant) {\n                    ensureNotTraversal();\n                    tokens.push({ type: SelectorType.Descendant });\n                }\n                stripWhitespace(1);\n                break;\n            }\n            // Traversals\n            case 62 /* GreaterThan */: {\n                addTraversal(SelectorType.Child);\n                stripWhitespace(1);\n                break;\n            }\n            case 60 /* LessThan */: {\n                addTraversal(SelectorType.Parent);\n                stripWhitespace(1);\n                break;\n            }\n            case 126 /* Tilde */: {\n                addTraversal(SelectorType.Sibling);\n                stripWhitespace(1);\n                break;\n            }\n            case 43 /* Plus */: {\n                addTraversal(SelectorType.Adjacent);\n                stripWhitespace(1);\n                break;\n            }\n            // Special attribute selectors: .class, #id\n            case 46 /* Period */: {\n                addSpecialAttribute(\"class\", AttributeAction.Element);\n                break;\n            }\n            case 35 /* Hash */: {\n                addSpecialAttribute(\"id\", AttributeAction.Equals);\n                break;\n            }\n            case 91 /* LeftSquareBracket */: {\n                stripWhitespace(1);\n                // Determine attribute name and namespace\n                let name;\n                let namespace = null;\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */) {\n                    // Equivalent to no namespace\n                    name = getName(1);\n                }\n                else if (selector.startsWith(\"*|\", selectorIndex)) {\n                    namespace = \"*\";\n                    name = getName(2);\n                }\n                else {\n                    name = getName(0);\n                    if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                        selector.charCodeAt(selectorIndex + 1) !==\n                            61 /* Equal */) {\n                        namespace = name;\n                        name = getName(1);\n                    }\n                }\n                stripWhitespace(0);\n                // Determine comparison operation\n                let action = AttributeAction.Exists;\n                const possibleAction = actionTypes.get(selector.charCodeAt(selectorIndex));\n                if (possibleAction) {\n                    action = possibleAction;\n                    if (selector.charCodeAt(selectorIndex + 1) !==\n                        61 /* Equal */) {\n                        throw new Error(\"Expected `=`\");\n                    }\n                    stripWhitespace(2);\n                }\n                else if (selector.charCodeAt(selectorIndex) === 61 /* Equal */) {\n                    action = AttributeAction.Equals;\n                    stripWhitespace(1);\n                }\n                // Determine value\n                let value = \"\";\n                let ignoreCase = null;\n                if (action !== \"exists\") {\n                    if (isQuote(selector.charCodeAt(selectorIndex))) {\n                        const quote = selector.charCodeAt(selectorIndex);\n                        let sectionEnd = selectorIndex + 1;\n                        while (sectionEnd < selector.length &&\n                            (selector.charCodeAt(sectionEnd) !== quote ||\n                                isEscaped(sectionEnd))) {\n                            sectionEnd += 1;\n                        }\n                        if (selector.charCodeAt(sectionEnd) !== quote) {\n                            throw new Error(\"Attribute value didn't end\");\n                        }\n                        value = unescapeCSS(selector.slice(selectorIndex + 1, sectionEnd));\n                        selectorIndex = sectionEnd + 1;\n                    }\n                    else {\n                        const valueStart = selectorIndex;\n                        while (selectorIndex < selector.length &&\n                            ((!isWhitespace(selector.charCodeAt(selectorIndex)) &&\n                                selector.charCodeAt(selectorIndex) !==\n                                    93 /* RightSquareBracket */) ||\n                                isEscaped(selectorIndex))) {\n                            selectorIndex += 1;\n                        }\n                        value = unescapeCSS(selector.slice(valueStart, selectorIndex));\n                    }\n                    stripWhitespace(0);\n                    // See if we have a force ignore flag\n                    const forceIgnore = selector.charCodeAt(selectorIndex) | 0x20;\n                    // If the forceIgnore flag is set (either `i` or `s`), use that value\n                    if (forceIgnore === 115 /* LowerS */) {\n                        ignoreCase = false;\n                        stripWhitespace(1);\n                    }\n                    else if (forceIgnore === 105 /* LowerI */) {\n                        ignoreCase = true;\n                        stripWhitespace(1);\n                    }\n                }\n                if (selector.charCodeAt(selectorIndex) !==\n                    93 /* RightSquareBracket */) {\n                    throw new Error(\"Attribute selector didn't terminate\");\n                }\n                selectorIndex += 1;\n                const attributeSelector = {\n                    type: SelectorType.Attribute,\n                    name,\n                    action,\n                    value,\n                    namespace,\n                    ignoreCase,\n                };\n                tokens.push(attributeSelector);\n                break;\n            }\n            case 58 /* Colon */: {\n                if (selector.charCodeAt(selectorIndex + 1) === 58 /* Colon */) {\n                    tokens.push({\n                        type: SelectorType.PseudoElement,\n                        name: getName(2).toLowerCase(),\n                        data: selector.charCodeAt(selectorIndex) ===\n                            40 /* LeftParenthesis */\n                            ? readValueWithParenthesis()\n                            : null,\n                    });\n                    continue;\n                }\n                const name = getName(1).toLowerCase();\n                let data = null;\n                if (selector.charCodeAt(selectorIndex) ===\n                    40 /* LeftParenthesis */) {\n                    if (unpackPseudos.has(name)) {\n                        if (isQuote(selector.charCodeAt(selectorIndex + 1))) {\n                            throw new Error(`Pseudo-selector ${name} cannot be quoted`);\n                        }\n                        data = [];\n                        selectorIndex = parseSelector(data, selector, selectorIndex + 1);\n                        if (selector.charCodeAt(selectorIndex) !==\n                            41 /* RightParenthesis */) {\n                            throw new Error(`Missing closing parenthesis in :${name} (${selector})`);\n                        }\n                        selectorIndex += 1;\n                    }\n                    else {\n                        data = readValueWithParenthesis();\n                        if (stripQuotesFromPseudos.has(name)) {\n                            const quot = data.charCodeAt(0);\n                            if (quot === data.charCodeAt(data.length - 1) &&\n                                isQuote(quot)) {\n                                data = data.slice(1, -1);\n                            }\n                        }\n                        data = unescapeCSS(data);\n                    }\n                }\n                tokens.push({ type: SelectorType.Pseudo, name, data });\n                break;\n            }\n            case 44 /* Comma */: {\n                finalizeSubselector();\n                tokens = [];\n                stripWhitespace(1);\n                break;\n            }\n            default: {\n                if (selector.startsWith(\"/*\", selectorIndex)) {\n                    const endIndex = selector.indexOf(\"*/\", selectorIndex + 2);\n                    if (endIndex < 0) {\n                        throw new Error(\"Comment was not terminated\");\n                    }\n                    selectorIndex = endIndex + 2;\n                    // Remove leading whitespace\n                    if (tokens.length === 0) {\n                        stripWhitespace(0);\n                    }\n                    break;\n                }\n                let namespace = null;\n                let name;\n                if (firstChar === 42 /* Asterisk */) {\n                    selectorIndex += 1;\n                    name = \"*\";\n                }\n                else if (firstChar === 124 /* Pipe */) {\n                    name = \"\";\n                    if (selector.charCodeAt(selectorIndex + 1) === 124 /* Pipe */) {\n                        addTraversal(SelectorType.ColumnCombinator);\n                        stripWhitespace(2);\n                        break;\n                    }\n                }\n                else if (reName.test(selector.slice(selectorIndex))) {\n                    name = getName(0);\n                }\n                else {\n                    break loop;\n                }\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                    selector.charCodeAt(selectorIndex + 1) !== 124 /* Pipe */) {\n                    namespace = name;\n                    if (selector.charCodeAt(selectorIndex + 1) ===\n                        42 /* Asterisk */) {\n                        name = \"*\";\n                        selectorIndex += 2;\n                    }\n                    else {\n                        name = getName(1);\n                    }\n                }\n                tokens.push(name === \"*\"\n                    ? { type: SelectorType.Universal, namespace }\n                    : { type: SelectorType.Tag, name, namespace });\n            }\n        }\n    }\n    finalizeSubselector();\n    return selectorIndex;\n}\n","import { ElementType, isTag as isTagRaw } from \"domelementtype\";\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nexport class Node {\n    constructor() {\n        /** Parent of the node */\n        this.parent = null;\n        /** Previous sibling */\n        this.prev = null;\n        /** Next sibling */\n        this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n        this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n        this.endIndex = null;\n    }\n    // Read-write aliases for properties\n    /**\n     * Same as {@link parent}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get parentNode() {\n        return this.parent;\n    }\n    set parentNode(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Same as {@link prev}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get previousSibling() {\n        return this.prev;\n    }\n    set previousSibling(prev) {\n        this.prev = prev;\n    }\n    /**\n     * Same as {@link next}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nextSibling() {\n        return this.next;\n    }\n    set nextSibling(next) {\n        this.next = next;\n    }\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */\n    cloneNode(recursive = false) {\n        return cloneNode(this, recursive);\n    }\n}\n/**\n * A node that contains some data.\n */\nexport class DataNode extends Node {\n    /**\n     * @param data The content of the data node\n     */\n    constructor(data) {\n        super();\n        this.data = data;\n    }\n    /**\n     * Same as {@link data}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nodeValue() {\n        return this.data;\n    }\n    set nodeValue(data) {\n        this.data = data;\n    }\n}\n/**\n * Text within the document.\n */\nexport class Text extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Text;\n    }\n    get nodeType() {\n        return 3;\n    }\n}\n/**\n * Comments within the document.\n */\nexport class Comment extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Comment;\n    }\n    get nodeType() {\n        return 8;\n    }\n}\n/**\n * Processing instructions, including doc types.\n */\nexport class ProcessingInstruction extends DataNode {\n    constructor(name, data) {\n        super(data);\n        this.name = name;\n        this.type = ElementType.Directive;\n    }\n    get nodeType() {\n        return 1;\n    }\n}\n/**\n * A `Node` that can have children.\n */\nexport class NodeWithChildren extends Node {\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    constructor(children) {\n        super();\n        this.children = children;\n    }\n    // Aliases\n    /** First child of the node. */\n    get firstChild() {\n        var _a;\n        return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Last child of the node. */\n    get lastChild() {\n        return this.children.length > 0\n            ? this.children[this.children.length - 1]\n            : null;\n    }\n    /**\n     * Same as {@link children}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get childNodes() {\n        return this.children;\n    }\n    set childNodes(children) {\n        this.children = children;\n    }\n}\nexport class CDATA extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.CDATA;\n    }\n    get nodeType() {\n        return 4;\n    }\n}\n/**\n * The root node of the document.\n */\nexport class Document extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Root;\n    }\n    get nodeType() {\n        return 9;\n    }\n}\n/**\n * An element within the DOM.\n */\nexport class Element extends NodeWithChildren {\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    constructor(name, attribs, children = [], type = name === \"script\"\n        ? ElementType.Script\n        : name === \"style\"\n            ? ElementType.Style\n            : ElementType.Tag) {\n        super(children);\n        this.name = name;\n        this.attribs = attribs;\n        this.type = type;\n    }\n    get nodeType() {\n        return 1;\n    }\n    // DOM Level 1 aliases\n    /**\n     * Same as {@link name}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get tagName() {\n        return this.name;\n    }\n    set tagName(name) {\n        this.name = name;\n    }\n    get attributes() {\n        return Object.keys(this.attribs).map((name) => {\n            var _a, _b;\n            return ({\n                name,\n                value: this.attribs[name],\n                namespace: (_a = this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                prefix: (_b = this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name],\n            });\n        });\n    }\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */\nexport function isTag(node) {\n    return isTagRaw(node);\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */\nexport function isCDATA(node) {\n    return node.type === ElementType.CDATA;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */\nexport function isText(node) {\n    return node.type === ElementType.Text;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */\nexport function isComment(node) {\n    return node.type === ElementType.Comment;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDirective(node) {\n    return node.type === ElementType.Directive;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDocument(node) {\n    return node.type === ElementType.Root;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */\nexport function hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nexport function cloneNode(node, recursive = false) {\n    let result;\n    if (isText(node)) {\n        result = new Text(node.data);\n    }\n    else if (isComment(node)) {\n        result = new Comment(node.data);\n    }\n    else if (isTag(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Element(node.name, { ...node.attribs }, children);\n        children.forEach((child) => (child.parent = clone));\n        if (node.namespace != null) {\n            clone.namespace = node.namespace;\n        }\n        if (node[\"x-attribsNamespace\"]) {\n            clone[\"x-attribsNamespace\"] = { ...node[\"x-attribsNamespace\"] };\n        }\n        if (node[\"x-attribsPrefix\"]) {\n            clone[\"x-attribsPrefix\"] = { ...node[\"x-attribsPrefix\"] };\n        }\n        result = clone;\n    }\n    else if (isCDATA(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new CDATA(children);\n        children.forEach((child) => (child.parent = clone));\n        result = clone;\n    }\n    else if (isDocument(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Document(children);\n        children.forEach((child) => (child.parent = clone));\n        if (node[\"x-mode\"]) {\n            clone[\"x-mode\"] = node[\"x-mode\"];\n        }\n        result = clone;\n    }\n    else if (isDirective(node)) {\n        const instruction = new ProcessingInstruction(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    }\n    else {\n        throw new Error(`Not implemented yet: ${node.type}`);\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n        result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n}\nfunction cloneChildren(childs) {\n    const children = childs.map((child) => cloneNode(child, true));\n    for (let i = 1; i < children.length; i++) {\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n","import { ElementType } from \"domelementtype\";\nimport { Element, Text, Comment, CDATA, Document, ProcessingInstruction, } from \"./node.js\";\nexport * from \"./node.js\";\n// Default options\nconst defaultOpts = {\n    withStartIndices: false,\n    withEndIndices: false,\n    xmlMode: false,\n};\nexport class DomHandler {\n    /**\n     * @param callback Called once parsing has completed.\n     * @param options Settings for the handler.\n     * @param elementCB Callback whenever a tag is closed.\n     */\n    constructor(callback, options, elementCB) {\n        /** The elements of the DOM */\n        this.dom = [];\n        /** The root element for the DOM */\n        this.root = new Document(this.dom);\n        /** Indicated whether parsing has been completed. */\n        this.done = false;\n        /** Stack of open tags. */\n        this.tagStack = [this.root];\n        /** A data node that is still being written to. */\n        this.lastNode = null;\n        /** Reference to the parser instance. Used for location information. */\n        this.parser = null;\n        // Make it possible to skip arguments, for backwards-compatibility\n        if (typeof options === \"function\") {\n            elementCB = options;\n            options = defaultOpts;\n        }\n        if (typeof callback === \"object\") {\n            options = callback;\n            callback = undefined;\n        }\n        this.callback = callback !== null && callback !== void 0 ? callback : null;\n        this.options = options !== null && options !== void 0 ? options : defaultOpts;\n        this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n    }\n    onparserinit(parser) {\n        this.parser = parser;\n    }\n    // Resets the handler back to starting state\n    onreset() {\n        this.dom = [];\n        this.root = new Document(this.dom);\n        this.done = false;\n        this.tagStack = [this.root];\n        this.lastNode = null;\n        this.parser = null;\n    }\n    // Signals the handler that parsing is done\n    onend() {\n        if (this.done)\n            return;\n        this.done = true;\n        this.parser = null;\n        this.handleCallback(null);\n    }\n    onerror(error) {\n        this.handleCallback(error);\n    }\n    onclosetag() {\n        this.lastNode = null;\n        const elem = this.tagStack.pop();\n        if (this.options.withEndIndices) {\n            elem.endIndex = this.parser.endIndex;\n        }\n        if (this.elementCB)\n            this.elementCB(elem);\n    }\n    onopentag(name, attribs) {\n        const type = this.options.xmlMode ? ElementType.Tag : undefined;\n        const element = new Element(name, attribs, undefined, type);\n        this.addNode(element);\n        this.tagStack.push(element);\n    }\n    ontext(data) {\n        const { lastNode } = this;\n        if (lastNode && lastNode.type === ElementType.Text) {\n            lastNode.data += data;\n            if (this.options.withEndIndices) {\n                lastNode.endIndex = this.parser.endIndex;\n            }\n        }\n        else {\n            const node = new Text(data);\n            this.addNode(node);\n            this.lastNode = node;\n        }\n    }\n    oncomment(data) {\n        if (this.lastNode && this.lastNode.type === ElementType.Comment) {\n            this.lastNode.data += data;\n            return;\n        }\n        const node = new Comment(data);\n        this.addNode(node);\n        this.lastNode = node;\n    }\n    oncommentend() {\n        this.lastNode = null;\n    }\n    oncdatastart() {\n        const text = new Text(\"\");\n        const node = new CDATA([text]);\n        this.addNode(node);\n        text.parent = node;\n        this.lastNode = text;\n    }\n    oncdataend() {\n        this.lastNode = null;\n    }\n    onprocessinginstruction(name, data) {\n        const node = new ProcessingInstruction(name, data);\n        this.addNode(node);\n    }\n    handleCallback(error) {\n        if (typeof this.callback === \"function\") {\n            this.callback(error, this.dom);\n        }\n        else if (error) {\n            throw error;\n        }\n    }\n    addNode(node) {\n        const parent = this.tagStack[this.tagStack.length - 1];\n        const previousSibling = parent.children[parent.children.length - 1];\n        if (this.options.withStartIndices) {\n            node.startIndex = this.parser.startIndex;\n        }\n        if (this.options.withEndIndices) {\n            node.endIndex = this.parser.endIndex;\n        }\n        parent.children.push(node);\n        if (previousSibling) {\n            node.prev = previousSibling;\n            previousSibling.next = node;\n        }\n        node.parent = parent;\n        this.lastNode = null;\n    }\n}\nexport default DomHandler;\n","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map","import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map","// Generated using scripts/write-encode-map.ts\nfunction restoreDiff(arr) {\n    for (let i = 1; i < arr.length; i++) {\n        arr[i][0] += arr[i - 1][0] + 1;\n    }\n    return arr;\n}\n// prettier-ignore\nexport default new Map(/* #__PURE__ */ restoreDiff([[9, \"&Tab;\"], [0, \"&NewLine;\"], [22, \"&excl;\"], [0, \"&quot;\"], [0, \"&num;\"], [0, \"&dollar;\"], [0, \"&percnt;\"], [0, \"&amp;\"], [0, \"&apos;\"], [0, \"&lpar;\"], [0, \"&rpar;\"], [0, \"&ast;\"], [0, \"&plus;\"], [0, \"&comma;\"], [1, \"&period;\"], [0, \"&sol;\"], [10, \"&colon;\"], [0, \"&semi;\"], [0, { v: \"&lt;\", n: 8402, o: \"&nvlt;\" }], [0, { v: \"&equals;\", n: 8421, o: \"&bne;\" }], [0, { v: \"&gt;\", n: 8402, o: \"&nvgt;\" }], [0, \"&quest;\"], [0, \"&commat;\"], [26, \"&lbrack;\"], [0, \"&bsol;\"], [0, \"&rbrack;\"], [0, \"&Hat;\"], [0, \"&lowbar;\"], [0, \"&DiacriticalGrave;\"], [5, { n: 106, o: \"&fjlig;\" }], [20, \"&lbrace;\"], [0, \"&verbar;\"], [0, \"&rbrace;\"], [34, \"&nbsp;\"], [0, \"&iexcl;\"], [0, \"&cent;\"], [0, \"&pound;\"], [0, \"&curren;\"], [0, \"&yen;\"], [0, \"&brvbar;\"], [0, \"&sect;\"], [0, \"&die;\"], [0, \"&copy;\"], [0, \"&ordf;\"], [0, \"&laquo;\"], [0, \"&not;\"], [0, \"&shy;\"], [0, \"&circledR;\"], [0, \"&macr;\"], [0, \"&deg;\"], [0, \"&PlusMinus;\"], [0, \"&sup2;\"], [0, \"&sup3;\"], [0, \"&acute;\"], [0, \"&micro;\"], [0, \"&para;\"], [0, \"&centerdot;\"], [0, \"&cedil;\"], [0, \"&sup1;\"], [0, \"&ordm;\"], [0, \"&raquo;\"], [0, \"&frac14;\"], [0, \"&frac12;\"], [0, \"&frac34;\"], [0, \"&iquest;\"], [0, \"&Agrave;\"], [0, \"&Aacute;\"], [0, \"&Acirc;\"], [0, \"&Atilde;\"], [0, \"&Auml;\"], [0, \"&angst;\"], [0, \"&AElig;\"], [0, \"&Ccedil;\"], [0, \"&Egrave;\"], [0, \"&Eacute;\"], [0, \"&Ecirc;\"], [0, \"&Euml;\"], [0, \"&Igrave;\"], [0, \"&Iacute;\"], [0, \"&Icirc;\"], [0, \"&Iuml;\"], [0, \"&ETH;\"], [0, \"&Ntilde;\"], [0, \"&Ograve;\"], [0, \"&Oacute;\"], [0, \"&Ocirc;\"], [0, \"&Otilde;\"], [0, \"&Ouml;\"], [0, \"&times;\"], [0, \"&Oslash;\"], [0, \"&Ugrave;\"], [0, \"&Uacute;\"], [0, \"&Ucirc;\"], [0, \"&Uuml;\"], [0, \"&Yacute;\"], [0, \"&THORN;\"], [0, \"&szlig;\"], [0, \"&agrave;\"], [0, \"&aacute;\"], [0, \"&acirc;\"], [0, \"&atilde;\"], [0, \"&auml;\"], [0, \"&aring;\"], [0, \"&aelig;\"], [0, \"&ccedil;\"], [0, \"&egrave;\"], [0, \"&eacute;\"], [0, \"&ecirc;\"], [0, \"&euml;\"], [0, \"&igrave;\"], [0, \"&iacute;\"], [0, \"&icirc;\"], [0, \"&iuml;\"], [0, \"&eth;\"], [0, \"&ntilde;\"], [0, \"&ograve;\"], [0, \"&oacute;\"], [0, \"&ocirc;\"], [0, \"&otilde;\"], [0, \"&ouml;\"], [0, \"&div;\"], [0, \"&oslash;\"], [0, \"&ugrave;\"], [0, \"&uacute;\"], [0, \"&ucirc;\"], [0, \"&uuml;\"], [0, \"&yacute;\"], [0, \"&thorn;\"], [0, \"&yuml;\"], [0, \"&Amacr;\"], [0, \"&amacr;\"], [0, \"&Abreve;\"], [0, \"&abreve;\"], [0, \"&Aogon;\"], [0, \"&aogon;\"], [0, \"&Cacute;\"], [0, \"&cacute;\"], [0, \"&Ccirc;\"], [0, \"&ccirc;\"], [0, \"&Cdot;\"], [0, \"&cdot;\"], [0, \"&Ccaron;\"], [0, \"&ccaron;\"], [0, \"&Dcaron;\"], [0, \"&dcaron;\"], [0, \"&Dstrok;\"], [0, \"&dstrok;\"], [0, \"&Emacr;\"], [0, \"&emacr;\"], [2, \"&Edot;\"], [0, \"&edot;\"], [0, \"&Eogon;\"], [0, \"&eogon;\"], [0, \"&Ecaron;\"], [0, \"&ecaron;\"], [0, \"&Gcirc;\"], [0, \"&gcirc;\"], [0, \"&Gbreve;\"], [0, \"&gbreve;\"], [0, \"&Gdot;\"], [0, \"&gdot;\"], [0, \"&Gcedil;\"], [1, \"&Hcirc;\"], [0, \"&hcirc;\"], [0, \"&Hstrok;\"], [0, \"&hstrok;\"], [0, \"&Itilde;\"], [0, \"&itilde;\"], [0, \"&Imacr;\"], [0, \"&imacr;\"], [2, \"&Iogon;\"], [0, \"&iogon;\"], [0, \"&Idot;\"], [0, \"&imath;\"], [0, \"&IJlig;\"], [0, \"&ijlig;\"], [0, \"&Jcirc;\"], [0, \"&jcirc;\"], [0, \"&Kcedil;\"], [0, \"&kcedil;\"], [0, \"&kgreen;\"], [0, \"&Lacute;\"], [0, \"&lacute;\"], [0, \"&Lcedil;\"], [0, \"&lcedil;\"], [0, \"&Lcaron;\"], [0, \"&lcaron;\"], [0, \"&Lmidot;\"], [0, \"&lmidot;\"], [0, \"&Lstrok;\"], [0, \"&lstrok;\"], [0, \"&Nacute;\"], [0, \"&nacute;\"], [0, \"&Ncedil;\"], [0, \"&ncedil;\"], [0, \"&Ncaron;\"], [0, \"&ncaron;\"], [0, \"&napos;\"], [0, \"&ENG;\"], [0, \"&eng;\"], [0, \"&Omacr;\"], [0, \"&omacr;\"], [2, \"&Odblac;\"], [0, \"&odblac;\"], [0, \"&OElig;\"], [0, \"&oelig;\"], [0, \"&Racute;\"], [0, \"&racute;\"], [0, \"&Rcedil;\"], [0, \"&rcedil;\"], [0, \"&Rcaron;\"], [0, \"&rcaron;\"], [0, \"&Sacute;\"], [0, \"&sacute;\"], [0, \"&Scirc;\"], [0, \"&scirc;\"], [0, \"&Scedil;\"], [0, \"&scedil;\"], [0, \"&Scaron;\"], [0, \"&scaron;\"], [0, \"&Tcedil;\"], [0, \"&tcedil;\"], [0, \"&Tcaron;\"], [0, \"&tcaron;\"], [0, \"&Tstrok;\"], [0, \"&tstrok;\"], [0, \"&Utilde;\"], [0, \"&utilde;\"], [0, \"&Umacr;\"], [0, \"&umacr;\"], [0, \"&Ubreve;\"], [0, \"&ubreve;\"], [0, \"&Uring;\"], [0, \"&uring;\"], [0, \"&Udblac;\"], [0, \"&udblac;\"], [0, \"&Uogon;\"], [0, \"&uogon;\"], [0, \"&Wcirc;\"], [0, \"&wcirc;\"], [0, \"&Ycirc;\"], [0, \"&ycirc;\"], [0, \"&Yuml;\"], [0, \"&Zacute;\"], [0, \"&zacute;\"], [0, \"&Zdot;\"], [0, \"&zdot;\"], [0, \"&Zcaron;\"], [0, \"&zcaron;\"], [19, \"&fnof;\"], [34, \"&imped;\"], [63, \"&gacute;\"], [65, \"&jmath;\"], [142, \"&circ;\"], [0, \"&caron;\"], [16, \"&breve;\"], [0, \"&DiacriticalDot;\"], [0, \"&ring;\"], [0, \"&ogon;\"], [0, \"&DiacriticalTilde;\"], [0, \"&dblac;\"], [51, \"&DownBreve;\"], [127, \"&Alpha;\"], [0, \"&Beta;\"], [0, \"&Gamma;\"], [0, \"&Delta;\"], [0, \"&Epsilon;\"], [0, \"&Zeta;\"], [0, \"&Eta;\"], [0, \"&Theta;\"], [0, \"&Iota;\"], [0, \"&Kappa;\"], [0, \"&Lambda;\"], [0, \"&Mu;\"], [0, \"&Nu;\"], [0, \"&Xi;\"], [0, \"&Omicron;\"], [0, \"&Pi;\"], [0, \"&Rho;\"], [1, \"&Sigma;\"], [0, \"&Tau;\"], [0, \"&Upsilon;\"], [0, \"&Phi;\"], [0, \"&Chi;\"], [0, \"&Psi;\"], [0, \"&ohm;\"], [7, \"&alpha;\"], [0, \"&beta;\"], [0, \"&gamma;\"], [0, \"&delta;\"], [0, \"&epsi;\"], [0, \"&zeta;\"], [0, \"&eta;\"], [0, \"&theta;\"], [0, \"&iota;\"], [0, \"&kappa;\"], [0, \"&lambda;\"], [0, \"&mu;\"], [0, \"&nu;\"], [0, \"&xi;\"], [0, \"&omicron;\"], [0, \"&pi;\"], [0, \"&rho;\"], [0, \"&sigmaf;\"], [0, \"&sigma;\"], [0, \"&tau;\"], [0, \"&upsi;\"], [0, \"&phi;\"], [0, \"&chi;\"], [0, \"&psi;\"], [0, \"&omega;\"], [7, \"&thetasym;\"], [0, \"&Upsi;\"], [2, \"&phiv;\"], [0, \"&piv;\"], [5, \"&Gammad;\"], [0, \"&digamma;\"], [18, \"&kappav;\"], [0, \"&rhov;\"], [3, \"&epsiv;\"], [0, \"&backepsilon;\"], [10, \"&IOcy;\"], [0, \"&DJcy;\"], [0, \"&GJcy;\"], [0, \"&Jukcy;\"], [0, \"&DScy;\"], [0, \"&Iukcy;\"], [0, \"&YIcy;\"], [0, \"&Jsercy;\"], [0, \"&LJcy;\"], [0, \"&NJcy;\"], [0, \"&TSHcy;\"], [0, \"&KJcy;\"], [1, \"&Ubrcy;\"], [0, \"&DZcy;\"], [0, \"&Acy;\"], [0, \"&Bcy;\"], [0, \"&Vcy;\"], [0, \"&Gcy;\"], [0, \"&Dcy;\"], [0, \"&IEcy;\"], [0, \"&ZHcy;\"], [0, \"&Zcy;\"], [0, \"&Icy;\"], [0, \"&Jcy;\"], [0, \"&Kcy;\"], [0, \"&Lcy;\"], [0, \"&Mcy;\"], [0, \"&Ncy;\"], [0, \"&Ocy;\"], [0, \"&Pcy;\"], [0, \"&Rcy;\"], [0, \"&Scy;\"], [0, \"&Tcy;\"], [0, \"&Ucy;\"], [0, \"&Fcy;\"], [0, \"&KHcy;\"], [0, \"&TScy;\"], [0, \"&CHcy;\"], [0, \"&SHcy;\"], [0, \"&SHCHcy;\"], [0, \"&HARDcy;\"], [0, \"&Ycy;\"], [0, \"&SOFTcy;\"], [0, \"&Ecy;\"], [0, \"&YUcy;\"], [0, \"&YAcy;\"], [0, \"&acy;\"], [0, \"&bcy;\"], [0, \"&vcy;\"], [0, \"&gcy;\"], [0, \"&dcy;\"], [0, \"&iecy;\"], [0, \"&zhcy;\"], [0, \"&zcy;\"], [0, \"&icy;\"], [0, \"&jcy;\"], [0, \"&kcy;\"], [0, \"&lcy;\"], [0, \"&mcy;\"], [0, \"&ncy;\"], [0, \"&ocy;\"], [0, \"&pcy;\"], [0, \"&rcy;\"], [0, \"&scy;\"], [0, \"&tcy;\"], [0, \"&ucy;\"], [0, \"&fcy;\"], [0, \"&khcy;\"], [0, \"&tscy;\"], [0, \"&chcy;\"], [0, \"&shcy;\"], [0, \"&shchcy;\"], [0, \"&hardcy;\"], [0, \"&ycy;\"], [0, \"&softcy;\"], [0, \"&ecy;\"], [0, \"&yucy;\"], [0, \"&yacy;\"], [1, \"&iocy;\"], [0, \"&djcy;\"], [0, \"&gjcy;\"], [0, \"&jukcy;\"], [0, \"&dscy;\"], [0, \"&iukcy;\"], [0, \"&yicy;\"], [0, \"&jsercy;\"], [0, \"&ljcy;\"], [0, \"&njcy;\"], [0, \"&tshcy;\"], [0, \"&kjcy;\"], [1, \"&ubrcy;\"], [0, \"&dzcy;\"], [7074, \"&ensp;\"], [0, \"&emsp;\"], [0, \"&emsp13;\"], [0, \"&emsp14;\"], [1, \"&numsp;\"], [0, \"&puncsp;\"], [0, \"&ThinSpace;\"], [0, \"&hairsp;\"], [0, \"&NegativeMediumSpace;\"], [0, \"&zwnj;\"], [0, \"&zwj;\"], [0, \"&lrm;\"], [0, \"&rlm;\"], [0, \"&dash;\"], [2, \"&ndash;\"], [0, \"&mdash;\"], [0, \"&horbar;\"], [0, \"&Verbar;\"], [1, \"&lsquo;\"], [0, \"&CloseCurlyQuote;\"], [0, \"&lsquor;\"], [1, \"&ldquo;\"], [0, \"&CloseCurlyDoubleQuote;\"], [0, \"&bdquo;\"], [1, \"&dagger;\"], [0, \"&Dagger;\"], [0, \"&bull;\"], [2, \"&nldr;\"], [0, \"&hellip;\"], [9, \"&permil;\"], [0, \"&pertenk;\"], [0, \"&prime;\"], [0, \"&Prime;\"], [0, \"&tprime;\"], [0, \"&backprime;\"], [3, \"&lsaquo;\"], [0, \"&rsaquo;\"], [3, \"&oline;\"], [2, \"&caret;\"], [1, \"&hybull;\"], [0, \"&frasl;\"], [10, \"&bsemi;\"], [7, \"&qprime;\"], [7, { v: \"&MediumSpace;\", n: 8202, o: \"&ThickSpace;\" }], [0, \"&NoBreak;\"], [0, \"&af;\"], [0, \"&InvisibleTimes;\"], [0, \"&ic;\"], [72, \"&euro;\"], [46, \"&tdot;\"], [0, \"&DotDot;\"], [37, \"&complexes;\"], [2, \"&incare;\"], [4, \"&gscr;\"], [0, \"&hamilt;\"], [0, \"&Hfr;\"], [0, \"&Hopf;\"], [0, \"&planckh;\"], [0, \"&hbar;\"], [0, \"&imagline;\"], [0, \"&Ifr;\"], [0, \"&lagran;\"], [0, \"&ell;\"], [1, \"&naturals;\"], [0, \"&numero;\"], [0, \"&copysr;\"], [0, \"&weierp;\"], [0, \"&Popf;\"], [0, \"&Qopf;\"], [0, \"&realine;\"], [0, \"&real;\"], [0, \"&reals;\"], [0, \"&rx;\"], [3, \"&trade;\"], [1, \"&integers;\"], [2, \"&mho;\"], [0, \"&zeetrf;\"], [0, \"&iiota;\"], [2, \"&bernou;\"], [0, \"&Cayleys;\"], [1, \"&escr;\"], [0, \"&Escr;\"], [0, \"&Fouriertrf;\"], [1, \"&Mellintrf;\"], [0, \"&order;\"], [0, \"&alefsym;\"], [0, \"&beth;\"], [0, \"&gimel;\"], [0, \"&daleth;\"], [12, \"&CapitalDifferentialD;\"], [0, \"&dd;\"], [0, \"&ee;\"], [0, \"&ii;\"], [10, \"&frac13;\"], [0, \"&frac23;\"], [0, \"&frac15;\"], [0, \"&frac25;\"], [0, \"&frac35;\"], [0, \"&frac45;\"], [0, \"&frac16;\"], [0, \"&frac56;\"], [0, \"&frac18;\"], [0, \"&frac38;\"], [0, \"&frac58;\"], [0, \"&frac78;\"], [49, \"&larr;\"], [0, \"&ShortUpArrow;\"], [0, \"&rarr;\"], [0, \"&darr;\"], [0, \"&harr;\"], [0, \"&updownarrow;\"], [0, \"&nwarr;\"], [0, \"&nearr;\"], [0, \"&LowerRightArrow;\"], [0, \"&LowerLeftArrow;\"], [0, \"&nlarr;\"], [0, \"&nrarr;\"], [1, { v: \"&rarrw;\", n: 824, o: \"&nrarrw;\" }], [0, \"&Larr;\"], [0, \"&Uarr;\"], [0, \"&Rarr;\"], [0, \"&Darr;\"], [0, \"&larrtl;\"], [0, \"&rarrtl;\"], [0, \"&LeftTeeArrow;\"], [0, \"&mapstoup;\"], [0, \"&map;\"], [0, \"&DownTeeArrow;\"], [1, \"&hookleftarrow;\"], [0, \"&hookrightarrow;\"], [0, \"&larrlp;\"], [0, \"&looparrowright;\"], [0, \"&harrw;\"], [0, \"&nharr;\"], [1, \"&lsh;\"], [0, \"&rsh;\"], [0, \"&ldsh;\"], [0, \"&rdsh;\"], [1, \"&crarr;\"], [0, \"&cularr;\"], [0, \"&curarr;\"], [2, \"&circlearrowleft;\"], [0, \"&circlearrowright;\"], [0, \"&leftharpoonup;\"], [0, \"&DownLeftVector;\"], [0, \"&RightUpVector;\"], [0, \"&LeftUpVector;\"], [0, \"&rharu;\"], [0, \"&DownRightVector;\"], [0, \"&dharr;\"], [0, \"&dharl;\"], [0, \"&RightArrowLeftArrow;\"], [0, \"&udarr;\"], [0, \"&LeftArrowRightArrow;\"], [0, \"&leftleftarrows;\"], [0, \"&upuparrows;\"], [0, \"&rightrightarrows;\"], [0, \"&ddarr;\"], [0, \"&leftrightharpoons;\"], [0, \"&Equilibrium;\"], [0, \"&nlArr;\"], [0, \"&nhArr;\"], [0, \"&nrArr;\"], [0, \"&DoubleLeftArrow;\"], [0, \"&DoubleUpArrow;\"], [0, \"&DoubleRightArrow;\"], [0, \"&dArr;\"], [0, \"&DoubleLeftRightArrow;\"], [0, \"&DoubleUpDownArrow;\"], [0, \"&nwArr;\"], [0, \"&neArr;\"], [0, \"&seArr;\"], [0, \"&swArr;\"], [0, \"&lAarr;\"], [0, \"&rAarr;\"], [1, \"&zigrarr;\"], [6, \"&larrb;\"], [0, \"&rarrb;\"], [15, \"&DownArrowUpArrow;\"], [7, \"&loarr;\"], [0, \"&roarr;\"], [0, \"&hoarr;\"], [0, \"&forall;\"], [0, \"&comp;\"], [0, { v: \"&part;\", n: 824, o: \"&npart;\" }], [0, \"&exist;\"], [0, \"&nexist;\"], [0, \"&empty;\"], [1, \"&Del;\"], [0, \"&Element;\"], [0, \"&NotElement;\"], [1, \"&ni;\"], [0, \"&notni;\"], [2, \"&prod;\"], [0, \"&coprod;\"], [0, \"&sum;\"], [0, \"&minus;\"], [0, \"&MinusPlus;\"], [0, \"&dotplus;\"], [1, \"&Backslash;\"], [0, \"&lowast;\"], [0, \"&compfn;\"], [1, \"&radic;\"], [2, \"&prop;\"], [0, \"&infin;\"], [0, \"&angrt;\"], [0, { v: \"&ang;\", n: 8402, o: \"&nang;\" }], [0, \"&angmsd;\"], [0, \"&angsph;\"], [0, \"&mid;\"], [0, \"&nmid;\"], [0, \"&DoubleVerticalBar;\"], [0, \"&NotDoubleVerticalBar;\"], [0, \"&and;\"], [0, \"&or;\"], [0, { v: \"&cap;\", n: 65024, o: \"&caps;\" }], [0, { v: \"&cup;\", n: 65024, o: \"&cups;\" }], [0, \"&int;\"], [0, \"&Int;\"], [0, \"&iiint;\"], [0, \"&conint;\"], [0, \"&Conint;\"], [0, \"&Cconint;\"], [0, \"&cwint;\"], [0, \"&ClockwiseContourIntegral;\"], [0, \"&awconint;\"], [0, \"&there4;\"], [0, \"&becaus;\"], [0, \"&ratio;\"], [0, \"&Colon;\"], [0, \"&dotminus;\"], [1, \"&mDDot;\"], [0, \"&homtht;\"], [0, { v: \"&sim;\", n: 8402, o: \"&nvsim;\" }], [0, { v: \"&backsim;\", n: 817, o: \"&race;\" }], [0, { v: \"&ac;\", n: 819, o: \"&acE;\" }], [0, \"&acd;\"], [0, \"&VerticalTilde;\"], [0, \"&NotTilde;\"], [0, { v: \"&eqsim;\", n: 824, o: \"&nesim;\" }], [0, \"&sime;\"], [0, \"&NotTildeEqual;\"], [0, \"&cong;\"], [0, \"&simne;\"], [0, \"&ncong;\"], [0, \"&ap;\"], [0, \"&nap;\"], [0, \"&ape;\"], [0, { v: \"&apid;\", n: 824, o: \"&napid;\" }], [0, \"&backcong;\"], [0, { v: \"&asympeq;\", n: 8402, o: \"&nvap;\" }], [0, { v: \"&bump;\", n: 824, o: \"&nbump;\" }], [0, { v: \"&bumpe;\", n: 824, o: \"&nbumpe;\" }], [0, { v: \"&doteq;\", n: 824, o: \"&nedot;\" }], [0, \"&doteqdot;\"], [0, \"&efDot;\"], [0, \"&erDot;\"], [0, \"&Assign;\"], [0, \"&ecolon;\"], [0, \"&ecir;\"], [0, \"&circeq;\"], [1, \"&wedgeq;\"], [0, \"&veeeq;\"], [1, \"&triangleq;\"], [2, \"&equest;\"], [0, \"&ne;\"], [0, { v: \"&Congruent;\", n: 8421, o: \"&bnequiv;\" }], [0, \"&nequiv;\"], [1, { v: \"&le;\", n: 8402, o: \"&nvle;\" }], [0, { v: \"&ge;\", n: 8402, o: \"&nvge;\" }], [0, { v: \"&lE;\", n: 824, o: \"&nlE;\" }], [0, { v: \"&gE;\", n: 824, o: \"&ngE;\" }], [0, { v: \"&lnE;\", n: 65024, o: \"&lvertneqq;\" }], [0, { v: \"&gnE;\", n: 65024, o: \"&gvertneqq;\" }], [0, { v: \"&ll;\", n: new Map(/* #__PURE__ */ restoreDiff([[824, \"&nLtv;\"], [7577, \"&nLt;\"]])) }], [0, { v: \"&gg;\", n: new Map(/* #__PURE__ */ restoreDiff([[824, \"&nGtv;\"], [7577, \"&nGt;\"]])) }], [0, \"&between;\"], [0, \"&NotCupCap;\"], [0, \"&nless;\"], [0, \"&ngt;\"], [0, \"&nle;\"], [0, \"&nge;\"], [0, \"&lesssim;\"], [0, \"&GreaterTilde;\"], [0, \"&nlsim;\"], [0, \"&ngsim;\"], [0, \"&LessGreater;\"], [0, \"&gl;\"], [0, \"&NotLessGreater;\"], [0, \"&NotGreaterLess;\"], [0, \"&pr;\"], [0, \"&sc;\"], [0, \"&prcue;\"], [0, \"&sccue;\"], [0, \"&PrecedesTilde;\"], [0, { v: \"&scsim;\", n: 824, o: \"&NotSucceedsTilde;\" }], [0, \"&NotPrecedes;\"], [0, \"&NotSucceeds;\"], [0, { v: \"&sub;\", n: 8402, o: \"&NotSubset;\" }], [0, { v: \"&sup;\", n: 8402, o: \"&NotSuperset;\" }], [0, \"&nsub;\"], [0, \"&nsup;\"], [0, \"&sube;\"], [0, \"&supe;\"], [0, \"&NotSubsetEqual;\"], [0, \"&NotSupersetEqual;\"], [0, { v: \"&subne;\", n: 65024, o: \"&varsubsetneq;\" }], [0, { v: \"&supne;\", n: 65024, o: \"&varsupsetneq;\" }], [1, \"&cupdot;\"], [0, \"&UnionPlus;\"], [0, { v: \"&sqsub;\", n: 824, o: \"&NotSquareSubset;\" }], [0, { v: \"&sqsup;\", n: 824, o: \"&NotSquareSuperset;\" }], [0, \"&sqsube;\"], [0, \"&sqsupe;\"], [0, { v: \"&sqcap;\", n: 65024, o: \"&sqcaps;\" }], [0, { v: \"&sqcup;\", n: 65024, o: \"&sqcups;\" }], [0, \"&CirclePlus;\"], [0, \"&CircleMinus;\"], [0, \"&CircleTimes;\"], [0, \"&osol;\"], [0, \"&CircleDot;\"], [0, \"&circledcirc;\"], [0, \"&circledast;\"], [1, \"&circleddash;\"], [0, \"&boxplus;\"], [0, \"&boxminus;\"], [0, \"&boxtimes;\"], [0, \"&dotsquare;\"], [0, \"&RightTee;\"], [0, \"&dashv;\"], [0, \"&DownTee;\"], [0, \"&bot;\"], [1, \"&models;\"], [0, \"&DoubleRightTee;\"], [0, \"&Vdash;\"], [0, \"&Vvdash;\"], [0, \"&VDash;\"], [0, \"&nvdash;\"], [0, \"&nvDash;\"], [0, \"&nVdash;\"], [0, \"&nVDash;\"], [0, \"&prurel;\"], [1, \"&LeftTriangle;\"], [0, \"&RightTriangle;\"], [0, { v: \"&LeftTriangleEqual;\", n: 8402, o: \"&nvltrie;\" }], [0, { v: \"&RightTriangleEqual;\", n: 8402, o: \"&nvrtrie;\" }], [0, \"&origof;\"], [0, \"&imof;\"], [0, \"&multimap;\"], [0, \"&hercon;\"], [0, \"&intcal;\"], [0, \"&veebar;\"], [1, \"&barvee;\"], [0, \"&angrtvb;\"], [0, \"&lrtri;\"], [0, \"&bigwedge;\"], [0, \"&bigvee;\"], [0, \"&bigcap;\"], [0, \"&bigcup;\"], [0, \"&diam;\"], [0, \"&sdot;\"], [0, \"&sstarf;\"], [0, \"&divideontimes;\"], [0, \"&bowtie;\"], [0, \"&ltimes;\"], [0, \"&rtimes;\"], [0, \"&leftthreetimes;\"], [0, \"&rightthreetimes;\"], [0, \"&backsimeq;\"], [0, \"&curlyvee;\"], [0, \"&curlywedge;\"], [0, \"&Sub;\"], [0, \"&Sup;\"], [0, \"&Cap;\"], [0, \"&Cup;\"], [0, \"&fork;\"], [0, \"&epar;\"], [0, \"&lessdot;\"], [0, \"&gtdot;\"], [0, { v: \"&Ll;\", n: 824, o: \"&nLl;\" }], [0, { v: \"&Gg;\", n: 824, o: \"&nGg;\" }], [0, { v: \"&leg;\", n: 65024, o: \"&lesg;\" }], [0, { v: \"&gel;\", n: 65024, o: \"&gesl;\" }], [2, \"&cuepr;\"], [0, \"&cuesc;\"], [0, \"&NotPrecedesSlantEqual;\"], [0, \"&NotSucceedsSlantEqual;\"], [0, \"&NotSquareSubsetEqual;\"], [0, \"&NotSquareSupersetEqual;\"], [2, \"&lnsim;\"], [0, \"&gnsim;\"], [0, \"&precnsim;\"], [0, \"&scnsim;\"], [0, \"&nltri;\"], [0, \"&NotRightTriangle;\"], [0, \"&nltrie;\"], [0, \"&NotRightTriangleEqual;\"], [0, \"&vellip;\"], [0, \"&ctdot;\"], [0, \"&utdot;\"], [0, \"&dtdot;\"], [0, \"&disin;\"], [0, \"&isinsv;\"], [0, \"&isins;\"], [0, { v: \"&isindot;\", n: 824, o: \"&notindot;\" }], [0, \"&notinvc;\"], [0, \"&notinvb;\"], [1, { v: \"&isinE;\", n: 824, o: \"&notinE;\" }], [0, \"&nisd;\"], [0, \"&xnis;\"], [0, \"&nis;\"], [0, \"&notnivc;\"], [0, \"&notnivb;\"], [6, \"&barwed;\"], [0, \"&Barwed;\"], [1, \"&lceil;\"], [0, \"&rceil;\"], [0, \"&LeftFloor;\"], [0, \"&rfloor;\"], [0, \"&drcrop;\"], [0, \"&dlcrop;\"], [0, \"&urcrop;\"], [0, \"&ulcrop;\"], [0, \"&bnot;\"], [1, \"&profline;\"], [0, \"&profsurf;\"], [1, \"&telrec;\"], [0, \"&target;\"], [5, \"&ulcorn;\"], [0, \"&urcorn;\"], [0, \"&dlcorn;\"], [0, \"&drcorn;\"], [2, \"&frown;\"], [0, \"&smile;\"], [9, \"&cylcty;\"], [0, \"&profalar;\"], [7, \"&topbot;\"], [6, \"&ovbar;\"], [1, \"&solbar;\"], [60, \"&angzarr;\"], [51, \"&lmoustache;\"], [0, \"&rmoustache;\"], [2, \"&OverBracket;\"], [0, \"&bbrk;\"], [0, \"&bbrktbrk;\"], [37, \"&OverParenthesis;\"], [0, \"&UnderParenthesis;\"], [0, \"&OverBrace;\"], [0, \"&UnderBrace;\"], [2, \"&trpezium;\"], [4, \"&elinters;\"], [59, \"&blank;\"], [164, \"&circledS;\"], [55, \"&boxh;\"], [1, \"&boxv;\"], [9, \"&boxdr;\"], [3, \"&boxdl;\"], [3, \"&boxur;\"], [3, \"&boxul;\"], [3, \"&boxvr;\"], [7, \"&boxvl;\"], [7, \"&boxhd;\"], [7, \"&boxhu;\"], [7, \"&boxvh;\"], [19, \"&boxH;\"], [0, \"&boxV;\"], [0, \"&boxdR;\"], [0, \"&boxDr;\"], [0, \"&boxDR;\"], [0, \"&boxdL;\"], [0, \"&boxDl;\"], [0, \"&boxDL;\"], [0, \"&boxuR;\"], [0, \"&boxUr;\"], [0, \"&boxUR;\"], [0, \"&boxuL;\"], [0, \"&boxUl;\"], [0, \"&boxUL;\"], [0, \"&boxvR;\"], [0, \"&boxVr;\"], [0, \"&boxVR;\"], [0, \"&boxvL;\"], [0, \"&boxVl;\"], [0, \"&boxVL;\"], [0, \"&boxHd;\"], [0, \"&boxhD;\"], [0, \"&boxHD;\"], [0, \"&boxHu;\"], [0, \"&boxhU;\"], [0, \"&boxHU;\"], [0, \"&boxvH;\"], [0, \"&boxVh;\"], [0, \"&boxVH;\"], [19, \"&uhblk;\"], [3, \"&lhblk;\"], [3, \"&block;\"], [8, \"&blk14;\"], [0, \"&blk12;\"], [0, \"&blk34;\"], [13, \"&square;\"], [8, \"&blacksquare;\"], [0, \"&EmptyVerySmallSquare;\"], [1, \"&rect;\"], [0, \"&marker;\"], [2, \"&fltns;\"], [1, \"&bigtriangleup;\"], [0, \"&blacktriangle;\"], [0, \"&triangle;\"], [2, \"&blacktriangleright;\"], [0, \"&rtri;\"], [3, \"&bigtriangledown;\"], [0, \"&blacktriangledown;\"], [0, \"&dtri;\"], [2, \"&blacktriangleleft;\"], [0, \"&ltri;\"], [6, \"&loz;\"], [0, \"&cir;\"], [32, \"&tridot;\"], [2, \"&bigcirc;\"], [8, \"&ultri;\"], [0, \"&urtri;\"], [0, \"&lltri;\"], [0, \"&EmptySmallSquare;\"], [0, \"&FilledSmallSquare;\"], [8, \"&bigstar;\"], [0, \"&star;\"], [7, \"&phone;\"], [49, \"&female;\"], [1, \"&male;\"], [29, \"&spades;\"], [2, \"&clubs;\"], [1, \"&hearts;\"], [0, \"&diamondsuit;\"], [3, \"&sung;\"], [2, \"&flat;\"], [0, \"&natural;\"], [0, \"&sharp;\"], [163, \"&check;\"], [3, \"&cross;\"], [8, \"&malt;\"], [21, \"&sext;\"], [33, \"&VerticalSeparator;\"], [25, \"&lbbrk;\"], [0, \"&rbbrk;\"], [84, \"&bsolhsub;\"], [0, \"&suphsol;\"], [28, \"&LeftDoubleBracket;\"], [0, \"&RightDoubleBracket;\"], [0, \"&lang;\"], [0, \"&rang;\"], [0, \"&Lang;\"], [0, \"&Rang;\"], [0, \"&loang;\"], [0, \"&roang;\"], [7, \"&longleftarrow;\"], [0, \"&longrightarrow;\"], [0, \"&longleftrightarrow;\"], [0, \"&DoubleLongLeftArrow;\"], [0, \"&DoubleLongRightArrow;\"], [0, \"&DoubleLongLeftRightArrow;\"], [1, \"&longmapsto;\"], [2, \"&dzigrarr;\"], [258, \"&nvlArr;\"], [0, \"&nvrArr;\"], [0, \"&nvHarr;\"], [0, \"&Map;\"], [6, \"&lbarr;\"], [0, \"&bkarow;\"], [0, \"&lBarr;\"], [0, \"&dbkarow;\"], [0, \"&drbkarow;\"], [0, \"&DDotrahd;\"], [0, \"&UpArrowBar;\"], [0, \"&DownArrowBar;\"], [2, \"&Rarrtl;\"], [2, \"&latail;\"], [0, \"&ratail;\"], [0, \"&lAtail;\"], [0, \"&rAtail;\"], [0, \"&larrfs;\"], [0, \"&rarrfs;\"], [0, \"&larrbfs;\"], [0, \"&rarrbfs;\"], [2, \"&nwarhk;\"], [0, \"&nearhk;\"], [0, \"&hksearow;\"], [0, \"&hkswarow;\"], [0, \"&nwnear;\"], [0, \"&nesear;\"], [0, \"&seswar;\"], [0, \"&swnwar;\"], [8, { v: \"&rarrc;\", n: 824, o: \"&nrarrc;\" }], [1, \"&cudarrr;\"], [0, \"&ldca;\"], [0, \"&rdca;\"], [0, \"&cudarrl;\"], [0, \"&larrpl;\"], [2, \"&curarrm;\"], [0, \"&cularrp;\"], [7, \"&rarrpl;\"], [2, \"&harrcir;\"], [0, \"&Uarrocir;\"], [0, \"&lurdshar;\"], [0, \"&ldrushar;\"], [2, \"&LeftRightVector;\"], [0, \"&RightUpDownVector;\"], [0, \"&DownLeftRightVector;\"], [0, \"&LeftUpDownVector;\"], [0, \"&LeftVectorBar;\"], [0, \"&RightVectorBar;\"], [0, \"&RightUpVectorBar;\"], [0, \"&RightDownVectorBar;\"], [0, \"&DownLeftVectorBar;\"], [0, \"&DownRightVectorBar;\"], [0, \"&LeftUpVectorBar;\"], [0, \"&LeftDownVectorBar;\"], [0, \"&LeftTeeVector;\"], [0, \"&RightTeeVector;\"], [0, \"&RightUpTeeVector;\"], [0, \"&RightDownTeeVector;\"], [0, \"&DownLeftTeeVector;\"], [0, \"&DownRightTeeVector;\"], [0, \"&LeftUpTeeVector;\"], [0, \"&LeftDownTeeVector;\"], [0, \"&lHar;\"], [0, \"&uHar;\"], [0, \"&rHar;\"], [0, \"&dHar;\"], [0, \"&luruhar;\"], [0, \"&ldrdhar;\"], [0, \"&ruluhar;\"], [0, \"&rdldhar;\"], [0, \"&lharul;\"], [0, \"&llhard;\"], [0, \"&rharul;\"], [0, \"&lrhard;\"], [0, \"&udhar;\"], [0, \"&duhar;\"], [0, \"&RoundImplies;\"], [0, \"&erarr;\"], [0, \"&simrarr;\"], [0, \"&larrsim;\"], [0, \"&rarrsim;\"], [0, \"&rarrap;\"], [0, \"&ltlarr;\"], [1, \"&gtrarr;\"], [0, \"&subrarr;\"], [1, \"&suplarr;\"], [0, \"&lfisht;\"], [0, \"&rfisht;\"], [0, \"&ufisht;\"], [0, \"&dfisht;\"], [5, \"&lopar;\"], [0, \"&ropar;\"], [4, \"&lbrke;\"], [0, \"&rbrke;\"], [0, \"&lbrkslu;\"], [0, \"&rbrksld;\"], [0, \"&lbrksld;\"], [0, \"&rbrkslu;\"], [0, \"&langd;\"], [0, \"&rangd;\"], [0, \"&lparlt;\"], [0, \"&rpargt;\"], [0, \"&gtlPar;\"], [0, \"&ltrPar;\"], [3, \"&vzigzag;\"], [1, \"&vangrt;\"], [0, \"&angrtvbd;\"], [6, \"&ange;\"], [0, \"&range;\"], [0, \"&dwangle;\"], [0, \"&uwangle;\"], [0, \"&angmsdaa;\"], [0, \"&angmsdab;\"], [0, \"&angmsdac;\"], [0, \"&angmsdad;\"], [0, \"&angmsdae;\"], [0, \"&angmsdaf;\"], [0, \"&angmsdag;\"], [0, \"&angmsdah;\"], [0, \"&bemptyv;\"], [0, \"&demptyv;\"], [0, \"&cemptyv;\"], [0, \"&raemptyv;\"], [0, \"&laemptyv;\"], [0, \"&ohbar;\"], [0, \"&omid;\"], [0, \"&opar;\"], [1, \"&operp;\"], [1, \"&olcross;\"], [0, \"&odsold;\"], [1, \"&olcir;\"], [0, \"&ofcir;\"], [0, \"&olt;\"], [0, \"&ogt;\"], [0, \"&cirscir;\"], [0, \"&cirE;\"], [0, \"&solb;\"], [0, \"&bsolb;\"], [3, \"&boxbox;\"], [3, \"&trisb;\"], [0, \"&rtriltri;\"], [0, { v: \"&LeftTriangleBar;\", n: 824, o: \"&NotLeftTriangleBar;\" }], [0, { v: \"&RightTriangleBar;\", n: 824, o: \"&NotRightTriangleBar;\" }], [11, \"&iinfin;\"], [0, \"&infintie;\"], [0, \"&nvinfin;\"], [4, \"&eparsl;\"], [0, \"&smeparsl;\"], [0, \"&eqvparsl;\"], [5, \"&blacklozenge;\"], [8, \"&RuleDelayed;\"], [1, \"&dsol;\"], [9, \"&bigodot;\"], [0, \"&bigoplus;\"], [0, \"&bigotimes;\"], [1, \"&biguplus;\"], [1, \"&bigsqcup;\"], [5, \"&iiiint;\"], [0, \"&fpartint;\"], [2, \"&cirfnint;\"], [0, \"&awint;\"], [0, \"&rppolint;\"], [0, \"&scpolint;\"], [0, \"&npolint;\"], [0, \"&pointint;\"], [0, \"&quatint;\"], [0, \"&intlarhk;\"], [10, \"&pluscir;\"], [0, \"&plusacir;\"], [0, \"&simplus;\"], [0, \"&plusdu;\"], [0, \"&plussim;\"], [0, \"&plustwo;\"], [1, \"&mcomma;\"], [0, \"&minusdu;\"], [2, \"&loplus;\"], [0, \"&roplus;\"], [0, \"&Cross;\"], [0, \"&timesd;\"], [0, \"&timesbar;\"], [1, \"&smashp;\"], [0, \"&lotimes;\"], [0, \"&rotimes;\"], [0, \"&otimesas;\"], [0, \"&Otimes;\"], [0, \"&odiv;\"], [0, \"&triplus;\"], [0, \"&triminus;\"], [0, \"&tritime;\"], [0, \"&intprod;\"], [2, \"&amalg;\"], [0, \"&capdot;\"], [1, \"&ncup;\"], [0, \"&ncap;\"], [0, \"&capand;\"], [0, \"&cupor;\"], [0, \"&cupcap;\"], [0, \"&capcup;\"], [0, \"&cupbrcap;\"], [0, \"&capbrcup;\"], [0, \"&cupcup;\"], [0, \"&capcap;\"], [0, \"&ccups;\"], [0, \"&ccaps;\"], [2, \"&ccupssm;\"], [2, \"&And;\"], [0, \"&Or;\"], [0, \"&andand;\"], [0, \"&oror;\"], [0, \"&orslope;\"], [0, \"&andslope;\"], [1, \"&andv;\"], [0, \"&orv;\"], [0, \"&andd;\"], [0, \"&ord;\"], [1, \"&wedbar;\"], [6, \"&sdote;\"], [3, \"&simdot;\"], [2, { v: \"&congdot;\", n: 824, o: \"&ncongdot;\" }], [0, \"&easter;\"], [0, \"&apacir;\"], [0, { v: \"&apE;\", n: 824, o: \"&napE;\" }], [0, \"&eplus;\"], [0, \"&pluse;\"], [0, \"&Esim;\"], [0, \"&Colone;\"], [0, \"&Equal;\"], [1, \"&ddotseq;\"], [0, \"&equivDD;\"], [0, \"&ltcir;\"], [0, \"&gtcir;\"], [0, \"&ltquest;\"], [0, \"&gtquest;\"], [0, { v: \"&leqslant;\", n: 824, o: \"&nleqslant;\" }], [0, { v: \"&geqslant;\", n: 824, o: \"&ngeqslant;\" }], [0, \"&lesdot;\"], [0, \"&gesdot;\"], [0, \"&lesdoto;\"], [0, \"&gesdoto;\"], [0, \"&lesdotor;\"], [0, \"&gesdotol;\"], [0, \"&lap;\"], [0, \"&gap;\"], [0, \"&lne;\"], [0, \"&gne;\"], [0, \"&lnap;\"], [0, \"&gnap;\"], [0, \"&lEg;\"], [0, \"&gEl;\"], [0, \"&lsime;\"], [0, \"&gsime;\"], [0, \"&lsimg;\"], [0, \"&gsiml;\"], [0, \"&lgE;\"], [0, \"&glE;\"], [0, \"&lesges;\"], [0, \"&gesles;\"], [0, \"&els;\"], [0, \"&egs;\"], [0, \"&elsdot;\"], [0, \"&egsdot;\"], [0, \"&el;\"], [0, \"&eg;\"], [2, \"&siml;\"], [0, \"&simg;\"], [0, \"&simlE;\"], [0, \"&simgE;\"], [0, { v: \"&LessLess;\", n: 824, o: \"&NotNestedLessLess;\" }], [0, { v: \"&GreaterGreater;\", n: 824, o: \"&NotNestedGreaterGreater;\" }], [1, \"&glj;\"], [0, \"&gla;\"], [0, \"&ltcc;\"], [0, \"&gtcc;\"], [0, \"&lescc;\"], [0, \"&gescc;\"], [0, \"&smt;\"], [0, \"&lat;\"], [0, { v: \"&smte;\", n: 65024, o: \"&smtes;\" }], [0, { v: \"&late;\", n: 65024, o: \"&lates;\" }], [0, \"&bumpE;\"], [0, { v: \"&PrecedesEqual;\", n: 824, o: \"&NotPrecedesEqual;\" }], [0, { v: \"&sce;\", n: 824, o: \"&NotSucceedsEqual;\" }], [2, \"&prE;\"], [0, \"&scE;\"], [0, \"&precneqq;\"], [0, \"&scnE;\"], [0, \"&prap;\"], [0, \"&scap;\"], [0, \"&precnapprox;\"], [0, \"&scnap;\"], [0, \"&Pr;\"], [0, \"&Sc;\"], [0, \"&subdot;\"], [0, \"&supdot;\"], [0, \"&subplus;\"], [0, \"&supplus;\"], [0, \"&submult;\"], [0, \"&supmult;\"], [0, \"&subedot;\"], [0, \"&supedot;\"], [0, { v: \"&subE;\", n: 824, o: \"&nsubE;\" }], [0, { v: \"&supE;\", n: 824, o: \"&nsupE;\" }], [0, \"&subsim;\"], [0, \"&supsim;\"], [2, { v: \"&subnE;\", n: 65024, o: \"&varsubsetneqq;\" }], [0, { v: \"&supnE;\", n: 65024, o: \"&varsupsetneqq;\" }], [2, \"&csub;\"], [0, \"&csup;\"], [0, \"&csube;\"], [0, \"&csupe;\"], [0, \"&subsup;\"], [0, \"&supsub;\"], [0, \"&subsub;\"], [0, \"&supsup;\"], [0, \"&suphsub;\"], [0, \"&supdsub;\"], [0, \"&forkv;\"], [0, \"&topfork;\"], [0, \"&mlcp;\"], [8, \"&Dashv;\"], [1, \"&Vdashl;\"], [0, \"&Barv;\"], [0, \"&vBar;\"], [0, \"&vBarv;\"], [1, \"&Vbar;\"], [0, \"&Not;\"], [0, \"&bNot;\"], [0, \"&rnmid;\"], [0, \"&cirmid;\"], [0, \"&midcir;\"], [0, \"&topcir;\"], [0, \"&nhpar;\"], [0, \"&parsim;\"], [9, { v: \"&parsl;\", n: 8421, o: \"&nparsl;\" }], [44343, { n: new Map(/* #__PURE__ */ restoreDiff([[56476, \"&Ascr;\"], [1, \"&Cscr;\"], [0, \"&Dscr;\"], [2, \"&Gscr;\"], [2, \"&Jscr;\"], [0, \"&Kscr;\"], [2, \"&Nscr;\"], [0, \"&Oscr;\"], [0, \"&Pscr;\"], [0, \"&Qscr;\"], [1, \"&Sscr;\"], [0, \"&Tscr;\"], [0, \"&Uscr;\"], [0, \"&Vscr;\"], [0, \"&Wscr;\"], [0, \"&Xscr;\"], [0, \"&Yscr;\"], [0, \"&Zscr;\"], [0, \"&ascr;\"], [0, \"&bscr;\"], [0, \"&cscr;\"], [0, \"&dscr;\"], [1, \"&fscr;\"], [1, \"&hscr;\"], [0, \"&iscr;\"], [0, \"&jscr;\"], [0, \"&kscr;\"], [0, \"&lscr;\"], [0, \"&mscr;\"], [0, \"&nscr;\"], [1, \"&pscr;\"], [0, \"&qscr;\"], [0, \"&rscr;\"], [0, \"&sscr;\"], [0, \"&tscr;\"], [0, \"&uscr;\"], [0, \"&vscr;\"], [0, \"&wscr;\"], [0, \"&xscr;\"], [0, \"&yscr;\"], [0, \"&zscr;\"], [52, \"&Afr;\"], [0, \"&Bfr;\"], [1, \"&Dfr;\"], [0, \"&Efr;\"], [0, \"&Ffr;\"], [0, \"&Gfr;\"], [2, \"&Jfr;\"], [0, \"&Kfr;\"], [0, \"&Lfr;\"], [0, \"&Mfr;\"], [0, \"&Nfr;\"], [0, \"&Ofr;\"], [0, \"&Pfr;\"], [0, \"&Qfr;\"], [1, \"&Sfr;\"], [0, \"&Tfr;\"], [0, \"&Ufr;\"], [0, \"&Vfr;\"], [0, \"&Wfr;\"], [0, \"&Xfr;\"], [0, \"&Yfr;\"], [1, \"&afr;\"], [0, \"&bfr;\"], [0, \"&cfr;\"], [0, \"&dfr;\"], [0, \"&efr;\"], [0, \"&ffr;\"], [0, \"&gfr;\"], [0, \"&hfr;\"], [0, \"&ifr;\"], [0, \"&jfr;\"], [0, \"&kfr;\"], [0, \"&lfr;\"], [0, \"&mfr;\"], [0, \"&nfr;\"], [0, \"&ofr;\"], [0, \"&pfr;\"], [0, \"&qfr;\"], [0, \"&rfr;\"], [0, \"&sfr;\"], [0, \"&tfr;\"], [0, \"&ufr;\"], [0, \"&vfr;\"], [0, \"&wfr;\"], [0, \"&xfr;\"], [0, \"&yfr;\"], [0, \"&zfr;\"], [0, \"&Aopf;\"], [0, \"&Bopf;\"], [1, \"&Dopf;\"], [0, \"&Eopf;\"], [0, \"&Fopf;\"], [0, \"&Gopf;\"], [1, \"&Iopf;\"], [0, \"&Jopf;\"], [0, \"&Kopf;\"], [0, \"&Lopf;\"], [0, \"&Mopf;\"], [1, \"&Oopf;\"], [3, \"&Sopf;\"], [0, \"&Topf;\"], [0, \"&Uopf;\"], [0, \"&Vopf;\"], [0, \"&Wopf;\"], [0, \"&Xopf;\"], [0, \"&Yopf;\"], [1, \"&aopf;\"], [0, \"&bopf;\"], [0, \"&copf;\"], [0, \"&dopf;\"], [0, \"&eopf;\"], [0, \"&fopf;\"], [0, \"&gopf;\"], [0, \"&hopf;\"], [0, \"&iopf;\"], [0, \"&jopf;\"], [0, \"&kopf;\"], [0, \"&lopf;\"], [0, \"&mopf;\"], [0, \"&nopf;\"], [0, \"&oopf;\"], [0, \"&popf;\"], [0, \"&qopf;\"], [0, \"&ropf;\"], [0, \"&sopf;\"], [0, \"&topf;\"], [0, \"&uopf;\"], [0, \"&vopf;\"], [0, \"&wopf;\"], [0, \"&xopf;\"], [0, \"&yopf;\"], [0, \"&zopf;\"]])) }], [8906, \"&fflig;\"], [0, \"&filig;\"], [0, \"&fllig;\"], [0, \"&ffilig;\"], [0, \"&ffllig;\"]]));\n//# sourceMappingURL=encode-html.js.map","export const xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? (str, index) => str.codePointAt(index)\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        (c, index) => (c.charCodeAt(index) & 0xfc00) === 0xd800\n            ? (c.charCodeAt(index) - 0xd800) * 0x400 +\n                c.charCodeAt(index + 1) -\n                0xdc00 +\n                0x10000\n            : c.charCodeAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(str) {\n    let ret = \"\";\n    let lastIdx = 0;\n    let match;\n    while ((match = xmlReplacer.exec(str)) !== null) {\n        const i = match.index;\n        const char = str.charCodeAt(i);\n        const next = xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        }\n        else {\n            ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape = encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n    return function escape(data) {\n        let match;\n        let lastIdx = 0;\n        let result = \"\";\n        while ((match = regex.exec(data))) {\n            if (lastIdx !== match.index) {\n                result += data.substring(lastIdx, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8 = getEscaper(/[&<>'\"]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [160, \"&nbsp;\"],\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([\n    [38, \"&amp;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n    [160, \"&nbsp;\"],\n]));\n//# sourceMappingURL=escape.js.map","import { decodeXML, decodeHTML, DecodingMode } from \"./decode.js\";\nimport { encodeHTML, encodeNonAsciiHTML } from \"./encode.js\";\nimport { encodeXML, escapeUTF8, escapeAttribute, escapeText, } from \"./escape.js\";\n/** The level of entities to support. */\nexport var EntityLevel;\n(function (EntityLevel) {\n    /** Support only XML entities. */\n    EntityLevel[EntityLevel[\"XML\"] = 0] = \"XML\";\n    /** Support HTML entities, which are a superset of XML entities. */\n    EntityLevel[EntityLevel[\"HTML\"] = 1] = \"HTML\";\n})(EntityLevel || (EntityLevel = {}));\nexport var EncodingMode;\n(function (EncodingMode) {\n    /**\n     * The output is UTF-8 encoded. Only characters that need escaping within\n     * XML will be escaped.\n     */\n    EncodingMode[EncodingMode[\"UTF8\"] = 0] = \"UTF8\";\n    /**\n     * The output consists only of ASCII characters. Characters that need\n     * escaping within HTML, and characters that aren't ASCII characters will\n     * be escaped.\n     */\n    EncodingMode[EncodingMode[\"ASCII\"] = 1] = \"ASCII\";\n    /**\n     * Encode all characters that have an equivalent entity, as well as all\n     * characters that are not ASCII characters.\n     */\n    EncodingMode[EncodingMode[\"Extensive\"] = 2] = \"Extensive\";\n    /**\n     * Encode all characters that have to be escaped in HTML attributes,\n     * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n     */\n    EncodingMode[EncodingMode[\"Attribute\"] = 3] = \"Attribute\";\n    /**\n     * Encode all characters that have to be escaped in HTML text,\n     * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n     */\n    EncodingMode[EncodingMode[\"Text\"] = 4] = \"Text\";\n})(EncodingMode || (EncodingMode = {}));\n/**\n * Decodes a string with entities.\n *\n * @param data String to decode.\n * @param options Decoding options.\n */\nexport function decode(data, options = EntityLevel.XML) {\n    const level = typeof options === \"number\" ? options : options.level;\n    if (level === EntityLevel.HTML) {\n        const mode = typeof options === \"object\" ? options.mode : undefined;\n        return decodeHTML(data, mode);\n    }\n    return decodeXML(data);\n}\n/**\n * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n *\n * @param data String to decode.\n * @param options Decoding options.\n * @deprecated Use `decode` with the `mode` set to `Strict`.\n */\nexport function decodeStrict(data, options = EntityLevel.XML) {\n    var _a;\n    const opts = typeof options === \"number\" ? { level: options } : options;\n    (_a = opts.mode) !== null && _a !== void 0 ? _a : (opts.mode = DecodingMode.Strict);\n    return decode(data, opts);\n}\n/**\n * Encodes a string with entities.\n *\n * @param data String to encode.\n * @param options Encoding options.\n */\nexport function encode(data, options = EntityLevel.XML) {\n    const opts = typeof options === \"number\" ? { level: options } : options;\n    // Mode `UTF8` just escapes XML entities\n    if (opts.mode === EncodingMode.UTF8)\n        return escapeUTF8(data);\n    if (opts.mode === EncodingMode.Attribute)\n        return escapeAttribute(data);\n    if (opts.mode === EncodingMode.Text)\n        return escapeText(data);\n    if (opts.level === EntityLevel.HTML) {\n        if (opts.mode === EncodingMode.ASCII) {\n            return encodeNonAsciiHTML(data);\n        }\n        return encodeHTML(data);\n    }\n    // ASCII and Extensive are equivalent\n    return encodeXML(data);\n}\nexport { encodeXML, escape, escapeUTF8, escapeAttribute, escapeText, } from \"./escape.js\";\nexport { encodeHTML, encodeNonAsciiHTML, \n// Legacy aliases (deprecated)\nencodeHTML as encodeHTML4, encodeHTML as encodeHTML5, } from \"./encode.js\";\nexport { EntityDecoder, DecodingMode, decodeXML, decodeHTML, decodeHTMLStrict, decodeHTMLAttribute, \n// Legacy aliases (deprecated)\ndecodeHTML as decodeHTML4, decodeHTML as decodeHTML5, decodeHTMLStrict as decodeHTML4Strict, decodeHTMLStrict as decodeHTML5Strict, decodeXML as decodeXMLStrict, } from \"./decode.js\";\n//# sourceMappingURL=index.js.map","export const elementNames = new Map([\n    \"altGlyph\",\n    \"altGlyphDef\",\n    \"altGlyphItem\",\n    \"animateColor\",\n    \"animateMotion\",\n    \"animateTransform\",\n    \"clipPath\",\n    \"feBlend\",\n    \"feColorMatrix\",\n    \"feComponentTransfer\",\n    \"feComposite\",\n    \"feConvolveMatrix\",\n    \"feDiffuseLighting\",\n    \"feDisplacementMap\",\n    \"feDistantLight\",\n    \"feDropShadow\",\n    \"feFlood\",\n    \"feFuncA\",\n    \"feFuncB\",\n    \"feFuncG\",\n    \"feFuncR\",\n    \"feGaussianBlur\",\n    \"feImage\",\n    \"feMerge\",\n    \"feMergeNode\",\n    \"feMorphology\",\n    \"feOffset\",\n    \"fePointLight\",\n    \"feSpecularLighting\",\n    \"feSpotLight\",\n    \"feTile\",\n    \"feTurbulence\",\n    \"foreignObject\",\n    \"glyphRef\",\n    \"linearGradient\",\n    \"radialGradient\",\n    \"textPath\",\n].map((val) => [val.toLowerCase(), val]));\nexport const attributeNames = new Map([\n    \"definitionURL\",\n    \"attributeName\",\n    \"attributeType\",\n    \"baseFrequency\",\n    \"baseProfile\",\n    \"calcMode\",\n    \"clipPathUnits\",\n    \"diffuseConstant\",\n    \"edgeMode\",\n    \"filterUnits\",\n    \"glyphRef\",\n    \"gradientTransform\",\n    \"gradientUnits\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keyPoints\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"lengthAdjust\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerUnits\",\n    \"markerWidth\",\n    \"maskContentUnits\",\n    \"maskUnits\",\n    \"numOctaves\",\n    \"pathLength\",\n    \"patternContentUnits\",\n    \"patternTransform\",\n    \"patternUnits\",\n    \"pointsAtX\",\n    \"pointsAtY\",\n    \"pointsAtZ\",\n    \"preserveAlpha\",\n    \"preserveAspectRatio\",\n    \"primitiveUnits\",\n    \"refX\",\n    \"refY\",\n    \"repeatCount\",\n    \"repeatDur\",\n    \"requiredExtensions\",\n    \"requiredFeatures\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"spreadMethod\",\n    \"startOffset\",\n    \"stdDeviation\",\n    \"stitchTiles\",\n    \"surfaceScale\",\n    \"systemLanguage\",\n    \"tableValues\",\n    \"targetX\",\n    \"targetY\",\n    \"textLength\",\n    \"viewBox\",\n    \"viewTarget\",\n    \"xChannelSelector\",\n    \"yChannelSelector\",\n    \"zoomAndPan\",\n].map((val) => [val.toLowerCase(), val]));\n","/*\n * Module dependencies\n */\nimport * as ElementType from \"domelementtype\";\nimport { encodeXML, escapeAttribute, escapeText } from \"entities\";\n/**\n * Mixed-case SVG and MathML tags & attributes\n * recognized by the HTML parser.\n *\n * @see https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inforeign\n */\nimport { elementNames, attributeNames } from \"./foreignNames.js\";\nconst unencodedElements = new Set([\n    \"style\",\n    \"script\",\n    \"xmp\",\n    \"iframe\",\n    \"noembed\",\n    \"noframes\",\n    \"plaintext\",\n    \"noscript\",\n]);\nfunction replaceQuotes(value) {\n    return value.replace(/\"/g, \"&quot;\");\n}\n/**\n * Format attributes\n */\nfunction formatAttributes(attributes, opts) {\n    var _a;\n    if (!attributes)\n        return;\n    const encode = ((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) === false\n        ? replaceQuotes\n        : opts.xmlMode || opts.encodeEntities !== \"utf8\"\n            ? encodeXML\n            : escapeAttribute;\n    return Object.keys(attributes)\n        .map((key) => {\n        var _a, _b;\n        const value = (_a = attributes[key]) !== null && _a !== void 0 ? _a : \"\";\n        if (opts.xmlMode === \"foreign\") {\n            /* Fix up mixed-case attribute names */\n            key = (_b = attributeNames.get(key)) !== null && _b !== void 0 ? _b : key;\n        }\n        if (!opts.emptyAttrs && !opts.xmlMode && value === \"\") {\n            return key;\n        }\n        return `${key}=\"${encode(value)}\"`;\n    })\n        .join(\" \");\n}\n/**\n * Self-enclosing tags\n */\nconst singleTag = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\n/**\n * Renders a DOM node or an array of DOM nodes to a string.\n *\n * Can be thought of as the equivalent of the `outerHTML` of the passed node(s).\n *\n * @param node Node to be rendered.\n * @param options Changes serialization behavior\n */\nexport function render(node, options = {}) {\n    const nodes = \"length\" in node ? node : [node];\n    let output = \"\";\n    for (let i = 0; i < nodes.length; i++) {\n        output += renderNode(nodes[i], options);\n    }\n    return output;\n}\nexport default render;\nfunction renderNode(node, options) {\n    switch (node.type) {\n        case ElementType.Root:\n            return render(node.children, options);\n        // @ts-expect-error We don't use `Doctype` yet\n        case ElementType.Doctype:\n        case ElementType.Directive:\n            return renderDirective(node);\n        case ElementType.Comment:\n            return renderComment(node);\n        case ElementType.CDATA:\n            return renderCdata(node);\n        case ElementType.Script:\n        case ElementType.Style:\n        case ElementType.Tag:\n            return renderTag(node, options);\n        case ElementType.Text:\n            return renderText(node, options);\n    }\n}\nconst foreignModeIntegrationPoints = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignObject\",\n    \"desc\",\n    \"title\",\n]);\nconst foreignElements = new Set([\"svg\", \"math\"]);\nfunction renderTag(elem, opts) {\n    var _a;\n    // Handle SVG / MathML in HTML\n    if (opts.xmlMode === \"foreign\") {\n        /* Fix up mixed-case element names */\n        elem.name = (_a = elementNames.get(elem.name)) !== null && _a !== void 0 ? _a : elem.name;\n        /* Exit foreign mode at integration points */\n        if (elem.parent &&\n            foreignModeIntegrationPoints.has(elem.parent.name)) {\n            opts = { ...opts, xmlMode: false };\n        }\n    }\n    if (!opts.xmlMode && foreignElements.has(elem.name)) {\n        opts = { ...opts, xmlMode: \"foreign\" };\n    }\n    let tag = `<${elem.name}`;\n    const attribs = formatAttributes(elem.attribs, opts);\n    if (attribs) {\n        tag += ` ${attribs}`;\n    }\n    if (elem.children.length === 0 &&\n        (opts.xmlMode\n            ? // In XML mode or foreign mode, and user hasn't explicitly turned off self-closing tags\n                opts.selfClosingTags !== false\n            : // User explicitly asked for self-closing tags, even in HTML mode\n                opts.selfClosingTags && singleTag.has(elem.name))) {\n        if (!opts.xmlMode)\n            tag += \" \";\n        tag += \"/>\";\n    }\n    else {\n        tag += \">\";\n        if (elem.children.length > 0) {\n            tag += render(elem.children, opts);\n        }\n        if (opts.xmlMode || !singleTag.has(elem.name)) {\n            tag += `</${elem.name}>`;\n        }\n    }\n    return tag;\n}\nfunction renderDirective(elem) {\n    return `<${elem.data}>`;\n}\nfunction renderText(elem, opts) {\n    var _a;\n    let data = elem.data || \"\";\n    // If entities weren't decoded, no need to encode them back\n    if (((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) !== false &&\n        !(!opts.xmlMode &&\n            elem.parent &&\n            unencodedElements.has(elem.parent.name))) {\n        data =\n            opts.xmlMode || opts.encodeEntities !== \"utf8\"\n                ? encodeXML(data)\n                : escapeText(data);\n    }\n    return data;\n}\nfunction renderCdata(elem) {\n    return `<![CDATA[${elem.children[0].data}]]>`;\n}\nfunction renderComment(elem) {\n    return `<!--${elem.data}-->`;\n}\n","import { isTag, isCDATA, isText, hasChildren, isComment, } from \"domhandler\";\nimport renderHTML from \"dom-serializer\";\nimport { ElementType } from \"domelementtype\";\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the outer HTML of.\n * @param options Options for serialization.\n * @returns `node`'s outer HTML.\n */\nexport function getOuterHTML(node, options) {\n    return renderHTML(node, options);\n}\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the inner HTML of.\n * @param options Options for serialization.\n * @returns `node`'s inner HTML.\n */\nexport function getInnerHTML(node, options) {\n    return hasChildren(node)\n        ? node.children.map((node) => getOuterHTML(node, options)).join(\"\")\n        : \"\";\n}\n/**\n * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags. Ignores comments.\n *\n * @category Stringify\n * @deprecated Use `textContent` instead.\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n */\nexport function getText(node) {\n    if (Array.isArray(node))\n        return node.map(getText).join(\"\");\n    if (isTag(node))\n        return node.name === \"br\" ? \"\\n\" : getText(node.children);\n    if (isCDATA(node))\n        return getText(node.children);\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n/**\n * Get a node's text content. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the text content of.\n * @returns `node`'s text content.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n */\nexport function textContent(node) {\n    if (Array.isArray(node))\n        return node.map(textContent).join(\"\");\n    if (hasChildren(node) && !isComment(node)) {\n        return textContent(node.children);\n    }\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n/**\n * Get a node's inner text, ignoring `<script>` and `<style>` tags. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n */\nexport function innerText(node) {\n    if (Array.isArray(node))\n        return node.map(innerText).join(\"\");\n    if (hasChildren(node) && (node.type === ElementType.Tag || isCDATA(node))) {\n        return innerText(node.children);\n    }\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n//# sourceMappingURL=stringify.js.map","import { isTag, hasChildren, } from \"domhandler\";\n/**\n * Get a node's children.\n *\n * @category Traversal\n * @param elem Node to get the children of.\n * @returns `elem`'s children, or an empty array.\n */\nexport function getChildren(elem) {\n    return hasChildren(elem) ? elem.children : [];\n}\n/**\n * Get a node's parent.\n *\n * @category Traversal\n * @param elem Node to get the parent of.\n * @returns `elem`'s parent node, or `null` if `elem` is a root node.\n */\nexport function getParent(elem) {\n    return elem.parent || null;\n}\n/**\n * Gets an elements siblings, including the element itself.\n *\n * Attempts to get the children through the element's parent first. If we don't\n * have a parent (the element is a root node), we walk the element's `prev` &\n * `next` to get all remaining nodes.\n *\n * @category Traversal\n * @param elem Element to get the siblings of.\n * @returns `elem`'s siblings, including `elem`.\n */\nexport function getSiblings(elem) {\n    const parent = getParent(elem);\n    if (parent != null)\n        return getChildren(parent);\n    const siblings = [elem];\n    let { prev, next } = elem;\n    while (prev != null) {\n        siblings.unshift(prev);\n        ({ prev } = prev);\n    }\n    while (next != null) {\n        siblings.push(next);\n        ({ next } = next);\n    }\n    return siblings;\n}\n/**\n * Gets an attribute from an element.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to retrieve.\n * @returns The element's attribute value, or `undefined`.\n */\nexport function getAttributeValue(elem, name) {\n    var _a;\n    return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n}\n/**\n * Checks whether an element has an attribute.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to look for.\n * @returns Returns whether `elem` has the attribute `name`.\n */\nexport function hasAttrib(elem, name) {\n    return (elem.attribs != null &&\n        Object.prototype.hasOwnProperty.call(elem.attribs, name) &&\n        elem.attribs[name] != null);\n}\n/**\n * Get the tag name of an element.\n *\n * @category Traversal\n * @param elem The element to get the name for.\n * @returns The tag name of `elem`.\n */\nexport function getName(elem) {\n    return elem.name;\n}\n/**\n * Returns the next element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the next sibling of.\n * @returns `elem`'s next sibling that is a tag, or `null` if there is no next\n * sibling.\n */\nexport function nextElementSibling(elem) {\n    let { next } = elem;\n    while (next !== null && !isTag(next))\n        ({ next } = next);\n    return next;\n}\n/**\n * Returns the previous element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the previous sibling of.\n * @returns `elem`'s previous sibling that is a tag, or `null` if there is no\n * previous sibling.\n */\nexport function prevElementSibling(elem) {\n    let { prev } = elem;\n    while (prev !== null && !isTag(prev))\n        ({ prev } = prev);\n    return prev;\n}\n//# sourceMappingURL=traversal.js.map","/**\n * Remove an element from the dom\n *\n * @category Manipulation\n * @param elem The element to be removed\n */\nexport function removeElement(elem) {\n    if (elem.prev)\n        elem.prev.next = elem.next;\n    if (elem.next)\n        elem.next.prev = elem.prev;\n    if (elem.parent) {\n        const childs = elem.parent.children;\n        const childsIndex = childs.lastIndexOf(elem);\n        if (childsIndex >= 0) {\n            childs.splice(childsIndex, 1);\n        }\n    }\n    elem.next = null;\n    elem.prev = null;\n    elem.parent = null;\n}\n/**\n * Replace an element in the dom\n *\n * @category Manipulation\n * @param elem The element to be replaced\n * @param replacement The element to be added\n */\nexport function replaceElement(elem, replacement) {\n    const prev = (replacement.prev = elem.prev);\n    if (prev) {\n        prev.next = replacement;\n    }\n    const next = (replacement.next = elem.next);\n    if (next) {\n        next.prev = replacement;\n    }\n    const parent = (replacement.parent = elem.parent);\n    if (parent) {\n        const childs = parent.children;\n        childs[childs.lastIndexOf(elem)] = replacement;\n        elem.parent = null;\n    }\n}\n/**\n * Append a child to an element.\n *\n * @category Manipulation\n * @param parent The element to append to.\n * @param child The element to be added as a child.\n */\nexport function appendChild(parent, child) {\n    removeElement(child);\n    child.next = null;\n    child.parent = parent;\n    if (parent.children.push(child) > 1) {\n        const sibling = parent.children[parent.children.length - 2];\n        sibling.next = child;\n        child.prev = sibling;\n    }\n    else {\n        child.prev = null;\n    }\n}\n/**\n * Append an element after another.\n *\n * @category Manipulation\n * @param elem The element to append after.\n * @param next The element be added.\n */\nexport function append(elem, next) {\n    removeElement(next);\n    const { parent } = elem;\n    const currNext = elem.next;\n    next.next = currNext;\n    next.prev = elem;\n    elem.next = next;\n    next.parent = parent;\n    if (currNext) {\n        currNext.prev = next;\n        if (parent) {\n            const childs = parent.children;\n            childs.splice(childs.lastIndexOf(currNext), 0, next);\n        }\n    }\n    else if (parent) {\n        parent.children.push(next);\n    }\n}\n/**\n * Prepend a child to an element.\n *\n * @category Manipulation\n * @param parent The element to prepend before.\n * @param child The element to be added as a child.\n */\nexport function prependChild(parent, child) {\n    removeElement(child);\n    child.parent = parent;\n    child.prev = null;\n    if (parent.children.unshift(child) !== 1) {\n        const sibling = parent.children[1];\n        sibling.prev = child;\n        child.next = sibling;\n    }\n    else {\n        child.next = null;\n    }\n}\n/**\n * Prepend an element before another.\n *\n * @category Manipulation\n * @param elem The element to prepend before.\n * @param prev The element be added.\n */\nexport function prepend(elem, prev) {\n    removeElement(prev);\n    const { parent } = elem;\n    if (parent) {\n        const childs = parent.children;\n        childs.splice(childs.indexOf(elem), 0, prev);\n    }\n    if (elem.prev) {\n        elem.prev.next = prev;\n    }\n    prev.parent = parent;\n    prev.prev = elem.prev;\n    prev.next = elem;\n    elem.prev = prev;\n}\n//# sourceMappingURL=manipulation.js.map","import { isTag, hasChildren } from \"domhandler\";\n/**\n * Search a node and its children for nodes passing a test function. If `node` is not an array, it will be wrapped in one.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param node Node to search. Will be included in the result set if it matches.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nexport function filter(test, node, recurse = true, limit = Infinity) {\n    return find(test, Array.isArray(node) ? node : [node], recurse, limit);\n}\n/**\n * Search an array of nodes and their children for nodes passing a test function.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nexport function find(test, nodes, recurse, limit) {\n    const result = [];\n    /** Stack of the arrays we are looking at. */\n    const nodeStack = [nodes];\n    /** Stack of the indices within the arrays. */\n    const indexStack = [0];\n    for (;;) {\n        // First, check if the current array has any more elements to look at.\n        if (indexStack[0] >= nodeStack[0].length) {\n            // If we have no more arrays to look at, we are done.\n            if (indexStack.length === 1) {\n                return result;\n            }\n            // Otherwise, remove the current array from the stack.\n            nodeStack.shift();\n            indexStack.shift();\n            // Loop back to the start to continue with the next array.\n            continue;\n        }\n        const elem = nodeStack[0][indexStack[0]++];\n        if (test(elem)) {\n            result.push(elem);\n            if (--limit <= 0)\n                return result;\n        }\n        if (recurse && hasChildren(elem) && elem.children.length > 0) {\n            /*\n             * Add the children to the stack. We are depth-first, so this is\n             * the next array we look at.\n             */\n            indexStack.unshift(0);\n            nodeStack.unshift(elem.children);\n        }\n    }\n}\n/**\n * Finds the first element inside of an array that matches a test function. This is an alias for `Array.prototype.find`.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns The first node in the array that passes `test`.\n * @deprecated Use `Array.prototype.find` directly.\n */\nexport function findOneChild(test, nodes) {\n    return nodes.find(test);\n}\n/**\n * Finds one element in a tree that passes a test.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Node or array of nodes to search.\n * @param recurse Also consider child nodes.\n * @returns The first node that passes `test`.\n */\nexport function findOne(test, nodes, recurse = true) {\n    let elem = null;\n    for (let i = 0; i < nodes.length && !elem; i++) {\n        const node = nodes[i];\n        if (!isTag(node)) {\n            continue;\n        }\n        else if (test(node)) {\n            elem = node;\n        }\n        else if (recurse && node.children.length > 0) {\n            elem = findOne(test, node.children, true);\n        }\n    }\n    return elem;\n}\n/**\n * Checks if a tree of nodes contains at least one node passing a test.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns Whether a tree of nodes contains at least one node passing the test.\n */\nexport function existsOne(test, nodes) {\n    return nodes.some((checked) => isTag(checked) &&\n        (test(checked) || existsOne(test, checked.children)));\n}\n/**\n * Search an array of nodes and their children for elements passing a test function.\n *\n * Same as `find`, but limited to elements and with less options, leading to reduced complexity.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns All nodes passing `test`.\n */\nexport function findAll(test, nodes) {\n    const result = [];\n    const nodeStack = [nodes];\n    const indexStack = [0];\n    for (;;) {\n        if (indexStack[0] >= nodeStack[0].length) {\n            if (nodeStack.length === 1) {\n                return result;\n            }\n            // Otherwise, remove the current array from the stack.\n            nodeStack.shift();\n            indexStack.shift();\n            // Loop back to the start to continue with the next array.\n            continue;\n        }\n        const elem = nodeStack[0][indexStack[0]++];\n        if (!isTag(elem))\n            continue;\n        if (test(elem))\n            result.push(elem);\n        if (elem.children.length > 0) {\n            indexStack.unshift(0);\n            nodeStack.unshift(elem.children);\n        }\n    }\n}\n//# sourceMappingURL=querying.js.map","import { isTag, isText } from \"domhandler\";\nimport { filter, findOne } from \"./querying.js\";\n/**\n * A map of functions to check nodes against.\n */\nconst Checks = {\n    tag_name(name) {\n        if (typeof name === \"function\") {\n            return (elem) => isTag(elem) && name(elem.name);\n        }\n        else if (name === \"*\") {\n            return isTag;\n        }\n        return (elem) => isTag(elem) && elem.name === name;\n    },\n    tag_type(type) {\n        if (typeof type === \"function\") {\n            return (elem) => type(elem.type);\n        }\n        return (elem) => elem.type === type;\n    },\n    tag_contains(data) {\n        if (typeof data === \"function\") {\n            return (elem) => isText(elem) && data(elem.data);\n        }\n        return (elem) => isText(elem) && elem.data === data;\n    },\n};\n/**\n * Returns a function to check whether a node has an attribute with a particular\n * value.\n *\n * @param attrib Attribute to check.\n * @param value Attribute value to look for.\n * @returns A function to check whether the a node has an attribute with a\n *   particular value.\n */\nfunction getAttribCheck(attrib, value) {\n    if (typeof value === \"function\") {\n        return (elem) => isTag(elem) && value(elem.attribs[attrib]);\n    }\n    return (elem) => isTag(elem) && elem.attribs[attrib] === value;\n}\n/**\n * Returns a function that returns `true` if either of the input functions\n * returns `true` for a node.\n *\n * @param a First function to combine.\n * @param b Second function to combine.\n * @returns A function taking a node and returning `true` if either of the input\n *   functions returns `true` for the node.\n */\nfunction combineFuncs(a, b) {\n    return (elem) => a(elem) || b(elem);\n}\n/**\n * Returns a function that executes all checks in `options` and returns `true`\n * if any of them match a node.\n *\n * @param options An object describing nodes to look for.\n * @returns A function that executes all checks in `options` and returns `true`\n *   if any of them match a node.\n */\nfunction compileTest(options) {\n    const funcs = Object.keys(options).map((key) => {\n        const value = options[key];\n        return Object.prototype.hasOwnProperty.call(Checks, key)\n            ? Checks[key](value)\n            : getAttribCheck(key, value);\n    });\n    return funcs.length === 0 ? null : funcs.reduce(combineFuncs);\n}\n/**\n * Checks whether a node matches the description in `options`.\n *\n * @category Legacy Query Functions\n * @param options An object describing nodes to look for.\n * @param node The element to test.\n * @returns Whether the element matches the description in `options`.\n */\nexport function testElement(options, node) {\n    const test = compileTest(options);\n    return test ? test(node) : true;\n}\n/**\n * Returns all nodes that match `options`.\n *\n * @category Legacy Query Functions\n * @param options An object describing nodes to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes that match `options`.\n */\nexport function getElements(options, nodes, recurse, limit = Infinity) {\n    const test = compileTest(options);\n    return test ? filter(test, nodes, recurse, limit) : [];\n}\n/**\n * Returns the node with the supplied ID.\n *\n * @category Legacy Query Functions\n * @param id The unique ID attribute value to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @returns The node with the supplied ID.\n */\nexport function getElementById(id, nodes, recurse = true) {\n    if (!Array.isArray(nodes))\n        nodes = [nodes];\n    return findOne(getAttribCheck(\"id\", id), nodes, recurse);\n}\n/**\n * Returns all nodes with the supplied `tagName`.\n *\n * @category Legacy Query Functions\n * @param tagName Tag name to search for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `tagName`.\n */\nexport function getElementsByTagName(tagName, nodes, recurse = true, limit = Infinity) {\n    return filter(Checks[\"tag_name\"](tagName), nodes, recurse, limit);\n}\n/**\n * Returns all nodes with the supplied `type`.\n *\n * @category Legacy Query Functions\n * @param type Element type to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `type`.\n */\nexport function getElementsByTagType(type, nodes, recurse = true, limit = Infinity) {\n    return filter(Checks[\"tag_type\"](type), nodes, recurse, limit);\n}\n//# sourceMappingURL=legacy.js.map","import { hasChildren } from \"domhandler\";\n/**\n * Given an array of nodes, remove any member that is contained by another\n * member.\n *\n * @category Helpers\n * @param nodes Nodes to filter.\n * @returns Remaining nodes that aren't contained by other nodes.\n */\nexport function removeSubsets(nodes) {\n    let idx = nodes.length;\n    /*\n     * Check if each node (or one of its ancestors) is already contained in the\n     * array.\n     */\n    while (--idx >= 0) {\n        const node = nodes[idx];\n        /*\n         * Remove the node if it is not unique.\n         * We are going through the array from the end, so we only\n         * have to check nodes that preceed the node under consideration in the array.\n         */\n        if (idx > 0 && nodes.lastIndexOf(node, idx - 1) >= 0) {\n            nodes.splice(idx, 1);\n            continue;\n        }\n        for (let ancestor = node.parent; ancestor; ancestor = ancestor.parent) {\n            if (nodes.includes(ancestor)) {\n                nodes.splice(idx, 1);\n                break;\n            }\n        }\n    }\n    return nodes;\n}\n/**\n * @category Helpers\n * @see {@link http://dom.spec.whatwg.org/#dom-node-comparedocumentposition}\n */\nexport var DocumentPosition;\n(function (DocumentPosition) {\n    DocumentPosition[DocumentPosition[\"DISCONNECTED\"] = 1] = \"DISCONNECTED\";\n    DocumentPosition[DocumentPosition[\"PRECEDING\"] = 2] = \"PRECEDING\";\n    DocumentPosition[DocumentPosition[\"FOLLOWING\"] = 4] = \"FOLLOWING\";\n    DocumentPosition[DocumentPosition[\"CONTAINS\"] = 8] = \"CONTAINS\";\n    DocumentPosition[DocumentPosition[\"CONTAINED_BY\"] = 16] = \"CONTAINED_BY\";\n})(DocumentPosition || (DocumentPosition = {}));\n/**\n * Compare the position of one node against another node in any other document,\n * returning a bitmask with the values from {@link DocumentPosition}.\n *\n * Document order:\n * > There is an ordering, document order, defined on all the nodes in the\n * > document corresponding to the order in which the first character of the\n * > XML representation of each node occurs in the XML representation of the\n * > document after expansion of general entities. Thus, the document element\n * > node will be the first node. Element nodes occur before their children.\n * > Thus, document order orders element nodes in order of the occurrence of\n * > their start-tag in the XML (after expansion of entities). The attribute\n * > nodes of an element occur after the element and before its children. The\n * > relative order of attribute nodes is implementation-dependent.\n *\n * Source:\n * http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order\n *\n * @category Helpers\n * @param nodeA The first node to use in the comparison\n * @param nodeB The second node to use in the comparison\n * @returns A bitmask describing the input nodes' relative position.\n *\n * See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for\n * a description of these values.\n */\nexport function compareDocumentPosition(nodeA, nodeB) {\n    const aParents = [];\n    const bParents = [];\n    if (nodeA === nodeB) {\n        return 0;\n    }\n    let current = hasChildren(nodeA) ? nodeA : nodeA.parent;\n    while (current) {\n        aParents.unshift(current);\n        current = current.parent;\n    }\n    current = hasChildren(nodeB) ? nodeB : nodeB.parent;\n    while (current) {\n        bParents.unshift(current);\n        current = current.parent;\n    }\n    const maxIdx = Math.min(aParents.length, bParents.length);\n    let idx = 0;\n    while (idx < maxIdx && aParents[idx] === bParents[idx]) {\n        idx++;\n    }\n    if (idx === 0) {\n        return DocumentPosition.DISCONNECTED;\n    }\n    const sharedParent = aParents[idx - 1];\n    const siblings = sharedParent.children;\n    const aSibling = aParents[idx];\n    const bSibling = bParents[idx];\n    if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {\n        if (sharedParent === nodeB) {\n            return DocumentPosition.FOLLOWING | DocumentPosition.CONTAINED_BY;\n        }\n        return DocumentPosition.FOLLOWING;\n    }\n    if (sharedParent === nodeA) {\n        return DocumentPosition.PRECEDING | DocumentPosition.CONTAINS;\n    }\n    return DocumentPosition.PRECEDING;\n}\n/**\n * Sort an array of nodes based on their relative position in the document,\n * removing any duplicate nodes. If the array contains nodes that do not belong\n * to the same document, sort order is unspecified.\n *\n * @category Helpers\n * @param nodes Array of DOM nodes.\n * @returns Collection of unique nodes, sorted in document order.\n */\nexport function uniqueSort(nodes) {\n    nodes = nodes.filter((node, i, arr) => !arr.includes(node, i + 1));\n    nodes.sort((a, b) => {\n        const relative = compareDocumentPosition(a, b);\n        if (relative & DocumentPosition.PRECEDING) {\n            return -1;\n        }\n        else if (relative & DocumentPosition.FOLLOWING) {\n            return 1;\n        }\n        return 0;\n    });\n    return nodes;\n}\n//# sourceMappingURL=helpers.js.map","import { textContent } from \"./stringify.js\";\nimport { getElementsByTagName } from \"./legacy.js\";\n/**\n * Get the feed object from the root of a DOM tree.\n *\n * @category Feeds\n * @param doc - The DOM to to extract the feed from.\n * @returns The feed.\n */\nexport function getFeed(doc) {\n    const feedRoot = getOneElement(isValidFeed, doc);\n    return !feedRoot\n        ? null\n        : feedRoot.name === \"feed\"\n            ? getAtomFeed(feedRoot)\n            : getRssFeed(feedRoot);\n}\n/**\n * Parse an Atom feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getAtomFeed(feedRoot) {\n    var _a;\n    const childs = feedRoot.children;\n    const feed = {\n        type: \"atom\",\n        items: getElementsByTagName(\"entry\", childs).map((item) => {\n            var _a;\n            const { children } = item;\n            const entry = { media: getMediaElements(children) };\n            addConditionally(entry, \"id\", \"id\", children);\n            addConditionally(entry, \"title\", \"title\", children);\n            const href = (_a = getOneElement(\"link\", children)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n            if (href) {\n                entry.link = href;\n            }\n            const description = fetch(\"summary\", children) || fetch(\"content\", children);\n            if (description) {\n                entry.description = description;\n            }\n            const pubDate = fetch(\"updated\", children);\n            if (pubDate) {\n                entry.pubDate = new Date(pubDate);\n            }\n            return entry;\n        }),\n    };\n    addConditionally(feed, \"id\", \"id\", childs);\n    addConditionally(feed, \"title\", \"title\", childs);\n    const href = (_a = getOneElement(\"link\", childs)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n    if (href) {\n        feed.link = href;\n    }\n    addConditionally(feed, \"description\", \"subtitle\", childs);\n    const updated = fetch(\"updated\", childs);\n    if (updated) {\n        feed.updated = new Date(updated);\n    }\n    addConditionally(feed, \"author\", \"email\", childs, true);\n    return feed;\n}\n/**\n * Parse a RSS feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getRssFeed(feedRoot) {\n    var _a, _b;\n    const childs = (_b = (_a = getOneElement(\"channel\", feedRoot.children)) === null || _a === void 0 ? void 0 : _a.children) !== null && _b !== void 0 ? _b : [];\n    const feed = {\n        type: feedRoot.name.substr(0, 3),\n        id: \"\",\n        items: getElementsByTagName(\"item\", feedRoot.children).map((item) => {\n            const { children } = item;\n            const entry = { media: getMediaElements(children) };\n            addConditionally(entry, \"id\", \"guid\", children);\n            addConditionally(entry, \"title\", \"title\", children);\n            addConditionally(entry, \"link\", \"link\", children);\n            addConditionally(entry, \"description\", \"description\", children);\n            const pubDate = fetch(\"pubDate\", children) || fetch(\"dc:date\", children);\n            if (pubDate)\n                entry.pubDate = new Date(pubDate);\n            return entry;\n        }),\n    };\n    addConditionally(feed, \"title\", \"title\", childs);\n    addConditionally(feed, \"link\", \"link\", childs);\n    addConditionally(feed, \"description\", \"description\", childs);\n    const updated = fetch(\"lastBuildDate\", childs);\n    if (updated) {\n        feed.updated = new Date(updated);\n    }\n    addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n    return feed;\n}\nconst MEDIA_KEYS_STRING = [\"url\", \"type\", \"lang\"];\nconst MEDIA_KEYS_INT = [\n    \"fileSize\",\n    \"bitrate\",\n    \"framerate\",\n    \"samplingrate\",\n    \"channels\",\n    \"duration\",\n    \"height\",\n    \"width\",\n];\n/**\n * Get all media elements of a feed item.\n *\n * @param where Nodes to search in.\n * @returns Media elements.\n */\nfunction getMediaElements(where) {\n    return getElementsByTagName(\"media:content\", where).map((elem) => {\n        const { attribs } = elem;\n        const media = {\n            medium: attribs[\"medium\"],\n            isDefault: !!attribs[\"isDefault\"],\n        };\n        for (const attrib of MEDIA_KEYS_STRING) {\n            if (attribs[attrib]) {\n                media[attrib] = attribs[attrib];\n            }\n        }\n        for (const attrib of MEDIA_KEYS_INT) {\n            if (attribs[attrib]) {\n                media[attrib] = parseInt(attribs[attrib], 10);\n            }\n        }\n        if (attribs[\"expression\"]) {\n            media.expression = attribs[\"expression\"];\n        }\n        return media;\n    });\n}\n/**\n * Get one element by tag name.\n *\n * @param tagName Tag name to look for\n * @param node Node to search in\n * @returns The element or null\n */\nfunction getOneElement(tagName, node) {\n    return getElementsByTagName(tagName, node, true, 1)[0];\n}\n/**\n * Get the text content of an element with a certain tag name.\n *\n * @param tagName Tag name to look for.\n * @param where Node to search in.\n * @param recurse Whether to recurse into child nodes.\n * @returns The text content of the element.\n */\nfunction fetch(tagName, where, recurse = false) {\n    return textContent(getElementsByTagName(tagName, where, recurse, 1)).trim();\n}\n/**\n * Adds a property to an object if it has a value.\n *\n * @param obj Object to be extended\n * @param prop Property name\n * @param tagName Tag name that contains the conditionally added property\n * @param where Element to search for the property\n * @param recurse Whether to recurse into child nodes.\n */\nfunction addConditionally(obj, prop, tagName, where, recurse = false) {\n    const val = fetch(tagName, where, recurse);\n    if (val)\n        obj[prop] = val;\n}\n/**\n * Checks if an element is a feed root node.\n *\n * @param value The name of the element to check.\n * @returns Whether an element is a feed root node.\n */\nfunction isValidFeed(value) {\n    return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n}\n//# sourceMappingURL=feeds.js.map","import { AttributeAction, SelectorType } from \"css-what\";\nconst procedure = new Map([\n    [SelectorType.Universal, 50],\n    [SelectorType.Tag, 30],\n    [SelectorType.Attribute, 1],\n    [SelectorType.Pseudo, 0],\n]);\nexport function isTraversal(token) {\n    return !procedure.has(token.type);\n}\nconst attributes = new Map([\n    [AttributeAction.Exists, 10],\n    [AttributeAction.Equals, 8],\n    [AttributeAction.Not, 7],\n    [AttributeAction.Start, 6],\n    [AttributeAction.End, 6],\n    [AttributeAction.Any, 5],\n]);\n/**\n * Sort the parts of the passed selector,\n * as there is potential for optimization\n * (some types of selectors are faster than others)\n *\n * @param arr Selector to sort\n */\nexport default function sortByProcedure(arr) {\n    const procs = arr.map(getProcedure);\n    for (let i = 1; i < arr.length; i++) {\n        const procNew = procs[i];\n        if (procNew < 0)\n            continue;\n        for (let j = i - 1; j >= 0 && procNew < procs[j]; j--) {\n            const token = arr[j + 1];\n            arr[j + 1] = arr[j];\n            arr[j] = token;\n            procs[j + 1] = procs[j];\n            procs[j] = procNew;\n        }\n    }\n}\nfunction getProcedure(token) {\n    var _a, _b;\n    let proc = (_a = procedure.get(token.type)) !== null && _a !== void 0 ? _a : -1;\n    if (token.type === SelectorType.Attribute) {\n        proc = (_b = attributes.get(token.action)) !== null && _b !== void 0 ? _b : 4;\n        if (token.action === AttributeAction.Equals && token.name === \"id\") {\n            // Prefer ID selectors (eg. #ID)\n            proc = 9;\n        }\n        if (token.ignoreCase) {\n            /*\n             * IgnoreCase adds some overhead, prefer \"normal\" token\n             * this is a binary operation, to ensure it's still an int\n             */\n            proc >>= 1;\n        }\n    }\n    else if (token.type === SelectorType.Pseudo) {\n        if (!token.data) {\n            proc = 3;\n        }\n        else if (token.name === \"has\" || token.name === \"contains\") {\n            proc = 0; // Expensive in any case\n        }\n        else if (Array.isArray(token.data)) {\n            // Eg. :matches, :not\n            proc = Math.min(...token.data.map((d) => Math.min(...d.map(getProcedure))));\n            // If we have traversals, try to avoid executing this selector\n            if (proc < 0) {\n                proc = 0;\n            }\n        }\n        else {\n            proc = 2;\n        }\n    }\n    return proc;\n}\n//# sourceMappingURL=sort.js.map","import boolbase from \"boolbase\";\n/**\n * All reserved characters in a regex, used for escaping.\n *\n * Taken from XRegExp, (c) 2007-2020 Steven Levithan under the MIT license\n * https://github.com/slevithan/xregexp/blob/95eeebeb8fac8754d54eafe2b4743661ac1cf028/src/xregexp.js#L794\n */\nconst reChars = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\nfunction escapeRegex(value) {\n    return value.replace(reChars, \"\\\\$&\");\n}\n/**\n * Attributes that are case-insensitive in HTML.\n *\n * @private\n * @see https://html.spec.whatwg.org/multipage/semantics-other.html#case-sensitivity-of-selectors\n */\nconst caseInsensitiveAttributes = new Set([\n    \"accept\",\n    \"accept-charset\",\n    \"align\",\n    \"alink\",\n    \"axis\",\n    \"bgcolor\",\n    \"charset\",\n    \"checked\",\n    \"clear\",\n    \"codetype\",\n    \"color\",\n    \"compact\",\n    \"declare\",\n    \"defer\",\n    \"dir\",\n    \"direction\",\n    \"disabled\",\n    \"enctype\",\n    \"face\",\n    \"frame\",\n    \"hreflang\",\n    \"http-equiv\",\n    \"lang\",\n    \"language\",\n    \"link\",\n    \"media\",\n    \"method\",\n    \"multiple\",\n    \"nohref\",\n    \"noresize\",\n    \"noshade\",\n    \"nowrap\",\n    \"readonly\",\n    \"rel\",\n    \"rev\",\n    \"rules\",\n    \"scope\",\n    \"scrolling\",\n    \"selected\",\n    \"shape\",\n    \"target\",\n    \"text\",\n    \"type\",\n    \"valign\",\n    \"valuetype\",\n    \"vlink\",\n]);\nfunction shouldIgnoreCase(selector, options) {\n    return typeof selector.ignoreCase === \"boolean\"\n        ? selector.ignoreCase\n        : selector.ignoreCase === \"quirks\"\n            ? !!options.quirksMode\n            : !options.xmlMode && caseInsensitiveAttributes.has(selector.name);\n}\n/**\n * Attribute selectors\n */\nexport const attributeRules = {\n    equals(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length === value.length &&\n                    attr.toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return (elem) => adapter.getAttributeValue(elem, name) === value && next(elem);\n    },\n    hyphen(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = value.length;\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return function hyphenIC(elem) {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    (attr.length === len || attr.charAt(len) === \"-\") &&\n                    attr.substr(0, len).toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return function hyphen(elem) {\n            const attr = adapter.getAttributeValue(elem, name);\n            return (attr != null &&\n                (attr.length === len || attr.charAt(len) === \"-\") &&\n                attr.substr(0, len) === value &&\n                next(elem));\n        };\n    },\n    element(next, data, options) {\n        const { adapter } = options;\n        const { name, value } = data;\n        if (/\\s/.test(value)) {\n            return boolbase.falseFunc;\n        }\n        const regex = new RegExp(`(?:^|\\\\s)${escapeRegex(value)}(?:$|\\\\s)`, shouldIgnoreCase(data, options) ? \"i\" : \"\");\n        return function element(elem) {\n            const attr = adapter.getAttributeValue(elem, name);\n            return (attr != null &&\n                attr.length >= value.length &&\n                regex.test(attr) &&\n                next(elem));\n        };\n    },\n    exists(next, { name }, { adapter }) {\n        return (elem) => adapter.hasAttrib(elem, name) && next(elem);\n    },\n    start(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = value.length;\n        if (len === 0) {\n            return boolbase.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length >= len &&\n                    attr.substr(0, len).toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return (elem) => {\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.startsWith(value)) &&\n                next(elem);\n        };\n    },\n    end(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = -value.length;\n        if (len === 0) {\n            return boolbase.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                var _a;\n                return ((_a = adapter\n                    .getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.substr(len).toLowerCase()) === value && next(elem);\n            };\n        }\n        return (elem) => {\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.endsWith(value)) &&\n                next(elem);\n        };\n    },\n    any(next, data, options) {\n        const { adapter } = options;\n        const { name, value } = data;\n        if (value === \"\") {\n            return boolbase.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            const regex = new RegExp(escapeRegex(value), \"i\");\n            return function anyIC(elem) {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length >= value.length &&\n                    regex.test(attr) &&\n                    next(elem));\n            };\n        }\n        return (elem) => {\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.includes(value)) &&\n                next(elem);\n        };\n    },\n    not(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        if (value === \"\") {\n            return (elem) => !!adapter.getAttributeValue(elem, name) && next(elem);\n        }\n        else if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                const attr = adapter.getAttributeValue(elem, name);\n                return ((attr == null ||\n                    attr.length !== value.length ||\n                    attr.toLowerCase() !== value) &&\n                    next(elem));\n            };\n        }\n        return (elem) => adapter.getAttributeValue(elem, name) !== value && next(elem);\n    },\n};\n//# sourceMappingURL=attributes.js.map","// Following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo\n// Whitespace as per https://www.w3.org/TR/selectors-3/#lex is \" \\t\\r\\n\\f\"\nconst whitespace = new Set([9, 10, 12, 13, 32]);\nconst ZERO = \"0\".charCodeAt(0);\nconst NINE = \"9\".charCodeAt(0);\n/**\n * Parses an expression.\n *\n * @throws An `Error` if parsing fails.\n * @returns An array containing the integer step size and the integer offset of the nth rule.\n * @example nthCheck.parse(\"2n+3\"); // returns [2, 3]\n */\nexport function parse(formula) {\n    formula = formula.trim().toLowerCase();\n    if (formula === \"even\") {\n        return [2, 0];\n    }\n    else if (formula === \"odd\") {\n        return [2, 1];\n    }\n    // Parse [ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?\n    let idx = 0;\n    let a = 0;\n    let sign = readSign();\n    let number = readNumber();\n    if (idx < formula.length && formula.charAt(idx) === \"n\") {\n        idx++;\n        a = sign * (number !== null && number !== void 0 ? number : 1);\n        skipWhitespace();\n        if (idx < formula.length) {\n            sign = readSign();\n            skipWhitespace();\n            number = readNumber();\n        }\n        else {\n            sign = number = 0;\n        }\n    }\n    // Throw if there is anything else\n    if (number === null || idx < formula.length) {\n        throw new Error(`n-th rule couldn't be parsed ('${formula}')`);\n    }\n    return [a, sign * number];\n    function readSign() {\n        if (formula.charAt(idx) === \"-\") {\n            idx++;\n            return -1;\n        }\n        if (formula.charAt(idx) === \"+\") {\n            idx++;\n        }\n        return 1;\n    }\n    function readNumber() {\n        const start = idx;\n        let value = 0;\n        while (idx < formula.length &&\n            formula.charCodeAt(idx) >= ZERO &&\n            formula.charCodeAt(idx) <= NINE) {\n            value = value * 10 + (formula.charCodeAt(idx) - ZERO);\n            idx++;\n        }\n        // Return `null` if we didn't read anything.\n        return idx === start ? null : value;\n    }\n    function skipWhitespace() {\n        while (idx < formula.length &&\n            whitespace.has(formula.charCodeAt(idx))) {\n            idx++;\n        }\n    }\n}\n//# sourceMappingURL=parse.js.map","import { parse } from \"./parse.js\";\nimport { compile, generate } from \"./compile.js\";\nexport { parse, compile, generate };\n/**\n * Parses and compiles a formula to a highly optimized function.\n * Combination of {@link parse} and {@link compile}.\n *\n * If the formula doesn't match any elements,\n * it returns [`boolbase`](https://github.com/fb55/boolbase)'s `falseFunc`.\n * Otherwise, a function accepting an _index_ is returned, which returns\n * whether or not the passed _index_ matches the formula.\n *\n * Note: The nth-rule starts counting at `1`, the returned function at `0`.\n *\n * @param formula The formula to compile.\n * @example\n * const check = nthCheck(\"2n+3\");\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n */\nexport default function nthCheck(formula) {\n    return compile(parse(formula));\n}\n/**\n * Parses and compiles a formula to a generator that produces a sequence of indices.\n * Combination of {@link parse} and {@link generate}.\n *\n * @param formula The formula to compile.\n * @returns A function that produces a sequence of indices.\n * @example <caption>Always increasing</caption>\n *\n * ```js\n * const gen = nthCheck.sequence('2n+3')\n *\n * gen() // `1`\n * gen() // `3`\n * gen() // `5`\n * gen() // `8`\n * gen() // `11`\n * ```\n *\n * @example <caption>With end value</caption>\n *\n * ```js\n *\n * const gen = nthCheck.sequence('-2n+5');\n *\n * gen() // 0\n * gen() // 2\n * gen() // 4\n * gen() // null\n * ```\n */\nexport function sequence(formula) {\n    return generate(parse(formula));\n}\n//# sourceMappingURL=index.js.map","import boolbase from \"boolbase\";\n/**\n * Returns a function that checks if an elements index matches the given rule\n * highly optimized to return the fastest solution.\n *\n * @param parsed A tuple [a, b], as returned by `parse`.\n * @returns A highly optimized function that returns whether an index matches the nth-check.\n * @example\n *\n * ```js\n * const check = nthCheck.compile([2, 3]);\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n * ```\n */\nexport function compile(parsed) {\n    const a = parsed[0];\n    // Subtract 1 from `b`, to convert from one- to zero-indexed.\n    const b = parsed[1] - 1;\n    /*\n     * When `b <= 0`, `a * n` won't be lead to any matches for `a < 0`.\n     * Besides, the specification states that no elements are\n     * matched when `a` and `b` are 0.\n     *\n     * `b < 0` here as we subtracted 1 from `b` above.\n     */\n    if (b < 0 && a <= 0)\n        return boolbase.falseFunc;\n    // When `a` is in the range -1..1, it matches any element (so only `b` is checked).\n    if (a === -1)\n        return (index) => index <= b;\n    if (a === 0)\n        return (index) => index === b;\n    // When `b <= 0` and `a === 1`, they match any element.\n    if (a === 1)\n        return b < 0 ? boolbase.trueFunc : (index) => index >= b;\n    /*\n     * Otherwise, modulo can be used to check if there is a match.\n     *\n     * Modulo doesn't care about the sign, so let's use `a`s absolute value.\n     */\n    const absA = Math.abs(a);\n    // Get `b mod a`, + a if this is negative.\n    const bMod = ((b % absA) + absA) % absA;\n    return a > 1\n        ? (index) => index >= b && index % absA === bMod\n        : (index) => index <= b && index % absA === bMod;\n}\n/**\n * Returns a function that produces a monotonously increasing sequence of indices.\n *\n * If the sequence has an end, the returned function will return `null` after\n * the last index in the sequence.\n *\n * @param parsed A tuple [a, b], as returned by `parse`.\n * @returns A function that produces a sequence of indices.\n * @example <caption>Always increasing (2n+3)</caption>\n *\n * ```js\n * const gen = nthCheck.generate([2, 3])\n *\n * gen() // `1`\n * gen() // `3`\n * gen() // `5`\n * gen() // `8`\n * gen() // `11`\n * ```\n *\n * @example <caption>With end value (-2n+10)</caption>\n *\n * ```js\n *\n * const gen = nthCheck.generate([-2, 5]);\n *\n * gen() // 0\n * gen() // 2\n * gen() // 4\n * gen() // null\n * ```\n */\nexport function generate(parsed) {\n    const a = parsed[0];\n    // Subtract 1 from `b`, to convert from one- to zero-indexed.\n    let b = parsed[1] - 1;\n    let n = 0;\n    // Make sure to always return an increasing sequence\n    if (a < 0) {\n        const aPos = -a;\n        // Get `b mod a`\n        const minValue = ((b % aPos) + aPos) % aPos;\n        return () => {\n            const val = minValue + aPos * n++;\n            return val > b ? null : val;\n        };\n    }\n    if (a === 0)\n        return b < 0\n            ? // There are no result — always return `null`\n                () => null\n            : // Return `b` exactly once\n                () => (n++ === 0 ? b : null);\n    if (b < 0) {\n        b += a * Math.ceil(-b / a);\n    }\n    return () => a * n++ + b;\n}\n//# sourceMappingURL=compile.js.map","import getNCheck from \"nth-check\";\nimport boolbase from \"boolbase\";\nfunction getChildFunc(next, adapter) {\n    return (elem) => {\n        const parent = adapter.getParent(elem);\n        return parent != null && adapter.isTag(parent) && next(elem);\n    };\n}\nexport const filters = {\n    contains(next, text, { adapter }) {\n        return function contains(elem) {\n            return next(elem) && adapter.getText(elem).includes(text);\n        };\n    },\n    icontains(next, text, { adapter }) {\n        const itext = text.toLowerCase();\n        return function icontains(elem) {\n            return (next(elem) &&\n                adapter.getText(elem).toLowerCase().includes(itext));\n        };\n    },\n    // Location specific methods\n    \"nth-child\"(next, rule, { adapter, equals }) {\n        const func = getNCheck(rule);\n        if (func === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        if (func === boolbase.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthChild(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = 0; i < siblings.length; i++) {\n                if (equals(elem, siblings[i]))\n                    break;\n                if (adapter.isTag(siblings[i])) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-child\"(next, rule, { adapter, equals }) {\n        const func = getNCheck(rule);\n        if (func === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        if (func === boolbase.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthLastChild(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = siblings.length - 1; i >= 0; i--) {\n                if (equals(elem, siblings[i]))\n                    break;\n                if (adapter.isTag(siblings[i])) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-of-type\"(next, rule, { adapter, equals }) {\n        const func = getNCheck(rule);\n        if (func === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        if (func === boolbase.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthOfType(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = 0; i < siblings.length; i++) {\n                const currentSibling = siblings[i];\n                if (equals(elem, currentSibling))\n                    break;\n                if (adapter.isTag(currentSibling) &&\n                    adapter.getName(currentSibling) === adapter.getName(elem)) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-of-type\"(next, rule, { adapter, equals }) {\n        const func = getNCheck(rule);\n        if (func === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        if (func === boolbase.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthLastOfType(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = siblings.length - 1; i >= 0; i--) {\n                const currentSibling = siblings[i];\n                if (equals(elem, currentSibling))\n                    break;\n                if (adapter.isTag(currentSibling) &&\n                    adapter.getName(currentSibling) === adapter.getName(elem)) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    // TODO determine the actual root element\n    root(next, _rule, { adapter }) {\n        return (elem) => {\n            const parent = adapter.getParent(elem);\n            return (parent == null || !adapter.isTag(parent)) && next(elem);\n        };\n    },\n    scope(next, rule, options, context) {\n        const { equals } = options;\n        if (!context || context.length === 0) {\n            // Equivalent to :root\n            return filters[\"root\"](next, rule, options);\n        }\n        if (context.length === 1) {\n            // NOTE: can't be unpacked, as :has uses this for side-effects\n            return (elem) => equals(context[0], elem) && next(elem);\n        }\n        return (elem) => context.includes(elem) && next(elem);\n    },\n    hover: dynamicStatePseudo(\"isHovered\"),\n    visited: dynamicStatePseudo(\"isVisited\"),\n    active: dynamicStatePseudo(\"isActive\"),\n};\n/**\n * Dynamic state pseudos. These depend on optional Adapter methods.\n *\n * @param name The name of the adapter method to call.\n * @returns Pseudo for the `filters` object.\n */\nfunction dynamicStatePseudo(name) {\n    return function dynamicPseudo(next, _rule, { adapter }) {\n        const func = adapter[name];\n        if (typeof func !== \"function\") {\n            return boolbase.falseFunc;\n        }\n        return function active(elem) {\n            return func(elem) && next(elem);\n        };\n    };\n}\n//# sourceMappingURL=filters.js.map","// While filters are precompiled, pseudos get called when they are needed\nexport const pseudos = {\n    empty(elem, { adapter }) {\n        return !adapter.getChildren(elem).some((elem) => \n        // FIXME: `getText` call is potentially expensive.\n        adapter.isTag(elem) || adapter.getText(elem) !== \"\");\n    },\n    \"first-child\"(elem, { adapter, equals }) {\n        if (adapter.prevElementSibling) {\n            return adapter.prevElementSibling(elem) == null;\n        }\n        const firstChild = adapter\n            .getSiblings(elem)\n            .find((elem) => adapter.isTag(elem));\n        return firstChild != null && equals(elem, firstChild);\n    },\n    \"last-child\"(elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        for (let i = siblings.length - 1; i >= 0; i--) {\n            if (equals(elem, siblings[i]))\n                return true;\n            if (adapter.isTag(siblings[i]))\n                break;\n        }\n        return false;\n    },\n    \"first-of-type\"(elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        const elemName = adapter.getName(elem);\n        for (let i = 0; i < siblings.length; i++) {\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling))\n                return true;\n            if (adapter.isTag(currentSibling) &&\n                adapter.getName(currentSibling) === elemName) {\n                break;\n            }\n        }\n        return false;\n    },\n    \"last-of-type\"(elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        const elemName = adapter.getName(elem);\n        for (let i = siblings.length - 1; i >= 0; i--) {\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling))\n                return true;\n            if (adapter.isTag(currentSibling) &&\n                adapter.getName(currentSibling) === elemName) {\n                break;\n            }\n        }\n        return false;\n    },\n    \"only-of-type\"(elem, { adapter, equals }) {\n        const elemName = adapter.getName(elem);\n        return adapter\n            .getSiblings(elem)\n            .every((sibling) => equals(elem, sibling) ||\n            !adapter.isTag(sibling) ||\n            adapter.getName(sibling) !== elemName);\n    },\n    \"only-child\"(elem, { adapter, equals }) {\n        return adapter\n            .getSiblings(elem)\n            .every((sibling) => equals(elem, sibling) || !adapter.isTag(sibling));\n    },\n};\nexport function verifyPseudoArgs(func, name, subselect, argIndex) {\n    if (subselect === null) {\n        if (func.length > argIndex) {\n            throw new Error(`Pseudo-class :${name} requires an argument`);\n        }\n    }\n    else if (func.length === argIndex) {\n        throw new Error(`Pseudo-class :${name} doesn't have any arguments`);\n    }\n}\n//# sourceMappingURL=pseudos.js.map","/**\n * Aliases are pseudos that are expressed as selectors.\n */\nexport const aliases = {\n    // Links\n    \"any-link\": \":is(a, area, link)[href]\",\n    link: \":any-link:not(:visited)\",\n    // Forms\n    // https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements\n    disabled: `:is(\n        :is(button, input, select, textarea, optgroup, option)[disabled],\n        optgroup[disabled] > option,\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\n    )`,\n    enabled: \":not(:disabled)\",\n    checked: \":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)\",\n    required: \":is(input, select, textarea)[required]\",\n    optional: \":is(input, select, textarea):not([required])\",\n    // JQuery extensions\n    // https://html.spec.whatwg.org/multipage/form-elements.html#concept-option-selectedness\n    selected: \"option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)\",\n    checkbox: \"[type=checkbox]\",\n    file: \"[type=file]\",\n    password: \"[type=password]\",\n    radio: \"[type=radio]\",\n    reset: \"[type=reset]\",\n    image: \"[type=image]\",\n    submit: \"[type=submit]\",\n    parent: \":not(:empty)\",\n    header: \":is(h1, h2, h3, h4, h5, h6)\",\n    button: \":is(button, input[type=button])\",\n    input: \":is(input, textarea, select, button)\",\n    text: \"input:is(:not([type!='']), [type=text])\",\n};\n//# sourceMappingURL=aliases.js.map","import boolbase from \"boolbase\";\nimport { isTraversal } from \"../sort.js\";\n/** Used as a placeholder for :has. Will be replaced with the actual element. */\nexport const PLACEHOLDER_ELEMENT = {};\nexport function ensureIsTag(next, adapter) {\n    if (next === boolbase.falseFunc)\n        return boolbase.falseFunc;\n    return (elem) => adapter.isTag(elem) && next(elem);\n}\nexport function getNextSiblings(elem, adapter) {\n    const siblings = adapter.getSiblings(elem);\n    if (siblings.length <= 1)\n        return [];\n    const elemIndex = siblings.indexOf(elem);\n    if (elemIndex < 0 || elemIndex === siblings.length - 1)\n        return [];\n    return siblings.slice(elemIndex + 1).filter(adapter.isTag);\n}\nfunction copyOptions(options) {\n    // Not copied: context, rootFunc\n    return {\n        xmlMode: !!options.xmlMode,\n        lowerCaseAttributeNames: !!options.lowerCaseAttributeNames,\n        lowerCaseTags: !!options.lowerCaseTags,\n        quirksMode: !!options.quirksMode,\n        cacheResults: !!options.cacheResults,\n        pseudos: options.pseudos,\n        adapter: options.adapter,\n        equals: options.equals,\n    };\n}\nconst is = (next, token, options, context, compileToken) => {\n    const func = compileToken(token, copyOptions(options), context);\n    return func === boolbase.trueFunc\n        ? next\n        : func === boolbase.falseFunc\n            ? boolbase.falseFunc\n            : (elem) => func(elem) && next(elem);\n};\n/*\n * :not, :has, :is, :matches and :where have to compile selectors\n * doing this in src/pseudos.ts would lead to circular dependencies,\n * so we add them here\n */\nexport const subselects = {\n    is,\n    /**\n     * `:matches` and `:where` are aliases for `:is`.\n     */\n    matches: is,\n    where: is,\n    not(next, token, options, context, compileToken) {\n        const func = compileToken(token, copyOptions(options), context);\n        return func === boolbase.falseFunc\n            ? next\n            : func === boolbase.trueFunc\n                ? boolbase.falseFunc\n                : (elem) => !func(elem) && next(elem);\n    },\n    has(next, subselect, options, _context, compileToken) {\n        const { adapter } = options;\n        const opts = copyOptions(options);\n        opts.relativeSelector = true;\n        const context = subselect.some((s) => s.some(isTraversal))\n            ? // Used as a placeholder. Will be replaced with the actual element.\n                [PLACEHOLDER_ELEMENT]\n            : undefined;\n        const compiled = compileToken(subselect, opts, context);\n        if (compiled === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        const hasElement = ensureIsTag(compiled, adapter);\n        // If `compiled` is `trueFunc`, we can skip this.\n        if (context && compiled !== boolbase.trueFunc) {\n            /*\n             * `shouldTestNextSiblings` will only be true if the query starts with\n             * a traversal (sibling or adjacent). That means we will always have a context.\n             */\n            const { shouldTestNextSiblings = false } = compiled;\n            return (elem) => {\n                if (!next(elem))\n                    return false;\n                context[0] = elem;\n                const childs = adapter.getChildren(elem);\n                const nextElements = shouldTestNextSiblings\n                    ? [...childs, ...getNextSiblings(elem, adapter)]\n                    : childs;\n                return adapter.existsOne(hasElement, nextElements);\n            };\n        }\n        return (elem) => next(elem) &&\n            adapter.existsOne(hasElement, adapter.getChildren(elem));\n    },\n};\n//# sourceMappingURL=subselects.js.map","import { attributeRules } from \"./attributes.js\";\nimport { compilePseudoSelector } from \"./pseudo-selectors/index.js\";\nimport { SelectorType } from \"css-what\";\nfunction getElementParent(node, adapter) {\n    const parent = adapter.getParent(node);\n    if (parent && adapter.isTag(parent)) {\n        return parent;\n    }\n    return null;\n}\n/*\n * All available rules\n */\nexport function compileGeneralSelector(next, selector, options, context, compileToken) {\n    const { adapter, equals } = options;\n    switch (selector.type) {\n        case SelectorType.PseudoElement: {\n            throw new Error(\"Pseudo-elements are not supported by css-select\");\n        }\n        case SelectorType.ColumnCombinator: {\n            throw new Error(\"Column combinators are not yet supported by css-select\");\n        }\n        case SelectorType.Attribute: {\n            if (selector.namespace != null) {\n                throw new Error(\"Namespaced attributes are not yet supported by css-select\");\n            }\n            if (!options.xmlMode || options.lowerCaseAttributeNames) {\n                selector.name = selector.name.toLowerCase();\n            }\n            return attributeRules[selector.action](next, selector, options);\n        }\n        case SelectorType.Pseudo: {\n            return compilePseudoSelector(next, selector, options, context, compileToken);\n        }\n        // Tags\n        case SelectorType.Tag: {\n            if (selector.namespace != null) {\n                throw new Error(\"Namespaced tag names are not yet supported by css-select\");\n            }\n            let { name } = selector;\n            if (!options.xmlMode || options.lowerCaseTags) {\n                name = name.toLowerCase();\n            }\n            return function tag(elem) {\n                return adapter.getName(elem) === name && next(elem);\n            };\n        }\n        // Traversal\n        case SelectorType.Descendant: {\n            if (options.cacheResults === false ||\n                typeof WeakSet === \"undefined\") {\n                return function descendant(elem) {\n                    let current = elem;\n                    while ((current = getElementParent(current, adapter))) {\n                        if (next(current)) {\n                            return true;\n                        }\n                    }\n                    return false;\n                };\n            }\n            // @ts-expect-error `ElementNode` is not extending object\n            const isFalseCache = new WeakSet();\n            return function cachedDescendant(elem) {\n                let current = elem;\n                while ((current = getElementParent(current, adapter))) {\n                    if (!isFalseCache.has(current)) {\n                        if (adapter.isTag(current) && next(current)) {\n                            return true;\n                        }\n                        isFalseCache.add(current);\n                    }\n                }\n                return false;\n            };\n        }\n        case \"_flexibleDescendant\": {\n            // Include element itself, only used while querying an array\n            return function flexibleDescendant(elem) {\n                let current = elem;\n                do {\n                    if (next(current))\n                        return true;\n                } while ((current = getElementParent(current, adapter)));\n                return false;\n            };\n        }\n        case SelectorType.Parent: {\n            return function parent(elem) {\n                return adapter\n                    .getChildren(elem)\n                    .some((elem) => adapter.isTag(elem) && next(elem));\n            };\n        }\n        case SelectorType.Child: {\n            return function child(elem) {\n                const parent = adapter.getParent(elem);\n                return parent != null && adapter.isTag(parent) && next(parent);\n            };\n        }\n        case SelectorType.Sibling: {\n            return function sibling(elem) {\n                const siblings = adapter.getSiblings(elem);\n                for (let i = 0; i < siblings.length; i++) {\n                    const currentSibling = siblings[i];\n                    if (equals(elem, currentSibling))\n                        break;\n                    if (adapter.isTag(currentSibling) && next(currentSibling)) {\n                        return true;\n                    }\n                }\n                return false;\n            };\n        }\n        case SelectorType.Adjacent: {\n            if (adapter.prevElementSibling) {\n                return function adjacent(elem) {\n                    const previous = adapter.prevElementSibling(elem);\n                    return previous != null && next(previous);\n                };\n            }\n            return function adjacent(elem) {\n                const siblings = adapter.getSiblings(elem);\n                let lastElement;\n                for (let i = 0; i < siblings.length; i++) {\n                    const currentSibling = siblings[i];\n                    if (equals(elem, currentSibling))\n                        break;\n                    if (adapter.isTag(currentSibling)) {\n                        lastElement = currentSibling;\n                    }\n                }\n                return !!lastElement && next(lastElement);\n            };\n        }\n        case SelectorType.Universal: {\n            if (selector.namespace != null && selector.namespace !== \"*\") {\n                throw new Error(\"Namespaced universal selectors are not yet supported by css-select\");\n            }\n            return next;\n        }\n    }\n}\n//# sourceMappingURL=general.js.map","import { parse } from \"css-what\";\nimport { filters } from \"./filters.js\";\nimport { pseudos, verifyPseudoArgs } from \"./pseudos.js\";\nimport { aliases } from \"./aliases.js\";\nimport { subselects } from \"./subselects.js\";\nexport { filters, pseudos, aliases };\nexport function compilePseudoSelector(next, selector, options, context, compileToken) {\n    var _a;\n    const { name, data } = selector;\n    if (Array.isArray(data)) {\n        if (!(name in subselects)) {\n            throw new Error(`Unknown pseudo-class :${name}(${data})`);\n        }\n        return subselects[name](next, data, options, context, compileToken);\n    }\n    const userPseudo = (_a = options.pseudos) === null || _a === void 0 ? void 0 : _a[name];\n    const stringPseudo = typeof userPseudo === \"string\" ? userPseudo : aliases[name];\n    if (typeof stringPseudo === \"string\") {\n        if (data != null) {\n            throw new Error(`Pseudo ${name} doesn't have any arguments`);\n        }\n        // The alias has to be parsed here, to make sure options are respected.\n        const alias = parse(stringPseudo);\n        return subselects[\"is\"](next, alias, options, context, compileToken);\n    }\n    if (typeof userPseudo === \"function\") {\n        verifyPseudoArgs(userPseudo, name, data, 1);\n        return (elem) => userPseudo(elem, data) && next(elem);\n    }\n    if (name in filters) {\n        return filters[name](next, data, options, context);\n    }\n    if (name in pseudos) {\n        const pseudo = pseudos[name];\n        verifyPseudoArgs(pseudo, name, data, 2);\n        return (elem) => pseudo(elem, options, data) && next(elem);\n    }\n    throw new Error(`Unknown pseudo-class :${name}`);\n}\n//# sourceMappingURL=index.js.map","import { parse, SelectorType } from \"css-what\";\nimport boolbase from \"boolbase\";\nimport sortRules, { isTraversal } from \"./sort.js\";\nimport { compileGeneralSelector } from \"./general.js\";\nimport { ensureIsTag, PLACEHOLDER_ELEMENT, } from \"./pseudo-selectors/subselects.js\";\n/**\n * Compiles a selector to an executable function.\n *\n * @param selector Selector to compile.\n * @param options Compilation options.\n * @param context Optional context for the selector.\n */\nexport function compile(selector, options, context) {\n    const next = compileUnsafe(selector, options, context);\n    return ensureIsTag(next, options.adapter);\n}\nexport function compileUnsafe(selector, options, context) {\n    const token = typeof selector === \"string\" ? parse(selector) : selector;\n    return compileToken(token, options, context);\n}\nfunction includesScopePseudo(t) {\n    return (t.type === SelectorType.Pseudo &&\n        (t.name === \"scope\" ||\n            (Array.isArray(t.data) &&\n                t.data.some((data) => data.some(includesScopePseudo)))));\n}\nconst DESCENDANT_TOKEN = { type: SelectorType.Descendant };\nconst FLEXIBLE_DESCENDANT_TOKEN = {\n    type: \"_flexibleDescendant\",\n};\nconst SCOPE_TOKEN = {\n    type: SelectorType.Pseudo,\n    name: \"scope\",\n    data: null,\n};\n/*\n * CSS 4 Spec (Draft): 3.4.1. Absolutizing a Relative Selector\n * http://www.w3.org/TR/selectors4/#absolutizing\n */\nfunction absolutize(token, { adapter }, context) {\n    // TODO Use better check if the context is a document\n    const hasContext = !!(context === null || context === void 0 ? void 0 : context.every((e) => {\n        const parent = adapter.isTag(e) && adapter.getParent(e);\n        return e === PLACEHOLDER_ELEMENT || (parent && adapter.isTag(parent));\n    }));\n    for (const t of token) {\n        if (t.length > 0 &&\n            isTraversal(t[0]) &&\n            t[0].type !== SelectorType.Descendant) {\n            // Don't continue in else branch\n        }\n        else if (hasContext && !t.some(includesScopePseudo)) {\n            t.unshift(DESCENDANT_TOKEN);\n        }\n        else {\n            continue;\n        }\n        t.unshift(SCOPE_TOKEN);\n    }\n}\nexport function compileToken(token, options, context) {\n    var _a;\n    token.forEach(sortRules);\n    context = (_a = options.context) !== null && _a !== void 0 ? _a : context;\n    const isArrayContext = Array.isArray(context);\n    const finalContext = context && (Array.isArray(context) ? context : [context]);\n    // Check if the selector is relative\n    if (options.relativeSelector !== false) {\n        absolutize(token, options, finalContext);\n    }\n    else if (token.some((t) => t.length > 0 && isTraversal(t[0]))) {\n        throw new Error(\"Relative selectors are not allowed when the `relativeSelector` option is disabled\");\n    }\n    let shouldTestNextSiblings = false;\n    const query = token\n        .map((rules) => {\n        if (rules.length >= 2) {\n            const [first, second] = rules;\n            if (first.type !== SelectorType.Pseudo ||\n                first.name !== \"scope\") {\n                // Ignore\n            }\n            else if (isArrayContext &&\n                second.type === SelectorType.Descendant) {\n                rules[1] = FLEXIBLE_DESCENDANT_TOKEN;\n            }\n            else if (second.type === SelectorType.Adjacent ||\n                second.type === SelectorType.Sibling) {\n                shouldTestNextSiblings = true;\n            }\n        }\n        return compileRules(rules, options, finalContext);\n    })\n        .reduce(reduceRules, boolbase.falseFunc);\n    query.shouldTestNextSiblings = shouldTestNextSiblings;\n    return query;\n}\nfunction compileRules(rules, options, context) {\n    var _a;\n    return rules.reduce((previous, rule) => previous === boolbase.falseFunc\n        ? boolbase.falseFunc\n        : compileGeneralSelector(previous, rule, options, context, compileToken), (_a = options.rootFunc) !== null && _a !== void 0 ? _a : boolbase.trueFunc);\n}\nfunction reduceRules(a, b) {\n    if (b === boolbase.falseFunc || a === boolbase.trueFunc) {\n        return a;\n    }\n    if (a === boolbase.falseFunc || b === boolbase.trueFunc) {\n        return b;\n    }\n    return function combine(elem) {\n        return a(elem) || b(elem);\n    };\n}\n//# sourceMappingURL=compile.js.map","import * as DomUtils from \"domutils\";\nimport boolbase from \"boolbase\";\nimport { compile as compileRaw, compileUnsafe, compileToken, } from \"./compile.js\";\nimport { getNextSiblings } from \"./pseudo-selectors/subselects.js\";\nconst defaultEquals = (a, b) => a === b;\nconst defaultOptions = {\n    adapter: DomUtils,\n    equals: defaultEquals,\n};\nfunction convertOptionFormats(options) {\n    var _a, _b, _c, _d;\n    /*\n     * We force one format of options to the other one.\n     */\n    // @ts-expect-error Default options may have incompatible `Node` / `ElementNode`.\n    const opts = options !== null && options !== void 0 ? options : defaultOptions;\n    // @ts-expect-error Same as above.\n    (_a = opts.adapter) !== null && _a !== void 0 ? _a : (opts.adapter = DomUtils);\n    // @ts-expect-error `equals` does not exist on `Options`\n    (_b = opts.equals) !== null && _b !== void 0 ? _b : (opts.equals = (_d = (_c = opts.adapter) === null || _c === void 0 ? void 0 : _c.equals) !== null && _d !== void 0 ? _d : defaultEquals);\n    return opts;\n}\nfunction wrapCompile(func) {\n    return function addAdapter(selector, options, context) {\n        const opts = convertOptionFormats(options);\n        return func(selector, opts, context);\n    };\n}\n/**\n * Compiles the query, returns a function.\n */\nexport const compile = wrapCompile(compileRaw);\nexport const _compileUnsafe = wrapCompile(compileUnsafe);\nexport const _compileToken = wrapCompile(compileToken);\nfunction getSelectorFunc(searchFunc) {\n    return function select(query, elements, options) {\n        const opts = convertOptionFormats(options);\n        if (typeof query !== \"function\") {\n            query = compileUnsafe(query, opts, elements);\n        }\n        const filteredElements = prepareContext(elements, opts.adapter, query.shouldTestNextSiblings);\n        return searchFunc(query, filteredElements, opts);\n    };\n}\nexport function prepareContext(elems, adapter, shouldTestNextSiblings = false) {\n    /*\n     * Add siblings if the query requires them.\n     * See https://github.com/fb55/css-select/pull/43#issuecomment-225414692\n     */\n    if (shouldTestNextSiblings) {\n        elems = appendNextSiblings(elems, adapter);\n    }\n    return Array.isArray(elems)\n        ? adapter.removeSubsets(elems)\n        : adapter.getChildren(elems);\n}\nfunction appendNextSiblings(elem, adapter) {\n    // Order matters because jQuery seems to check the children before the siblings\n    const elems = Array.isArray(elem) ? elem.slice(0) : [elem];\n    const elemsLength = elems.length;\n    for (let i = 0; i < elemsLength; i++) {\n        const nextSiblings = getNextSiblings(elems[i], adapter);\n        elems.push(...nextSiblings);\n    }\n    return elems;\n}\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried..\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns All matching elements.\n *\n */\nexport const selectAll = getSelectorFunc((query, elems, options) => query === boolbase.falseFunc || !elems || elems.length === 0\n    ? []\n    : options.adapter.findAll(query, elems));\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried..\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns the first match, or null if there was no match.\n */\nexport const selectOne = getSelectorFunc((query, elems, options) => query === boolbase.falseFunc || !elems || elems.length === 0\n    ? null\n    : options.adapter.findOne(query, elems));\n/**\n * Tests whether or not an element is matched by query.\n *\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elem The element to test if it matches the query.\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns\n */\nexport function is(elem, query, options) {\n    const opts = convertOptionFormats(options);\n    return (typeof query === \"function\" ? query : compileRaw(query, opts))(elem);\n}\n/**\n * Alias for selectAll(query, elems, options).\n * @see [compile] for supported selector queries.\n */\nexport default selectAll;\n// Export filters, pseudos and aliases to allow users to supply their own.\n/** @deprecated Use the `pseudos` option instead. */\nexport { filters, pseudos, aliases } from \"./pseudo-selectors/index.js\";\n//# sourceMappingURL=index.js.map","export const filterNames = new Set([\n    \"first\",\n    \"last\",\n    \"eq\",\n    \"gt\",\n    \"nth\",\n    \"lt\",\n    \"even\",\n    \"odd\",\n]);\nexport function isFilter(s) {\n    if (s.type !== \"pseudo\")\n        return false;\n    if (filterNames.has(s.name))\n        return true;\n    if (s.name === \"not\" && Array.isArray(s.data)) {\n        // Only consider `:not` with embedded filters\n        return s.data.some((s) => s.some(isFilter));\n    }\n    return false;\n}\nexport function getLimit(filter, data, partLimit) {\n    const num = data != null ? parseInt(data, 10) : NaN;\n    switch (filter) {\n        case \"first\":\n            return 1;\n        case \"nth\":\n        case \"eq\":\n            return isFinite(num) ? (num >= 0 ? num + 1 : Infinity) : 0;\n        case \"lt\":\n            return isFinite(num)\n                ? num >= 0\n                    ? Math.min(num, partLimit)\n                    : Infinity\n                : 0;\n        case \"gt\":\n            return isFinite(num) ? Infinity : 0;\n        case \"odd\":\n            return 2 * partLimit;\n        case \"even\":\n            return 2 * partLimit - 1;\n        case \"last\":\n        case \"not\":\n            return Infinity;\n    }\n}\n//# sourceMappingURL=positionals.js.map","import { isFilter } from \"./positionals.js\";\nexport function getDocumentRoot(node) {\n    while (node.parent)\n        node = node.parent;\n    return node;\n}\nexport function groupSelectors(selectors) {\n    const filteredSelectors = [];\n    const plainSelectors = [];\n    for (const selector of selectors) {\n        if (selector.some(isFilter)) {\n            filteredSelectors.push(selector);\n        }\n        else {\n            plainSelectors.push(selector);\n        }\n    }\n    return [plainSelectors, filteredSelectors];\n}\n//# sourceMappingURL=helpers.js.map","import { parse, SelectorType, isTraversal } from \"css-what\";\nimport { _compileToken as compileToken, prepareContext, } from \"css-select\";\nimport * as DomUtils from \"domutils\";\nimport * as boolbase from \"boolbase\";\nimport { getDocumentRoot, groupSelectors } from \"./helpers.js\";\nimport { isFilter, getLimit, } from \"./positionals.js\";\n// Re-export pseudo extension points\nexport { filters, pseudos, aliases } from \"css-select\";\nconst UNIVERSAL_SELECTOR = {\n    type: SelectorType.Universal,\n    namespace: null,\n};\nconst SCOPE_PSEUDO = {\n    type: SelectorType.Pseudo,\n    name: \"scope\",\n    data: null,\n};\nexport function is(element, selector, options = {}) {\n    return some([element], selector, options);\n}\nexport function some(elements, selector, options = {}) {\n    if (typeof selector === \"function\")\n        return elements.some(selector);\n    const [plain, filtered] = groupSelectors(parse(selector));\n    return ((plain.length > 0 && elements.some(compileToken(plain, options))) ||\n        filtered.some((sel) => filterBySelector(sel, elements, options).length > 0));\n}\nfunction filterByPosition(filter, elems, data, options) {\n    const num = typeof data === \"string\" ? parseInt(data, 10) : NaN;\n    switch (filter) {\n        case \"first\":\n        case \"lt\":\n            // Already done in `getLimit`\n            return elems;\n        case \"last\":\n            return elems.length > 0 ? [elems[elems.length - 1]] : elems;\n        case \"nth\":\n        case \"eq\":\n            return isFinite(num) && Math.abs(num) < elems.length\n                ? [num < 0 ? elems[elems.length + num] : elems[num]]\n                : [];\n        case \"gt\":\n            return isFinite(num) ? elems.slice(num + 1) : [];\n        case \"even\":\n            return elems.filter((_, i) => i % 2 === 0);\n        case \"odd\":\n            return elems.filter((_, i) => i % 2 === 1);\n        case \"not\": {\n            const filtered = new Set(filterParsed(data, elems, options));\n            return elems.filter((e) => !filtered.has(e));\n        }\n    }\n}\nexport function filter(selector, elements, options = {}) {\n    return filterParsed(parse(selector), elements, options);\n}\n/**\n * Filter a set of elements by a selector.\n *\n * Will return elements in the original order.\n *\n * @param selector Selector to filter by.\n * @param elements Elements to filter.\n * @param options Options for selector.\n */\nfunction filterParsed(selector, elements, options) {\n    if (elements.length === 0)\n        return [];\n    const [plainSelectors, filteredSelectors] = groupSelectors(selector);\n    let found;\n    if (plainSelectors.length) {\n        const filtered = filterElements(elements, plainSelectors, options);\n        // If there are no filters, just return\n        if (filteredSelectors.length === 0) {\n            return filtered;\n        }\n        // Otherwise, we have to do some filtering\n        if (filtered.length) {\n            found = new Set(filtered);\n        }\n    }\n    for (let i = 0; i < filteredSelectors.length && (found === null || found === void 0 ? void 0 : found.size) !== elements.length; i++) {\n        const filteredSelector = filteredSelectors[i];\n        const missing = found\n            ? elements.filter((e) => DomUtils.isTag(e) && !found.has(e))\n            : elements;\n        if (missing.length === 0)\n            break;\n        const filtered = filterBySelector(filteredSelector, elements, options);\n        if (filtered.length) {\n            if (!found) {\n                /*\n                 * If we haven't found anything before the last selector,\n                 * just return what we found now.\n                 */\n                if (i === filteredSelectors.length - 1) {\n                    return filtered;\n                }\n                found = new Set(filtered);\n            }\n            else {\n                filtered.forEach((el) => found.add(el));\n            }\n        }\n    }\n    return typeof found !== \"undefined\"\n        ? (found.size === elements.length\n            ? elements\n            : // Filter elements to preserve order\n                elements.filter((el) => found.has(el)))\n        : [];\n}\nfunction filterBySelector(selector, elements, options) {\n    var _a;\n    if (selector.some(isTraversal)) {\n        /*\n         * Get root node, run selector with the scope\n         * set to all of our nodes.\n         */\n        const root = (_a = options.root) !== null && _a !== void 0 ? _a : getDocumentRoot(elements[0]);\n        const opts = { ...options, context: elements, relativeSelector: false };\n        selector.push(SCOPE_PSEUDO);\n        return findFilterElements(root, selector, opts, true, elements.length);\n    }\n    // Performance optimization: If we don't have to traverse, just filter set.\n    return findFilterElements(elements, selector, options, false, elements.length);\n}\nexport function select(selector, root, options = {}, limit = Infinity) {\n    if (typeof selector === \"function\") {\n        return find(root, selector);\n    }\n    const [plain, filtered] = groupSelectors(parse(selector));\n    const results = filtered.map((sel) => findFilterElements(root, sel, options, true, limit));\n    // Plain selectors can be queried in a single go\n    if (plain.length) {\n        results.push(findElements(root, plain, options, limit));\n    }\n    if (results.length === 0) {\n        return [];\n    }\n    // If there was only a single selector, just return the result\n    if (results.length === 1) {\n        return results[0];\n    }\n    // Sort results, filtering for duplicates\n    return DomUtils.uniqueSort(results.reduce((a, b) => [...a, ...b]));\n}\n/**\n *\n * @param root Element(s) to search from.\n * @param selector Selector to look for.\n * @param options Options for querying.\n * @param queryForSelector Query multiple levels deep for the initial selector, even if it doesn't contain a traversal.\n */\nfunction findFilterElements(root, selector, options, queryForSelector, totalLimit) {\n    const filterIndex = selector.findIndex(isFilter);\n    const sub = selector.slice(0, filterIndex);\n    const filter = selector[filterIndex];\n    // If we are at the end of the selector, we can limit the number of elements to retrieve.\n    const partLimit = selector.length - 1 === filterIndex ? totalLimit : Infinity;\n    /*\n     * Set the number of elements to retrieve.\n     * Eg. for :first, we only have to get a single element.\n     */\n    const limit = getLimit(filter.name, filter.data, partLimit);\n    if (limit === 0)\n        return [];\n    /*\n     * Skip `findElements` call if our selector starts with a positional\n     * pseudo.\n     */\n    const elemsNoLimit = sub.length === 0 && !Array.isArray(root)\n        ? DomUtils.getChildren(root).filter(DomUtils.isTag)\n        : sub.length === 0\n            ? (Array.isArray(root) ? root : [root]).filter(DomUtils.isTag)\n            : queryForSelector || sub.some(isTraversal)\n                ? findElements(root, [sub], options, limit)\n                : filterElements(root, [sub], options);\n    const elems = elemsNoLimit.slice(0, limit);\n    let result = filterByPosition(filter.name, elems, filter.data, options);\n    if (result.length === 0 || selector.length === filterIndex + 1) {\n        return result;\n    }\n    const remainingSelector = selector.slice(filterIndex + 1);\n    const remainingHasTraversal = remainingSelector.some(isTraversal);\n    if (remainingHasTraversal) {\n        if (isTraversal(remainingSelector[0])) {\n            const { type } = remainingSelector[0];\n            if (type === SelectorType.Sibling ||\n                type === SelectorType.Adjacent) {\n                // If we have a sibling traversal, we need to also look at the siblings.\n                result = prepareContext(result, DomUtils, true);\n            }\n            // Avoid a traversal-first selector error.\n            remainingSelector.unshift(UNIVERSAL_SELECTOR);\n        }\n        options = {\n            ...options,\n            // Avoid absolutizing the selector\n            relativeSelector: false,\n            /*\n             * Add a custom root func, to make sure traversals don't match elements\n             * that aren't a part of the considered tree.\n             */\n            rootFunc: (el) => result.includes(el),\n        };\n    }\n    else if (options.rootFunc && options.rootFunc !== boolbase.trueFunc) {\n        options = { ...options, rootFunc: boolbase.trueFunc };\n    }\n    /*\n     * If we have another filter, recursively call `findFilterElements`,\n     * with the `recursive` flag disabled. We only have to look for more\n     * elements when we see a traversal.\n     *\n     * Otherwise,\n     */\n    return remainingSelector.some(isFilter)\n        ? findFilterElements(result, remainingSelector, options, false, totalLimit)\n        : remainingHasTraversal\n            ? // Query existing elements to resolve traversal.\n                findElements(result, [remainingSelector], options, totalLimit)\n            : // If we don't have any more traversals, simply filter elements.\n                filterElements(result, [remainingSelector], options);\n}\nfunction findElements(root, sel, options, limit) {\n    const query = compileToken(sel, options, root);\n    return find(root, query, limit);\n}\nfunction find(root, query, limit = Infinity) {\n    const elems = prepareContext(root, DomUtils, query.shouldTestNextSiblings);\n    return DomUtils.find((node) => DomUtils.isTag(node) && query(node), elems, true, limit);\n}\nfunction filterElements(elements, sel, options) {\n    const els = (Array.isArray(elements) ? elements : [elements]).filter(DomUtils.isTag);\n    if (els.length === 0)\n        return els;\n    const query = compileToken(sel, options);\n    return query === boolbase.trueFunc ? els : els.filter(query);\n}\n//# sourceMappingURL=index.js.map","/**\n * Methods for traversing the DOM structure.\n *\n * @module cheerio/traversing\n */\nimport { hasChildren, isDocument, } from 'domhandler';\nimport * as select from 'cheerio-select';\nimport { domEach, isTag, isCheerio } from '../utils.js';\nimport { contains } from '../static.js';\nimport { getChildren, getSiblings, nextElementSibling, prevElementSibling, uniqueSort, } from 'domutils';\nconst reSiblingSelector = /^\\s*[~+]/;\n/**\n * Get the descendants of each element in the current set of matched elements,\n * filtered by a selector, jQuery object, or element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').find('li').length;\n * //=> 3\n * $('#fruits').find($('.apple')).length;\n * //=> 1\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The found elements.\n * @see {@link https://api.jquery.com/find/}\n */\nexport function find(selectorOrHaystack) {\n    var _a;\n    if (!selectorOrHaystack) {\n        return this._make([]);\n    }\n    const context = this.toArray();\n    if (typeof selectorOrHaystack !== 'string') {\n        const haystack = isCheerio(selectorOrHaystack)\n            ? selectorOrHaystack.toArray()\n            : [selectorOrHaystack];\n        return this._make(haystack.filter((elem) => context.some((node) => contains(node, elem))));\n    }\n    const elems = reSiblingSelector.test(selectorOrHaystack)\n        ? context\n        : this.children().toArray();\n    const options = {\n        context,\n        root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0],\n        // Pass options that are recognized by `cheerio-select`\n        xmlMode: this.options.xmlMode,\n        lowerCaseTags: this.options.lowerCaseTags,\n        lowerCaseAttributeNames: this.options.lowerCaseAttributeNames,\n        pseudos: this.options.pseudos,\n        quirksMode: this.options.quirksMode,\n    };\n    return this._make(select.select(selectorOrHaystack, elems, options));\n}\n/**\n * Creates a matcher, using a particular mapping function. Matchers provide a\n * function that finds elements using a generating function, supporting filtering.\n *\n * @private\n * @param matchMap - Mapping function.\n * @returns - Function for wrapping generating functions.\n */\nfunction _getMatcher(matchMap) {\n    return function (fn, ...postFns) {\n        return function (selector) {\n            var _a;\n            let matched = matchMap(fn, this);\n            if (selector) {\n                matched = filterArray(matched, selector, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]);\n            }\n            return this._make(\n            // Post processing is only necessary if there is more than one element.\n            this.length > 1 && matched.length > 1\n                ? postFns.reduce((elems, fn) => fn(elems), matched)\n                : matched);\n        };\n    };\n}\n/** Matcher that adds multiple elements for each entry in the input. */\nconst _matcher = _getMatcher((fn, elems) => {\n    const ret = [];\n    for (let i = 0; i < elems.length; i++) {\n        const value = fn(elems[i]);\n        ret.push(value);\n    }\n    return new Array().concat(...ret);\n});\n/** Matcher that adds at most one element for each entry in the input. */\nconst _singleMatcher = _getMatcher((fn, elems) => {\n    const ret = [];\n    for (let i = 0; i < elems.length; i++) {\n        const value = fn(elems[i]);\n        if (value !== null) {\n            ret.push(value);\n        }\n    }\n    return ret;\n});\n/**\n * Matcher that supports traversing until a condition is met.\n *\n * @returns A function usable for `*Until` methods.\n */\nfunction _matchUntil(nextElem, ...postFns) {\n    // We use a variable here that is used from within the matcher.\n    let matches = null;\n    const innerMatcher = _getMatcher((nextElem, elems) => {\n        const matched = [];\n        domEach(elems, (elem) => {\n            for (let next; (next = nextElem(elem)); elem = next) {\n                // FIXME: `matched` might contain duplicates here and the index is too large.\n                if (matches === null || matches === void 0 ? void 0 : matches(next, matched.length))\n                    break;\n                matched.push(next);\n            }\n        });\n        return matched;\n    })(nextElem, ...postFns);\n    return function (selector, filterSelector) {\n        // Override `matches` variable with the new target.\n        matches =\n            typeof selector === 'string'\n                ? (elem) => select.is(elem, selector, this.options)\n                : selector\n                    ? getFilterFn(selector)\n                    : null;\n        const ret = innerMatcher.call(this, filterSelector);\n        // Set `matches` to `null`, so we don't waste memory.\n        matches = null;\n        return ret;\n    };\n}\nfunction _removeDuplicates(elems) {\n    return Array.from(new Set(elems));\n}\n/**\n * Get the parent of each element in the current set of matched elements,\n * optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').parent().attr('id');\n * //=> fruits\n * ```\n *\n * @param selector - If specified filter for parent.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parent/}\n */\nexport const parent = _singleMatcher(({ parent }) => (parent && !isDocument(parent) ? parent : null), _removeDuplicates);\n/**\n * Get a set of parents filtered by `selector` of each element in the current\n * set of match elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parents().length;\n * //=> 2\n * $('.orange').parents('#fruits').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parents/}\n */\nexport const parents = _matcher((elem) => {\n    const matched = [];\n    while (elem.parent && !isDocument(elem.parent)) {\n        matched.push(elem.parent);\n        elem = elem.parent;\n    }\n    return matched;\n}, uniqueSort, (elems) => elems.reverse());\n/**\n * Get the ancestors of each element in the current set of matched elements, up\n * to but not including the element matched by the selector, DOM node, or cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parentsUntil('#food').length;\n * //=> 1\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - Optional filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parentsUntil/}\n */\nexport const parentsUntil = _matchUntil(({ parent }) => (parent && !isDocument(parent) ? parent : null), uniqueSort, (elems) => elems.reverse());\n/**\n * For each element in the set, get the first element that matches the selector\n * by testing the element itself and traversing up through its ancestors in the DOM tree.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').closest();\n * //=> []\n *\n * $('.orange').closest('.apple');\n * // => []\n *\n * $('.orange').closest('li');\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * $('.orange').closest('#fruits');\n * //=> [<ul id=\"fruits\"> ... </ul>]\n * ```\n *\n * @param selector - Selector for the element to find.\n * @returns The closest nodes.\n * @see {@link https://api.jquery.com/closest/}\n */\nexport function closest(selector) {\n    var _a;\n    const set = [];\n    if (!selector) {\n        return this._make(set);\n    }\n    const selectOpts = {\n        xmlMode: this.options.xmlMode,\n        root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0],\n    };\n    const selectFn = typeof selector === 'string'\n        ? (elem) => select.is(elem, selector, selectOpts)\n        : getFilterFn(selector);\n    domEach(this, (elem) => {\n        while (elem && isTag(elem)) {\n            if (selectFn(elem, 0)) {\n                // Do not add duplicate elements to the set\n                if (!set.includes(elem)) {\n                    set.push(elem);\n                }\n                break;\n            }\n            elem = elem.parent;\n        }\n    });\n    return this._make(set);\n}\n/**\n * Gets the next sibling of the first selected element, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').next().hasClass('orange');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for sibling.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/next/}\n */\nexport const next = _singleMatcher((elem) => nextElementSibling(elem));\n/**\n * Gets all the following siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"pear\">Pear</li>]\n * $('.apple').nextAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextAll/}\n */\nexport const nextAll = _matcher((elem) => {\n    const matched = [];\n    while (elem.next) {\n        elem = elem.next;\n        if (isTag(elem))\n            matched.push(elem);\n    }\n    return matched;\n}, _removeDuplicates);\n/**\n * Gets all the following siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextUntil('.pear');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextUntil/}\n */\nexport const nextUntil = _matchUntil((el) => nextElementSibling(el), _removeDuplicates);\n/**\n * Gets the previous sibling of the first selected element optionally filtered\n * by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').prev().hasClass('apple');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prev/}\n */\nexport const prev = _singleMatcher((elem) => prevElementSibling(elem));\n/**\n * Gets all the preceding siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"apple\">Apple</li>]\n *\n * $('.pear').prevAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevAll/}\n */\nexport const prevAll = _matcher((elem) => {\n    const matched = [];\n    while (elem.prev) {\n        elem = elem.prev;\n        if (isTag(elem))\n            matched.push(elem);\n    }\n    return matched;\n}, _removeDuplicates);\n/**\n * Gets all the preceding siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevUntil('.apple');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevUntil/}\n */\nexport const prevUntil = _matchUntil((el) => prevElementSibling(el), _removeDuplicates);\n/**\n * Get the siblings of each element (excluding the element) in the set of\n * matched elements, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').siblings().length;\n * //=> 2\n *\n * $('.pear').siblings('.orange').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The siblings.\n * @see {@link https://api.jquery.com/siblings/}\n */\nexport const siblings = _matcher((elem) => getSiblings(elem).filter((el) => isTag(el) && el !== elem), uniqueSort);\n/**\n * Gets the element children of each element in the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().length;\n * //=> 3\n *\n * $('#fruits').children('.pear').text();\n * //=> Pear\n * ```\n *\n * @param selector - If specified filter for children.\n * @returns The children.\n * @see {@link https://api.jquery.com/children/}\n */\nexport const children = _matcher((elem) => getChildren(elem).filter(isTag), _removeDuplicates);\n/**\n * Gets the children of each element in the set of matched elements, including\n * text and comment nodes.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').contents().length;\n * //=> 3\n * ```\n *\n * @returns The children.\n * @see {@link https://api.jquery.com/contents/}\n */\nexport function contents() {\n    const elems = this.toArray().reduce((newElems, elem) => hasChildren(elem) ? newElems.concat(elem.children) : newElems, []);\n    return this._make(elems);\n}\n/**\n * Iterates over a cheerio object, executing a function for each matched\n * element. When the callback is fired, the function is fired in the context of\n * the DOM element, so `this` refers to the current element, which is equivalent\n * to the function parameter `element`. To break out of the `each` loop early,\n * return with `false`.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * const fruits = [];\n *\n * $('li').each(function (i, elem) {\n *   fruits[i] = $(this).text();\n * });\n *\n * fruits.join(', ');\n * //=> Apple, Orange, Pear\n * ```\n *\n * @param fn - Function to execute.\n * @returns The instance itself, useful for chaining.\n * @see {@link https://api.jquery.com/each/}\n */\nexport function each(fn) {\n    let i = 0;\n    const len = this.length;\n    while (i < len && fn.call(this[i], i, this[i]) !== false)\n        ++i;\n    return this;\n}\n/**\n * Pass each element in the current matched set through a function, producing a\n * new Cheerio object containing the return values. The function can return an\n * individual data item or an array of data items to be inserted into the\n * resulting set. If an array is returned, the elements inside the array are\n * inserted into the set. If the function returns null or undefined, no element\n * will be inserted.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li')\n *   .map(function (i, el) {\n *     // this === el\n *     return $(this).text();\n *   })\n *   .toArray()\n *   .join(' ');\n * //=> \"apple orange pear\"\n * ```\n *\n * @param fn - Function to execute.\n * @returns The mapped elements, wrapped in a Cheerio collection.\n * @see {@link https://api.jquery.com/map/}\n */\nexport function map(fn) {\n    let elems = [];\n    for (let i = 0; i < this.length; i++) {\n        const el = this[i];\n        const val = fn.call(el, i, el);\n        if (val != null) {\n            elems = elems.concat(val);\n        }\n    }\n    return this._make(elems);\n}\n/**\n * Creates a function to test if a filter is matched.\n *\n * @param match - A filter.\n * @returns A function that determines if a filter has been matched.\n */\nfunction getFilterFn(match) {\n    if (typeof match === 'function') {\n        return (el, i) => match.call(el, i, el);\n    }\n    if (isCheerio(match)) {\n        return (el) => Array.prototype.includes.call(match, el);\n    }\n    return function (el) {\n        return match === el;\n    };\n}\nexport function filter(match) {\n    var _a;\n    return this._make(filterArray(this.toArray(), match, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]));\n}\nexport function filterArray(nodes, match, xmlMode, root) {\n    return typeof match === 'string'\n        ? select.filter(match, nodes, { xmlMode, root })\n        : nodes.filter(getFilterFn(match));\n}\n/**\n * Checks the current list of elements and returns `true` if _any_ of the\n * elements match the selector. If using an element or Cheerio selection,\n * returns `true` if _any_ of the elements match. If using a predicate function,\n * the function is executed in the context of the selected element, so `this`\n * refers to the current element.\n *\n * @category Attributes\n * @param selector - Selector for the selection.\n * @returns Whether or not the selector matches an element of the instance.\n * @see {@link https://api.jquery.com/is/}\n */\nexport function is(selector) {\n    const nodes = this.toArray();\n    return typeof selector === 'string'\n        ? select.some(nodes.filter(isTag), selector, this.options)\n        : selector\n            ? nodes.some(getFilterFn(selector))\n            : false;\n}\n/**\n * Remove elements from the set of matched elements. Given a Cheerio object that\n * represents a set of DOM elements, the `.not()` method constructs a new\n * Cheerio object from a subset of the matching elements. The supplied selector\n * is tested against each element; the elements that don't match the selector\n * will be included in the result.\n *\n * The `.not()` method can take a function as its argument in the same way that\n * `.filter()` does. Elements for which the function returns `true` are excluded\n * from the filtered set; all other elements are included.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('li').not('.apple').length;\n * //=> 2\n * ```\n *\n * @example <caption>Function</caption>\n *\n * ```js\n * $('li').not(function (i, el) {\n *   // this === el\n *   return $(this).attr('class') === 'orange';\n * }).length; //=> 2\n * ```\n *\n * @param match - Value to look for, following the rules above.\n * @param container - Optional node to filter instead.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/not/}\n */\nexport function not(match) {\n    let nodes = this.toArray();\n    if (typeof match === 'string') {\n        const matches = new Set(select.filter(match, nodes, this.options));\n        nodes = nodes.filter((el) => !matches.has(el));\n    }\n    else {\n        const filterFn = getFilterFn(match);\n        nodes = nodes.filter((el, i) => !filterFn(el, i));\n    }\n    return this._make(nodes);\n}\n/**\n * Filters the set of matched elements to only those which have the given DOM\n * element as a descendant or which have a descendant that matches the given\n * selector. Equivalent to `.filter(':has(selector)')`.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('ul').has('.pear').attr('id');\n * //=> fruits\n * ```\n *\n * @example <caption>Element</caption>\n *\n * ```js\n * $('ul').has($('.pear')[0]).attr('id');\n * //=> fruits\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/has/}\n */\nexport function has(selectorOrHaystack) {\n    return this.filter(typeof selectorOrHaystack === 'string'\n        ? // Using the `:has` selector here short-circuits searches.\n            `:has(${selectorOrHaystack})`\n        : (_, el) => this._make(el).find(selectorOrHaystack).length > 0);\n}\n/**\n * Will select the first element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().first().text();\n * //=> Apple\n * ```\n *\n * @returns The first element.\n * @see {@link https://api.jquery.com/first/}\n */\nexport function first() {\n    return this.length > 1 ? this._make(this[0]) : this;\n}\n/**\n * Will select the last element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().last().text();\n * //=> Pear\n * ```\n *\n * @returns The last element.\n * @see {@link https://api.jquery.com/last/}\n */\nexport function last() {\n    return this.length > 0 ? this._make(this[this.length - 1]) : this;\n}\n/**\n * Reduce the set of matched elements to the one at the specified index. Use\n * `.eq(-i)` to count backwards from the last selected element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).text();\n * //=> Apple\n *\n * $('li').eq(-1).text();\n * //=> Pear\n * ```\n *\n * @param i - Index of the element to select.\n * @returns The element at the `i`th position.\n * @see {@link https://api.jquery.com/eq/}\n */\nexport function eq(i) {\n    var _a;\n    i = +i;\n    // Use the first identity optimization if possible\n    if (i === 0 && this.length <= 1)\n        return this;\n    if (i < 0)\n        i = this.length + i;\n    return this._make((_a = this[i]) !== null && _a !== void 0 ? _a : []);\n}\nexport function get(i) {\n    if (i == null) {\n        return this.toArray();\n    }\n    return this[i < 0 ? this.length + i : i];\n}\n/**\n * Retrieve all the DOM elements contained in the jQuery set as an array.\n *\n * @example\n *\n * ```js\n * $('li').toArray();\n * //=> [ {...}, {...}, {...} ]\n * ```\n *\n * @returns The contained items.\n */\nexport function toArray() {\n    return Array.prototype.slice.call(this);\n}\n/**\n * Search for a given element from among the matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').index();\n * //=> 2 $('.orange').index('li');\n * //=> 1\n * $('.apple').index($('#fruit, li'));\n * //=> 1\n * ```\n *\n * @param selectorOrNeedle - Element to look for.\n * @returns The index of the element.\n * @see {@link https://api.jquery.com/index/}\n */\nexport function index(selectorOrNeedle) {\n    let $haystack;\n    let needle;\n    if (selectorOrNeedle == null) {\n        $haystack = this.parent().children();\n        needle = this[0];\n    }\n    else if (typeof selectorOrNeedle === 'string') {\n        $haystack = this._make(selectorOrNeedle);\n        needle = this[0];\n    }\n    else {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        $haystack = this;\n        needle = isCheerio(selectorOrNeedle)\n            ? selectorOrNeedle[0]\n            : selectorOrNeedle;\n    }\n    return Array.prototype.indexOf.call($haystack, needle);\n}\n/**\n * Gets the elements matching the specified range (0-based position).\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').slice(1).eq(0).text();\n * //=> 'Orange'\n *\n * $('li').slice(1, 2).length;\n * //=> 1\n * ```\n *\n * @param start - A position at which the elements begin to be selected. If\n *   negative, it indicates an offset from the end of the set.\n * @param end - A position at which the elements stop being selected. If\n *   negative, it indicates an offset from the end of the set. If omitted, the\n *   range continues until the end of the set.\n * @returns The elements matching the specified range.\n * @see {@link https://api.jquery.com/slice/}\n */\nexport function slice(start, end) {\n    return this._make(Array.prototype.slice.call(this, start, end));\n}\n/**\n * End the most recent filtering operation in the current chain and return the\n * set of matched elements to its previous state.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).end().length;\n * //=> 3\n * ```\n *\n * @returns The previous state of the set of matched elements.\n * @see {@link https://api.jquery.com/end/}\n */\nexport function end() {\n    var _a;\n    return (_a = this.prevObject) !== null && _a !== void 0 ? _a : this._make([]);\n}\n/**\n * Add elements to the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').add('.orange').length;\n * //=> 2\n * ```\n *\n * @param other - Elements to add.\n * @param context - Optionally the context of the new selection.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/add/}\n */\nexport function add(other, context) {\n    const selection = this._make(other, context);\n    const contents = uniqueSort([...this.get(), ...selection.get()]);\n    return this._make(contents);\n}\n/**\n * Add the previous set of elements on the stack to the current set, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).addBack('.orange').length;\n * //=> 2\n * ```\n *\n * @param selector - Selector for the elements to add.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/addBack/}\n */\nexport function addBack(selector) {\n    return this.prevObject\n        ? this.add(selector ? this.prevObject.filter(selector) : this.prevObject)\n        : this;\n}\n//# sourceMappingURL=traversing.js.map","import { removeElement } from 'domutils';\nimport { Document, isDocument as checkIsDocument, } from 'domhandler';\n/**\n * Get the parse function with options.\n *\n * @param parser - The parser function.\n * @returns The parse function with options.\n */\nexport function getParse(parser) {\n    /**\n     * Parse a HTML string or a node.\n     *\n     * @param content - The HTML string or node.\n     * @param options - The parser options.\n     * @param isDocument - If `content` is a document.\n     * @param context - The context node in the DOM tree.\n     * @returns The parsed document node.\n     */\n    return function parse(content, options, isDocument, context) {\n        if (typeof Buffer !== 'undefined' && Buffer.isBuffer(content)) {\n            content = content.toString();\n        }\n        if (typeof content === 'string') {\n            return parser(content, options, isDocument, context);\n        }\n        const doc = content;\n        if (!Array.isArray(doc) && checkIsDocument(doc)) {\n            // If `doc` is already a root, just return it\n            return doc;\n        }\n        // Add conent to new root element\n        const root = new Document([]);\n        // Update the DOM using the root\n        update(doc, root);\n        return root;\n    };\n}\n/**\n * Update the dom structure, for one changed layer.\n *\n * @param newChilds - The new children.\n * @param parent - The new parent.\n * @returns The parent node.\n */\nexport function update(newChilds, parent) {\n    // Normalize\n    const arr = Array.isArray(newChilds) ? newChilds : [newChilds];\n    // Update parent\n    if (parent) {\n        parent.children = arr;\n    }\n    else {\n        parent = null;\n    }\n    // Update neighbors\n    for (let i = 0; i < arr.length; i++) {\n        const node = arr[i];\n        // Cleanly remove existing nodes from their previous structures.\n        if (node.parent && node.parent.children !== arr) {\n            removeElement(node);\n        }\n        if (parent) {\n            node.prev = arr[i - 1] || null;\n            node.next = arr[i + 1] || null;\n        }\n        else {\n            node.prev = node.next = null;\n        }\n        node.parent = parent;\n    }\n    return parent;\n}\n//# sourceMappingURL=parse.js.map","/**\n * Methods for modifying the DOM structure.\n *\n * @module cheerio/manipulation\n */\nimport { Text, hasChildren } from 'domhandler';\nimport { update as updateDOM } from '../parse.js';\nimport { text as staticText } from '../static.js';\nimport { domEach, cloneDom, isTag, isHtml, isCheerio } from '../utils.js';\nimport { removeElement } from 'domutils';\n/**\n * Create an array of nodes, recursing into arrays and parsing strings if necessary.\n *\n * @private\n * @category Manipulation\n * @param elem - Elements to make an array of.\n * @param clone - Optionally clone nodes.\n * @returns The array of nodes.\n */\nexport function _makeDomArray(elem, clone) {\n    if (elem == null) {\n        return [];\n    }\n    if (isCheerio(elem)) {\n        return clone ? cloneDom(elem.get()) : elem.get();\n    }\n    if (Array.isArray(elem)) {\n        return elem.reduce((newElems, el) => newElems.concat(this._makeDomArray(el, clone)), []);\n    }\n    if (typeof elem === 'string') {\n        return this._parse(elem, this.options, false, null).children;\n    }\n    return clone ? cloneDom([elem]) : [elem];\n}\nfunction _insert(concatenator) {\n    return function (...elems) {\n        const lastIdx = this.length - 1;\n        return domEach(this, (el, i) => {\n            if (!hasChildren(el))\n                return;\n            const domSrc = typeof elems[0] === 'function'\n                ? elems[0].call(el, i, this._render(el.children))\n                : elems;\n            const dom = this._makeDomArray(domSrc, i < lastIdx);\n            concatenator(dom, el.children, el);\n        });\n    };\n}\n/**\n * Modify an array in-place, removing some number of elements and adding new\n * elements directly following them.\n *\n * @private\n * @category Manipulation\n * @param array - Target array to splice.\n * @param spliceIdx - Index at which to begin changing the array.\n * @param spliceCount - Number of elements to remove from the array.\n * @param newElems - Elements to insert into the array.\n * @param parent - The parent of the node.\n * @returns The spliced array.\n */\nfunction uniqueSplice(array, spliceIdx, spliceCount, newElems, parent) {\n    var _a, _b;\n    const spliceArgs = [\n        spliceIdx,\n        spliceCount,\n        ...newElems,\n    ];\n    const prev = spliceIdx === 0 ? null : array[spliceIdx - 1];\n    const next = spliceIdx + spliceCount >= array.length\n        ? null\n        : array[spliceIdx + spliceCount];\n    /*\n     * Before splicing in new elements, ensure they do not already appear in the\n     * current array.\n     */\n    for (let idx = 0; idx < newElems.length; ++idx) {\n        const node = newElems[idx];\n        const oldParent = node.parent;\n        if (oldParent) {\n            const oldSiblings = oldParent.children;\n            const prevIdx = oldSiblings.indexOf(node);\n            if (prevIdx > -1) {\n                oldParent.children.splice(prevIdx, 1);\n                if (parent === oldParent && spliceIdx > prevIdx) {\n                    spliceArgs[0]--;\n                }\n            }\n        }\n        node.parent = parent;\n        if (node.prev) {\n            node.prev.next = (_a = node.next) !== null && _a !== void 0 ? _a : null;\n        }\n        if (node.next) {\n            node.next.prev = (_b = node.prev) !== null && _b !== void 0 ? _b : null;\n        }\n        node.prev = idx === 0 ? prev : newElems[idx - 1];\n        node.next = idx === newElems.length - 1 ? next : newElems[idx + 1];\n    }\n    if (prev) {\n        prev.next = newElems[0];\n    }\n    if (next) {\n        next.prev = newElems[newElems.length - 1];\n    }\n    return array.splice(...spliceArgs);\n}\n/**\n * Insert every element in the set of matched elements to the end of the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').appendTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to append elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/appendTo/}\n */\nexport function appendTo(target) {\n    const appendTarget = isCheerio(target) ? target : this._make(target);\n    appendTarget.append(this);\n    return this;\n}\n/**\n * Insert every element in the set of matched elements to the beginning of the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').prependTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to prepend elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/prependTo/}\n */\nexport function prependTo(target) {\n    const prependTarget = isCheerio(target) ? target : this._make(target);\n    prependTarget.prepend(this);\n    return this;\n}\n/**\n * Inserts content as the _last_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').append('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/append/}\n */\nexport const append = _insert((dom, children, parent) => {\n    uniqueSplice(children, children.length, 0, dom, parent);\n});\n/**\n * Inserts content as the _first_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').prepend('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/prepend/}\n */\nexport const prepend = _insert((dom, children, parent) => {\n    uniqueSplice(children, 0, 0, dom, parent);\n});\nfunction _wrap(insert) {\n    return function (wrapper) {\n        const lastIdx = this.length - 1;\n        const lastParent = this.parents().last();\n        for (let i = 0; i < this.length; i++) {\n            const el = this[i];\n            const wrap = typeof wrapper === 'function'\n                ? wrapper.call(el, i, el)\n                : typeof wrapper === 'string' && !isHtml(wrapper)\n                    ? lastParent.find(wrapper).clone()\n                    : wrapper;\n            const [wrapperDom] = this._makeDomArray(wrap, i < lastIdx);\n            if (!wrapperDom || !hasChildren(wrapperDom))\n                continue;\n            let elInsertLocation = wrapperDom;\n            /*\n             * Find the deepest child. Only consider the first tag child of each node\n             * (ignore text); stop if no children are found.\n             */\n            let j = 0;\n            while (j < elInsertLocation.children.length) {\n                const child = elInsertLocation.children[j];\n                if (isTag(child)) {\n                    elInsertLocation = child;\n                    j = 0;\n                }\n                else {\n                    j++;\n                }\n            }\n            insert(el, elInsertLocation, [wrapperDom]);\n        }\n        return this;\n    };\n}\n/**\n * The .wrap() function can take any string or object that could be passed to\n * the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. A\n * copy of this structure will be wrapped around each of the elements in the set\n * of matched elements. This method returns the original set of elements for\n * chaining purposes.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrap(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"red-fruit\">\n * //      <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrap(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"healthy\">\n * //       <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //       <li class=\"orange\">Orange</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //        <li class=\"plum\">Plum</li>\n * //     </div>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around each element in the selection.\n * @see {@link https://api.jquery.com/wrap/}\n */\nexport const wrap = _wrap((el, elInsertLocation, wrapperDom) => {\n    const { parent } = el;\n    if (!parent)\n        return;\n    const siblings = parent.children;\n    const index = siblings.indexOf(el);\n    updateDOM([el], elInsertLocation);\n    /*\n     * The previous operation removed the current element from the `siblings`\n     * array, so the `dom` array can be inserted without removing any\n     * additional elements.\n     */\n    uniqueSplice(siblings, index, 0, wrapperDom, parent);\n});\n/**\n * The .wrapInner() function can take any string or object that could be passed\n * to the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around the content of each of the elements in the\n * set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrapInner(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"red-fruit\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"pear\">Pear</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrapInner(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"healthy\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">\n * //       <div class=\"healthy\">Orange</div>\n * //     </li>\n * //     <li class=\"pear\">\n * //       <div class=\"healthy\">Pear</div>\n * //     </li>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around the content of each element\n *   in the selection.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/wrapInner/}\n */\nexport const wrapInner = _wrap((el, elInsertLocation, wrapperDom) => {\n    if (!hasChildren(el))\n        return;\n    updateDOM(el.children, elInsertLocation);\n    updateDOM(wrapperDom, el);\n});\n/**\n * The .unwrap() function, removes the parents of the set of matched elements\n * from the DOM, leaving the matched elements in their place.\n *\n * @category Manipulation\n * @example <caption>without selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <div><p>Hello</p></div>\\n  <div><p>World</p></div>\\n</div>'\n * );\n * $('#test p').unwrap();\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @example <caption>with selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <p>Hello</p>\\n  <b><p>World</p></b>\\n</div>'\n * );\n * $('#test p').unwrap('b');\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @param selector - A selector to check the parent element against. If an\n *   element's parent does not match the selector, the element won't be unwrapped.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/unwrap/}\n */\nexport function unwrap(selector) {\n    this.parent(selector)\n        .not('body')\n        .each((_, el) => {\n        this._make(el).replaceWith(el.children);\n    });\n    return this;\n}\n/**\n * The .wrapAll() function can take any string or object that could be passed to\n * the $() function to specify a DOM structure. This structure may be nested\n * several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around all of the elements in the set of matched\n * elements, as a single group.\n *\n * @category Manipulation\n * @example <caption>With markup passed to `wrapAll`</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div class=\"container\"><div class=\"inner\">First</div><div class=\"inner\">Second</div></div>'\n * );\n * $('.inner').wrapAll(\"<div class='new'></div>\");\n *\n * //=> <div class=\"container\">\n * //     <div class='new'>\n * //       <div class=\"inner\">First</div>\n * //       <div class=\"inner\">Second</div>\n * //     </div>\n * //   </div>\n * ```\n *\n * @example <caption>With an existing cheerio instance</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<span>Span 1</span><strong>Strong</strong><span>Span 2</span>'\n * );\n * const wrap = $('<div><p><em><b></b></em></p></div>');\n * $('span').wrapAll(wrap);\n *\n * //=> <div>\n * //     <p>\n * //       <em>\n * //         <b>\n * //           <span>Span 1</span>\n * //           <span>Span 2</span>\n * //         </b>\n * //       </em>\n * //     </p>\n * //   </div>\n * //   <strong>Strong</strong>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around all matched elements in the\n *   selection.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/wrapAll/}\n */\nexport function wrapAll(wrapper) {\n    const el = this[0];\n    if (el) {\n        const wrap = this._make(typeof wrapper === 'function' ? wrapper.call(el, 0, el) : wrapper).insertBefore(el);\n        // If html is given as wrapper, wrap may contain text elements\n        let elInsertLocation;\n        for (let i = 0; i < wrap.length; i++) {\n            if (wrap[i].type === 'tag')\n                elInsertLocation = wrap[i];\n        }\n        let j = 0;\n        /*\n         * Find the deepest child. Only consider the first tag child of each node\n         * (ignore text); stop if no children are found.\n         */\n        while (elInsertLocation && j < elInsertLocation.children.length) {\n            const child = elInsertLocation.children[j];\n            if (child.type === 'tag') {\n                elInsertLocation = child;\n                j = 0;\n            }\n            else {\n                j++;\n            }\n        }\n        if (elInsertLocation)\n            this._make(elInsertLocation).append(this);\n    }\n    return this;\n}\n/* eslint-disable jsdoc/check-param-names*/\n/**\n * Insert content next to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').after('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param content - HTML string, DOM element, array of DOM elements or Cheerio\n *   to insert after each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/after/}\n */\nexport function after(...elems) {\n    const lastIdx = this.length - 1;\n    return domEach(this, (el, i) => {\n        const { parent } = el;\n        if (!hasChildren(el) || !parent) {\n            return;\n        }\n        const siblings = parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index < 0)\n            return;\n        const domSrc = typeof elems[0] === 'function'\n            ? elems[0].call(el, i, this._render(el.children))\n            : elems;\n        const dom = this._makeDomArray(domSrc, i < lastIdx);\n        // Add element after `this` element\n        uniqueSplice(siblings, index + 1, 0, dom, parent);\n    });\n}\n/* eslint-enable jsdoc/check-param-names*/\n/**\n * Insert every element in the set of matched elements after the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertAfter('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements after.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertAfter/}\n */\nexport function insertAfter(target) {\n    if (typeof target === 'string') {\n        target = this._make(target);\n    }\n    this.remove();\n    const clones = [];\n    this._makeDomArray(target).forEach((el) => {\n        const clonedSelf = this.clone().toArray();\n        const { parent } = el;\n        if (!parent) {\n            return;\n        }\n        const siblings = parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index < 0)\n            return;\n        // Add cloned `this` element(s) after target element\n        uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);\n        clones.push(...clonedSelf);\n    });\n    return this._make(clones);\n}\n/* eslint-disable jsdoc/check-param-names*/\n/**\n * Insert content previous to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').before('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param content - HTML string, DOM element, array of DOM elements or Cheerio\n *   to insert before each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/before/}\n */\nexport function before(...elems) {\n    const lastIdx = this.length - 1;\n    return domEach(this, (el, i) => {\n        const { parent } = el;\n        if (!hasChildren(el) || !parent) {\n            return;\n        }\n        const siblings = parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index < 0)\n            return;\n        const domSrc = typeof elems[0] === 'function'\n            ? elems[0].call(el, i, this._render(el.children))\n            : elems;\n        const dom = this._makeDomArray(domSrc, i < lastIdx);\n        // Add element before `el` element\n        uniqueSplice(siblings, index, 0, dom, parent);\n    });\n}\n/* eslint-enable jsdoc/check-param-names*/\n/**\n * Insert every element in the set of matched elements before the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertBefore('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements before.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertBefore/}\n */\nexport function insertBefore(target) {\n    const targetArr = this._make(target);\n    this.remove();\n    const clones = [];\n    domEach(targetArr, (el) => {\n        const clonedSelf = this.clone().toArray();\n        const { parent } = el;\n        if (!parent) {\n            return;\n        }\n        const siblings = parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index < 0)\n            return;\n        // Add cloned `this` element(s) after target element\n        uniqueSplice(siblings, index, 0, clonedSelf, parent);\n        clones.push(...clonedSelf);\n    });\n    return this._make(clones);\n}\n/**\n * Removes the set of matched elements from the DOM and all their children.\n * `selector` filters the set of matched elements to be removed.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.pear').remove();\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //    </ul>\n * ```\n *\n * @param selector - Optional selector for elements to remove.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/remove/}\n */\nexport function remove(selector) {\n    // Filter if we have selector\n    const elems = selector ? this.filter(selector) : this;\n    domEach(elems, (el) => {\n        removeElement(el);\n        el.prev = el.next = el.parent = null;\n    });\n    return this;\n}\n/**\n * Replaces matched elements with `content`.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const plum = $('<li class=\"plum\">Plum</li>');\n * $('.pear').replaceWith(plum);\n * $.html();\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">Apple</li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n * ```\n *\n * @param content - Replacement for matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/replaceWith/}\n */\nexport function replaceWith(content) {\n    return domEach(this, (el, i) => {\n        const { parent } = el;\n        if (!parent) {\n            return;\n        }\n        const siblings = parent.children;\n        const cont = typeof content === 'function' ? content.call(el, i, el) : content;\n        const dom = this._makeDomArray(cont);\n        /*\n         * In the case that `dom` contains nodes that already exist in other\n         * structures, ensure those nodes are properly removed.\n         */\n        updateDOM(dom, null);\n        const index = siblings.indexOf(el);\n        // Completely remove old element\n        uniqueSplice(siblings, index, 1, dom, parent);\n        if (!dom.includes(el)) {\n            el.parent = el.prev = el.next = null;\n        }\n    });\n}\n/**\n * Empties an element, removing all its children.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').empty();\n * $.html();\n * //=>  <ul id=\"fruits\"></ul>\n * ```\n *\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/empty/}\n */\nexport function empty() {\n    return domEach(this, (el) => {\n        if (!hasChildren(el))\n            return;\n        el.children.forEach((child) => {\n            child.next = child.prev = child.parent = null;\n        });\n        el.children.length = 0;\n    });\n}\nexport function html(str) {\n    if (str === undefined) {\n        const el = this[0];\n        if (!el || !hasChildren(el))\n            return null;\n        return this._render(el.children);\n    }\n    return domEach(this, (el) => {\n        if (!hasChildren(el))\n            return;\n        el.children.forEach((child) => {\n            child.next = child.prev = child.parent = null;\n        });\n        const content = isCheerio(str)\n            ? str.toArray()\n            : this._parse(`${str}`, this.options, false, el).children;\n        updateDOM(content, el);\n    });\n}\n/**\n * Turns the collection to a string. Alias for `.html()`.\n *\n * @category Manipulation\n * @returns The rendered document.\n */\nexport function toString() {\n    return this._render(this);\n}\nexport function text(str) {\n    // If `str` is undefined, act as a \"getter\"\n    if (str === undefined) {\n        return staticText(this);\n    }\n    if (typeof str === 'function') {\n        // Function support\n        return domEach(this, (el, i) => this._make(el).text(str.call(el, i, staticText([el]))));\n    }\n    // Append text node to each selected elements\n    return domEach(this, (el) => {\n        if (!hasChildren(el))\n            return;\n        el.children.forEach((child) => {\n            child.next = child.prev = child.parent = null;\n        });\n        const textNode = new Text(`${str}`);\n        updateDOM(textNode, el);\n    });\n}\n/**\n * Clone the cheerio object.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const moreFruit = $('#fruits').clone();\n * ```\n *\n * @returns The cloned object.\n * @see {@link https://api.jquery.com/clone/}\n */\nexport function clone() {\n    return this._make(cloneDom(this.get()));\n}\n//# sourceMappingURL=manipulation.js.map","import { domEach, isTag } from '../utils.js';\n/**\n * Set multiple CSS properties for every matched element.\n *\n * @category CSS\n * @param prop - The names of the properties.\n * @param val - The new values.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/css/}\n */\nexport function css(prop, val) {\n    if ((prop != null && val != null) ||\n        // When `prop` is a \"plain\" object\n        (typeof prop === 'object' && !Array.isArray(prop))) {\n        return domEach(this, (el, i) => {\n            if (isTag(el)) {\n                // `prop` can't be an array here anymore.\n                setCss(el, prop, val, i);\n            }\n        });\n    }\n    if (this.length === 0) {\n        return undefined;\n    }\n    return getCss(this[0], prop);\n}\n/**\n * Set styles of all elements.\n *\n * @private\n * @param el - Element to set style of.\n * @param prop - Name of property.\n * @param value - Value to set property to.\n * @param idx - Optional index within the selection.\n */\nfunction setCss(el, prop, value, idx) {\n    if (typeof prop === 'string') {\n        const styles = getCss(el);\n        const val = typeof value === 'function' ? value.call(el, idx, styles[prop]) : value;\n        if (val === '') {\n            delete styles[prop];\n        }\n        else if (val != null) {\n            styles[prop] = val;\n        }\n        el.attribs['style'] = stringify(styles);\n    }\n    else if (typeof prop === 'object') {\n        Object.keys(prop).forEach((k, i) => {\n            setCss(el, k, prop[k], i);\n        });\n    }\n}\nfunction getCss(el, prop) {\n    if (!el || !isTag(el))\n        return;\n    const styles = parse(el.attribs['style']);\n    if (typeof prop === 'string') {\n        return styles[prop];\n    }\n    if (Array.isArray(prop)) {\n        const newStyles = {};\n        prop.forEach((item) => {\n            if (styles[item] != null) {\n                newStyles[item] = styles[item];\n            }\n        });\n        return newStyles;\n    }\n    return styles;\n}\n/**\n * Stringify `obj` to styles.\n *\n * @private\n * @category CSS\n * @param obj - Object to stringify.\n * @returns The serialized styles.\n */\nfunction stringify(obj) {\n    return Object.keys(obj).reduce((str, prop) => `${str}${str ? ' ' : ''}${prop}: ${obj[prop]};`, '');\n}\n/**\n * Parse `styles`.\n *\n * @private\n * @category CSS\n * @param styles - Styles to be parsed.\n * @returns The parsed styles.\n */\nfunction parse(styles) {\n    styles = (styles || '').trim();\n    if (!styles)\n        return {};\n    const obj = {};\n    let key;\n    for (const str of styles.split(';')) {\n        const n = str.indexOf(':');\n        // If there is no :, or if it is the first/last character, add to the previous item's value\n        if (n < 1 || n === str.length - 1) {\n            const trimmed = str.trimEnd();\n            if (trimmed.length > 0 && key !== undefined) {\n                obj[key] += `;${trimmed}`;\n            }\n        }\n        else {\n            key = str.slice(0, n).trim();\n            obj[key] = str.slice(n + 1).trim();\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=css.js.map","import { isTag } from '../utils.js';\n/*\n * https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js\n * https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js\n */\nconst submittableSelector = 'input,select,textarea,keygen';\nconst r20 = /%20/g;\nconst rCRLF = /\\r?\\n/g;\n/**\n * Encode a set of form elements as a string for submission.\n *\n * @category Forms\n * @example\n *\n * ```js\n * $('<form><input name=\"foo\" value=\"bar\" /></form>').serialize();\n * //=> 'foo=bar'\n * ```\n *\n * @returns The serialized form.\n * @see {@link https://api.jquery.com/serialize/}\n */\nexport function serialize() {\n    // Convert form elements into name/value objects\n    const arr = this.serializeArray();\n    // Serialize each element into a key/value string\n    const retArr = arr.map((data) => `${encodeURIComponent(data.name)}=${encodeURIComponent(data.value)}`);\n    // Return the resulting serialization\n    return retArr.join('&').replace(r20, '+');\n}\n/**\n * Encode a set of form elements as an array of names and values.\n *\n * @category Forms\n * @example\n *\n * ```js\n * $('<form><input name=\"foo\" value=\"bar\" /></form>').serializeArray();\n * //=> [ { name: 'foo', value: 'bar' } ]\n * ```\n *\n * @returns The serialized form.\n * @see {@link https://api.jquery.com/serializeArray/}\n */\nexport function serializeArray() {\n    // Resolve all form elements from either forms or collections of form elements\n    return this.map((_, elem) => {\n        const $elem = this._make(elem);\n        if (isTag(elem) && elem.name === 'form') {\n            return $elem.find(submittableSelector).toArray();\n        }\n        return $elem.filter(submittableSelector).toArray();\n    })\n        .filter(\n    // Verify elements have a name (`attr.name`) and are not disabled (`:enabled`)\n    '[name!=\"\"]:enabled' +\n        // And cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)\n        ':not(:submit, :button, :image, :reset, :file)' +\n        // And are either checked/don't have a checkable state\n        ':matches([checked], :not(:checkbox, :radio))'\n    // Convert each of the elements to its value(s)\n    )\n        .map((_, elem) => {\n        var _a;\n        const $elem = this._make(elem);\n        const name = $elem.attr('name'); // We have filtered for elements with a name before.\n        // If there is no value set (e.g. `undefined`, `null`), then default value to empty\n        const value = (_a = $elem.val()) !== null && _a !== void 0 ? _a : '';\n        // If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs\n        if (Array.isArray(value)) {\n            return value.map((val) => \n            /*\n             * We trim replace any line endings (e.g. `\\r` or `\\r\\n` with `\\r\\n`) to guarantee consistency across platforms\n             * These can occur inside of `<textarea>'s`\n             */\n            ({ name, value: val.replace(rCRLF, '\\r\\n') }));\n        }\n        // Otherwise (e.g. `<input type=\"text\">`, return only one key/value pair\n        return { name, value: value.replace(rCRLF, '\\r\\n') };\n    })\n        .toArray();\n}\n//# sourceMappingURL=forms.js.map","import * as Attributes from './api/attributes.js';\nimport * as Traversing from './api/traversing.js';\nimport * as Manipulation from './api/manipulation.js';\nimport * as Css from './api/css.js';\nimport * as Forms from './api/forms.js';\nexport class Cheerio {\n    /**\n     * Instance of cheerio. Methods are specified in the modules. Usage of this\n     * constructor is not recommended. Please use `$.load` instead.\n     *\n     * @private\n     * @param elements - The new selection.\n     * @param root - Sets the root node.\n     * @param options - Options for the instance.\n     */\n    constructor(elements, root, options) {\n        this.length = 0;\n        this.options = options;\n        this._root = root;\n        if (elements) {\n            for (let idx = 0; idx < elements.length; idx++) {\n                this[idx] = elements[idx];\n            }\n            this.length = elements.length;\n        }\n    }\n}\n/** Set a signature of the object. */\nCheerio.prototype.cheerio = '[cheerio object]';\n/*\n * Make cheerio an array-like object\n */\nCheerio.prototype.splice = Array.prototype.splice;\n// Support for (const element of $(...)) iteration:\nCheerio.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];\n// Plug in the API\nObject.assign(Cheerio.prototype, Attributes, Traversing, Manipulation, Css, Forms);\n//# sourceMappingURL=cheerio.js.map","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map","import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map","import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map","import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","export const xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? (str, index) => str.codePointAt(index)\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        (c, index) => (c.charCodeAt(index) & 0xfc00) === 0xd800\n            ? (c.charCodeAt(index) - 0xd800) * 0x400 +\n                c.charCodeAt(index + 1) -\n                0xdc00 +\n                0x10000\n            : c.charCodeAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(str) {\n    let ret = \"\";\n    let lastIdx = 0;\n    let match;\n    while ((match = xmlReplacer.exec(str)) !== null) {\n        const i = match.index;\n        const char = str.charCodeAt(i);\n        const next = xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        }\n        else {\n            ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape = encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n    return function escape(data) {\n        let match;\n        let lastIdx = 0;\n        let result = \"\";\n        while ((match = regex.exec(data))) {\n            if (lastIdx !== match.index) {\n                result += data.substring(lastIdx, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8 = getEscaper(/[&<>'\"]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [160, \"&nbsp;\"],\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([\n    [38, \"&amp;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n    [160, \"&nbsp;\"],\n]));\n//# sourceMappingURL=escape.js.map","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map","import { ElementType, isTag as isTagRaw } from \"domelementtype\";\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nexport class Node {\n    constructor() {\n        /** Parent of the node */\n        this.parent = null;\n        /** Previous sibling */\n        this.prev = null;\n        /** Next sibling */\n        this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n        this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n        this.endIndex = null;\n    }\n    // Read-write aliases for properties\n    /**\n     * Same as {@link parent}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get parentNode() {\n        return this.parent;\n    }\n    set parentNode(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Same as {@link prev}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get previousSibling() {\n        return this.prev;\n    }\n    set previousSibling(prev) {\n        this.prev = prev;\n    }\n    /**\n     * Same as {@link next}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nextSibling() {\n        return this.next;\n    }\n    set nextSibling(next) {\n        this.next = next;\n    }\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */\n    cloneNode(recursive = false) {\n        return cloneNode(this, recursive);\n    }\n}\n/**\n * A node that contains some data.\n */\nexport class DataNode extends Node {\n    /**\n     * @param data The content of the data node\n     */\n    constructor(data) {\n        super();\n        this.data = data;\n    }\n    /**\n     * Same as {@link data}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nodeValue() {\n        return this.data;\n    }\n    set nodeValue(data) {\n        this.data = data;\n    }\n}\n/**\n * Text within the document.\n */\nexport class Text extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Text;\n    }\n    get nodeType() {\n        return 3;\n    }\n}\n/**\n * Comments within the document.\n */\nexport class Comment extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Comment;\n    }\n    get nodeType() {\n        return 8;\n    }\n}\n/**\n * Processing instructions, including doc types.\n */\nexport class ProcessingInstruction extends DataNode {\n    constructor(name, data) {\n        super(data);\n        this.name = name;\n        this.type = ElementType.Directive;\n    }\n    get nodeType() {\n        return 1;\n    }\n}\n/**\n * A `Node` that can have children.\n */\nexport class NodeWithChildren extends Node {\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    constructor(children) {\n        super();\n        this.children = children;\n    }\n    // Aliases\n    /** First child of the node. */\n    get firstChild() {\n        var _a;\n        return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Last child of the node. */\n    get lastChild() {\n        return this.children.length > 0\n            ? this.children[this.children.length - 1]\n            : null;\n    }\n    /**\n     * Same as {@link children}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get childNodes() {\n        return this.children;\n    }\n    set childNodes(children) {\n        this.children = children;\n    }\n}\nexport class CDATA extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.CDATA;\n    }\n    get nodeType() {\n        return 4;\n    }\n}\n/**\n * The root node of the document.\n */\nexport class Document extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Root;\n    }\n    get nodeType() {\n        return 9;\n    }\n}\n/**\n * An element within the DOM.\n */\nexport class Element extends NodeWithChildren {\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    constructor(name, attribs, children = [], type = name === \"script\"\n        ? ElementType.Script\n        : name === \"style\"\n            ? ElementType.Style\n            : ElementType.Tag) {\n        super(children);\n        this.name = name;\n        this.attribs = attribs;\n        this.type = type;\n    }\n    get nodeType() {\n        return 1;\n    }\n    // DOM Level 1 aliases\n    /**\n     * Same as {@link name}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get tagName() {\n        return this.name;\n    }\n    set tagName(name) {\n        this.name = name;\n    }\n    get attributes() {\n        return Object.keys(this.attribs).map((name) => {\n            var _a, _b;\n            return ({\n                name,\n                value: this.attribs[name],\n                namespace: (_a = this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                prefix: (_b = this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name],\n            });\n        });\n    }\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */\nexport function isTag(node) {\n    return isTagRaw(node);\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */\nexport function isCDATA(node) {\n    return node.type === ElementType.CDATA;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */\nexport function isText(node) {\n    return node.type === ElementType.Text;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */\nexport function isComment(node) {\n    return node.type === ElementType.Comment;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDirective(node) {\n    return node.type === ElementType.Directive;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDocument(node) {\n    return node.type === ElementType.Root;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */\nexport function hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nexport function cloneNode(node, recursive = false) {\n    let result;\n    if (isText(node)) {\n        result = new Text(node.data);\n    }\n    else if (isComment(node)) {\n        result = new Comment(node.data);\n    }\n    else if (isTag(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Element(node.name, { ...node.attribs }, children);\n        children.forEach((child) => (child.parent = clone));\n        if (node.namespace != null) {\n            clone.namespace = node.namespace;\n        }\n        if (node[\"x-attribsNamespace\"]) {\n            clone[\"x-attribsNamespace\"] = { ...node[\"x-attribsNamespace\"] };\n        }\n        if (node[\"x-attribsPrefix\"]) {\n            clone[\"x-attribsPrefix\"] = { ...node[\"x-attribsPrefix\"] };\n        }\n        result = clone;\n    }\n    else if (isCDATA(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new CDATA(children);\n        children.forEach((child) => (child.parent = clone));\n        result = clone;\n    }\n    else if (isDocument(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Document(children);\n        children.forEach((child) => (child.parent = clone));\n        if (node[\"x-mode\"]) {\n            clone[\"x-mode\"] = node[\"x-mode\"];\n        }\n        result = clone;\n    }\n    else if (isDirective(node)) {\n        const instruction = new ProcessingInstruction(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    }\n    else {\n        throw new Error(`Not implemented yet: ${node.type}`);\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n        result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n}\nfunction cloneChildren(childs) {\n    const children = childs.map((child) => cloneNode(child, true));\n    for (let i = 1; i < children.length; i++) {\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n","import { html } from 'parse5';\nimport { Element, Document, ProcessingInstruction, Comment, Text, isDirective, isText, isComment, isTag, } from 'domhandler';\nfunction createTextNode(value) {\n    return new Text(value);\n}\nfunction enquoteDoctypeId(id) {\n    const quote = id.includes('\"') ? \"'\" : '\"';\n    return quote + id + quote;\n}\n/** @internal */\nexport function serializeDoctypeContent(name, publicId, systemId) {\n    let str = '!DOCTYPE ';\n    if (name) {\n        str += name;\n    }\n    if (publicId) {\n        str += ` PUBLIC ${enquoteDoctypeId(publicId)}`;\n    }\n    else if (systemId) {\n        str += ' SYSTEM';\n    }\n    if (systemId) {\n        str += ` ${enquoteDoctypeId(systemId)}`;\n    }\n    return str;\n}\nexport const adapter = {\n    // Re-exports from domhandler\n    isCommentNode: isComment,\n    isElementNode: isTag,\n    isTextNode: isText,\n    //Node construction\n    createDocument() {\n        const node = new Document([]);\n        node['x-mode'] = html.DOCUMENT_MODE.NO_QUIRKS;\n        return node;\n    },\n    createDocumentFragment() {\n        return new Document([]);\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        const attribs = Object.create(null);\n        const attribsNamespace = Object.create(null);\n        const attribsPrefix = Object.create(null);\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            attribs[attrName] = attrs[i].value;\n            attribsNamespace[attrName] = attrs[i].namespace;\n            attribsPrefix[attrName] = attrs[i].prefix;\n        }\n        const node = new Element(tagName, attribs, []);\n        node.namespace = namespaceURI;\n        node['x-attribsNamespace'] = attribsNamespace;\n        node['x-attribsPrefix'] = attribsPrefix;\n        return node;\n    },\n    createCommentNode(data) {\n        return new Comment(data);\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        const prev = parentNode.children[parentNode.children.length - 1];\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        parentNode.children.push(newNode);\n        newNode.parent = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.children.indexOf(referenceNode);\n        const { prev } = referenceNode;\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        referenceNode.prev = newNode;\n        newNode.next = referenceNode;\n        parentNode.children.splice(insertionIdx, 0, newNode);\n        newNode.parent = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        adapter.appendChild(templateElement, contentElement);\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.children[0];\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const data = serializeDoctypeContent(name, publicId, systemId);\n        let doctypeNode = document.children.find((node) => isDirective(node) && node.name === '!doctype');\n        if (doctypeNode) {\n            doctypeNode.data = data !== null && data !== void 0 ? data : null;\n        }\n        else {\n            doctypeNode = new ProcessingInstruction('!doctype', data);\n            adapter.appendChild(document, doctypeNode);\n        }\n        doctypeNode['x-name'] = name !== null && name !== void 0 ? name : undefined;\n        doctypeNode['x-publicId'] = publicId !== null && publicId !== void 0 ? publicId : undefined;\n        doctypeNode['x-systemId'] = systemId !== null && systemId !== void 0 ? systemId : undefined;\n    },\n    setDocumentMode(document, mode) {\n        document['x-mode'] = mode;\n    },\n    getDocumentMode(document) {\n        return document['x-mode'];\n    },\n    detachNode(node) {\n        if (node.parent) {\n            const idx = node.parent.children.indexOf(node);\n            const { prev, next } = node;\n            node.prev = null;\n            node.next = null;\n            if (prev) {\n                prev.next = next;\n            }\n            if (next) {\n                next.prev = prev;\n            }\n            node.parent.children.splice(idx, 1);\n            node.parent = null;\n        }\n    },\n    insertText(parentNode, text) {\n        const lastChild = parentNode.children[parentNode.children.length - 1];\n        if (lastChild && isText(lastChild)) {\n            lastChild.data += text;\n        }\n        else {\n            adapter.appendChild(parentNode, createTextNode(text));\n        }\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n        if (prevNode && isText(prevNode)) {\n            prevNode.data += text;\n        }\n        else {\n            adapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            if (typeof recipient.attribs[attrName] === 'undefined') {\n                recipient.attribs[attrName] = attrs[i].value;\n                recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;\n                recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.children[0];\n    },\n    getChildNodes(node) {\n        return node.children;\n    },\n    getParentNode(node) {\n        return node.parent;\n    },\n    getAttrList(element) {\n        return element.attributes;\n    },\n    //Node data\n    getTagName(element) {\n        return element.name;\n    },\n    getNamespaceURI(element) {\n        return element.namespace;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.data;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-name']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-publicId']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-systemId']) !== null && _a !== void 0 ? _a : '';\n    },\n    //Node types\n    isDocumentTypeNode(node) {\n        return isDirective(node) && node.name === '!doctype';\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        if (location) {\n            node.startIndex = location.startOffset;\n            node.endIndex = location.endOffset;\n        }\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        if (endLocation.endOffset != null)\n            node.endIndex = endLocation.endOffset;\n        node.sourceCodeLocation = {\n            ...node.sourceCodeLocation,\n            ...endLocation,\n        };\n    },\n};\n//# sourceMappingURL=index.js.map","import { isDocument } from 'domhandler';\nimport { parse as parseDocument, parseFragment, serializeOuter } from 'parse5';\nimport { adapter as htmlparser2Adapter } from 'parse5-htmlparser2-tree-adapter';\n/**\n * Parse the content with `parse5` in the context of the given `ParentNode`.\n *\n * @param content - The content to parse.\n * @param options - A set of options to use to parse.\n * @param isDocument - Whether to parse the content as a full HTML document.\n * @param context - The context in which to parse the content.\n * @returns The parsed content.\n */\nexport function parseWithParse5(content, options, isDocument, context) {\n    const opts = {\n        scriptingEnabled: typeof options.scriptingEnabled === 'boolean'\n            ? options.scriptingEnabled\n            : true,\n        treeAdapter: htmlparser2Adapter,\n        sourceCodeLocationInfo: options.sourceCodeLocationInfo,\n    };\n    return isDocument\n        ? parseDocument(content, opts)\n        : parseFragment(context, content, opts);\n}\nconst renderOpts = { treeAdapter: htmlparser2Adapter };\n/**\n * Renders the given DOM tree with `parse5` and returns the result as a string.\n *\n * @param dom - The DOM tree to render.\n * @returns The rendered document.\n */\nexport function renderWithParse5(dom) {\n    /*\n     * `dom-serializer` passes over the special \"root\" node and renders the\n     * node's children in its place. To mimic this behavior with `parse5`, an\n     * equivalent operation must be applied to the input array.\n     */\n    const nodes = 'length' in dom ? dom : [dom];\n    for (let index = 0; index < nodes.length; index += 1) {\n        const node = nodes[index];\n        if (isDocument(node)) {\n            Array.prototype.splice.call(nodes, index, 1, ...node.children);\n        }\n    }\n    let result = '';\n    for (let index = 0; index < nodes.length; index += 1) {\n        const node = nodes[index];\n        result += serializeOuter(node, renderOpts);\n    }\n    return result;\n}\n//# sourceMappingURL=parse5-adapter.js.map","import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */ Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\nexport { ERR as ErrorCodes } from './common/error-codes.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\n/** @internal */\nexport * as html from './common/html.js';\n/** @internal */\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n    return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n//# sourceMappingURL=index.js.map","import { htmlDecodeTree, xmlDecodeTree, BinTrieFlags, determineBranch, replaceCodePoint, } from \"entities/lib/decode.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"Tab\"] = 9] = \"Tab\";\n    CharCodes[CharCodes[\"NewLine\"] = 10] = \"NewLine\";\n    CharCodes[CharCodes[\"FormFeed\"] = 12] = \"FormFeed\";\n    CharCodes[CharCodes[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n    CharCodes[CharCodes[\"Space\"] = 32] = \"Space\";\n    CharCodes[CharCodes[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n    CharCodes[CharCodes[\"Number\"] = 35] = \"Number\";\n    CharCodes[CharCodes[\"Amp\"] = 38] = \"Amp\";\n    CharCodes[CharCodes[\"SingleQuote\"] = 39] = \"SingleQuote\";\n    CharCodes[CharCodes[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n    CharCodes[CharCodes[\"Dash\"] = 45] = \"Dash\";\n    CharCodes[CharCodes[\"Slash\"] = 47] = \"Slash\";\n    CharCodes[CharCodes[\"Zero\"] = 48] = \"Zero\";\n    CharCodes[CharCodes[\"Nine\"] = 57] = \"Nine\";\n    CharCodes[CharCodes[\"Semi\"] = 59] = \"Semi\";\n    CharCodes[CharCodes[\"Lt\"] = 60] = \"Lt\";\n    CharCodes[CharCodes[\"Eq\"] = 61] = \"Eq\";\n    CharCodes[CharCodes[\"Gt\"] = 62] = \"Gt\";\n    CharCodes[CharCodes[\"Questionmark\"] = 63] = \"Questionmark\";\n    CharCodes[CharCodes[\"UpperA\"] = 65] = \"UpperA\";\n    CharCodes[CharCodes[\"LowerA\"] = 97] = \"LowerA\";\n    CharCodes[CharCodes[\"UpperF\"] = 70] = \"UpperF\";\n    CharCodes[CharCodes[\"LowerF\"] = 102] = \"LowerF\";\n    CharCodes[CharCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n    CharCodes[CharCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n    CharCodes[CharCodes[\"LowerX\"] = 120] = \"LowerX\";\n    CharCodes[CharCodes[\"OpeningSquareBracket\"] = 91] = \"OpeningSquareBracket\";\n})(CharCodes || (CharCodes = {}));\n/** All the states the tokenizer can be in. */\nvar State;\n(function (State) {\n    State[State[\"Text\"] = 1] = \"Text\";\n    State[State[\"BeforeTagName\"] = 2] = \"BeforeTagName\";\n    State[State[\"InTagName\"] = 3] = \"InTagName\";\n    State[State[\"InSelfClosingTag\"] = 4] = \"InSelfClosingTag\";\n    State[State[\"BeforeClosingTagName\"] = 5] = \"BeforeClosingTagName\";\n    State[State[\"InClosingTagName\"] = 6] = \"InClosingTagName\";\n    State[State[\"AfterClosingTagName\"] = 7] = \"AfterClosingTagName\";\n    // Attributes\n    State[State[\"BeforeAttributeName\"] = 8] = \"BeforeAttributeName\";\n    State[State[\"InAttributeName\"] = 9] = \"InAttributeName\";\n    State[State[\"AfterAttributeName\"] = 10] = \"AfterAttributeName\";\n    State[State[\"BeforeAttributeValue\"] = 11] = \"BeforeAttributeValue\";\n    State[State[\"InAttributeValueDq\"] = 12] = \"InAttributeValueDq\";\n    State[State[\"InAttributeValueSq\"] = 13] = \"InAttributeValueSq\";\n    State[State[\"InAttributeValueNq\"] = 14] = \"InAttributeValueNq\";\n    // Declarations\n    State[State[\"BeforeDeclaration\"] = 15] = \"BeforeDeclaration\";\n    State[State[\"InDeclaration\"] = 16] = \"InDeclaration\";\n    // Processing instructions\n    State[State[\"InProcessingInstruction\"] = 17] = \"InProcessingInstruction\";\n    // Comments & CDATA\n    State[State[\"BeforeComment\"] = 18] = \"BeforeComment\";\n    State[State[\"CDATASequence\"] = 19] = \"CDATASequence\";\n    State[State[\"InSpecialComment\"] = 20] = \"InSpecialComment\";\n    State[State[\"InCommentLike\"] = 21] = \"InCommentLike\";\n    // Special tags\n    State[State[\"BeforeSpecialS\"] = 22] = \"BeforeSpecialS\";\n    State[State[\"SpecialStartSequence\"] = 23] = \"SpecialStartSequence\";\n    State[State[\"InSpecialTag\"] = 24] = \"InSpecialTag\";\n    State[State[\"BeforeEntity\"] = 25] = \"BeforeEntity\";\n    State[State[\"BeforeNumericEntity\"] = 26] = \"BeforeNumericEntity\";\n    State[State[\"InNamedEntity\"] = 27] = \"InNamedEntity\";\n    State[State[\"InNumericEntity\"] = 28] = \"InNumericEntity\";\n    State[State[\"InHexEntity\"] = 29] = \"InHexEntity\";\n})(State || (State = {}));\nfunction isWhitespace(c) {\n    return (c === CharCodes.Space ||\n        c === CharCodes.NewLine ||\n        c === CharCodes.Tab ||\n        c === CharCodes.FormFeed ||\n        c === CharCodes.CarriageReturn);\n}\nfunction isEndOfTagSection(c) {\n    return c === CharCodes.Slash || c === CharCodes.Gt || isWhitespace(c);\n}\nfunction isNumber(c) {\n    return c >= CharCodes.Zero && c <= CharCodes.Nine;\n}\nfunction isASCIIAlpha(c) {\n    return ((c >= CharCodes.LowerA && c <= CharCodes.LowerZ) ||\n        (c >= CharCodes.UpperA && c <= CharCodes.UpperZ));\n}\nfunction isHexDigit(c) {\n    return ((c >= CharCodes.UpperA && c <= CharCodes.UpperF) ||\n        (c >= CharCodes.LowerA && c <= CharCodes.LowerF));\n}\nexport var QuoteType;\n(function (QuoteType) {\n    QuoteType[QuoteType[\"NoValue\"] = 0] = \"NoValue\";\n    QuoteType[QuoteType[\"Unquoted\"] = 1] = \"Unquoted\";\n    QuoteType[QuoteType[\"Single\"] = 2] = \"Single\";\n    QuoteType[QuoteType[\"Double\"] = 3] = \"Double\";\n})(QuoteType || (QuoteType = {}));\n/**\n * Sequences used to match longer strings.\n *\n * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End\n * sequences with an increased offset.\n */\nconst Sequences = {\n    Cdata: new Uint8Array([0x43, 0x44, 0x41, 0x54, 0x41, 0x5b]),\n    CdataEnd: new Uint8Array([0x5d, 0x5d, 0x3e]),\n    CommentEnd: new Uint8Array([0x2d, 0x2d, 0x3e]),\n    ScriptEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74]),\n    StyleEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65]),\n    TitleEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65]), // `</title`\n};\nexport default class Tokenizer {\n    constructor({ xmlMode = false, decodeEntities = true, }, cbs) {\n        this.cbs = cbs;\n        /** The current state the tokenizer is in. */\n        this.state = State.Text;\n        /** The read buffer. */\n        this.buffer = \"\";\n        /** The beginning of the section that is currently being read. */\n        this.sectionStart = 0;\n        /** The index within the buffer that we are currently looking at. */\n        this.index = 0;\n        /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n        this.baseState = State.Text;\n        /** For special parsing behavior inside of script and style tags. */\n        this.isSpecial = false;\n        /** Indicates whether the tokenizer has been paused. */\n        this.running = true;\n        /** The offset of the current buffer. */\n        this.offset = 0;\n        this.currentSequence = undefined;\n        this.sequenceIndex = 0;\n        this.trieIndex = 0;\n        this.trieCurrent = 0;\n        /** For named entities, the index of the value. For numeric entities, the code point. */\n        this.entityResult = 0;\n        this.entityExcess = 0;\n        this.xmlMode = xmlMode;\n        this.decodeEntities = decodeEntities;\n        this.entityTrie = xmlMode ? xmlDecodeTree : htmlDecodeTree;\n    }\n    reset() {\n        this.state = State.Text;\n        this.buffer = \"\";\n        this.sectionStart = 0;\n        this.index = 0;\n        this.baseState = State.Text;\n        this.currentSequence = undefined;\n        this.running = true;\n        this.offset = 0;\n    }\n    write(chunk) {\n        this.offset += this.buffer.length;\n        this.buffer = chunk;\n        this.parse();\n    }\n    end() {\n        if (this.running)\n            this.finish();\n    }\n    pause() {\n        this.running = false;\n    }\n    resume() {\n        this.running = true;\n        if (this.index < this.buffer.length + this.offset) {\n            this.parse();\n        }\n    }\n    /**\n     * The current index within all of the written data.\n     */\n    getIndex() {\n        return this.index;\n    }\n    /**\n     * The start of the current section.\n     */\n    getSectionStart() {\n        return this.sectionStart;\n    }\n    stateText(c) {\n        if (c === CharCodes.Lt ||\n            (!this.decodeEntities && this.fastForwardTo(CharCodes.Lt))) {\n            if (this.index > this.sectionStart) {\n                this.cbs.ontext(this.sectionStart, this.index);\n            }\n            this.state = State.BeforeTagName;\n            this.sectionStart = this.index;\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.state = State.BeforeEntity;\n        }\n    }\n    stateSpecialStartSequence(c) {\n        const isEnd = this.sequenceIndex === this.currentSequence.length;\n        const isMatch = isEnd\n            ? // If we are at the end of the sequence, make sure the tag name has ended\n                isEndOfTagSection(c)\n            : // Otherwise, do a case-insensitive comparison\n                (c | 0x20) === this.currentSequence[this.sequenceIndex];\n        if (!isMatch) {\n            this.isSpecial = false;\n        }\n        else if (!isEnd) {\n            this.sequenceIndex++;\n            return;\n        }\n        this.sequenceIndex = 0;\n        this.state = State.InTagName;\n        this.stateInTagName(c);\n    }\n    /** Look for an end tag. For <title> tags, also decode entities. */\n    stateInSpecialTag(c) {\n        if (this.sequenceIndex === this.currentSequence.length) {\n            if (c === CharCodes.Gt || isWhitespace(c)) {\n                const endOfText = this.index - this.currentSequence.length;\n                if (this.sectionStart < endOfText) {\n                    // Spoof the index so that reported locations match up.\n                    const actualIndex = this.index;\n                    this.index = endOfText;\n                    this.cbs.ontext(this.sectionStart, endOfText);\n                    this.index = actualIndex;\n                }\n                this.isSpecial = false;\n                this.sectionStart = endOfText + 2; // Skip over the `</`\n                this.stateInClosingTagName(c);\n                return; // We are done; skip the rest of the function.\n            }\n            this.sequenceIndex = 0;\n        }\n        if ((c | 0x20) === this.currentSequence[this.sequenceIndex]) {\n            this.sequenceIndex += 1;\n        }\n        else if (this.sequenceIndex === 0) {\n            if (this.currentSequence === Sequences.TitleEnd) {\n                // We have to parse entities in <title> tags.\n                if (this.decodeEntities && c === CharCodes.Amp) {\n                    this.state = State.BeforeEntity;\n                }\n            }\n            else if (this.fastForwardTo(CharCodes.Lt)) {\n                // Outside of <title> tags, we can fast-forward.\n                this.sequenceIndex = 1;\n            }\n        }\n        else {\n            // If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.\n            this.sequenceIndex = Number(c === CharCodes.Lt);\n        }\n    }\n    stateCDATASequence(c) {\n        if (c === Sequences.Cdata[this.sequenceIndex]) {\n            if (++this.sequenceIndex === Sequences.Cdata.length) {\n                this.state = State.InCommentLike;\n                this.currentSequence = Sequences.CdataEnd;\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n            }\n        }\n        else {\n            this.sequenceIndex = 0;\n            this.state = State.InDeclaration;\n            this.stateInDeclaration(c); // Reconsume the character\n        }\n    }\n    /**\n     * When we wait for one specific character, we can speed things up\n     * by skipping through the buffer until we find it.\n     *\n     * @returns Whether the character was found.\n     */\n    fastForwardTo(c) {\n        while (++this.index < this.buffer.length + this.offset) {\n            if (this.buffer.charCodeAt(this.index - this.offset) === c) {\n                return true;\n            }\n        }\n        /*\n         * We increment the index at the end of the `parse` loop,\n         * so set it to `buffer.length - 1` here.\n         *\n         * TODO: Refactor `parse` to increment index before calling states.\n         */\n        this.index = this.buffer.length + this.offset - 1;\n        return false;\n    }\n    /**\n     * Comments and CDATA end with `-->` and `]]>`.\n     *\n     * Their common qualities are:\n     * - Their end sequences have a distinct character they start with.\n     * - That character is then repeated, so we have to check multiple repeats.\n     * - All characters but the start character of the sequence can be skipped.\n     */\n    stateInCommentLike(c) {\n        if (c === this.currentSequence[this.sequenceIndex]) {\n            if (++this.sequenceIndex === this.currentSequence.length) {\n                if (this.currentSequence === Sequences.CdataEnd) {\n                    this.cbs.oncdata(this.sectionStart, this.index, 2);\n                }\n                else {\n                    this.cbs.oncomment(this.sectionStart, this.index, 2);\n                }\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n                this.state = State.Text;\n            }\n        }\n        else if (this.sequenceIndex === 0) {\n            // Fast-forward to the first character of the sequence\n            if (this.fastForwardTo(this.currentSequence[0])) {\n                this.sequenceIndex = 1;\n            }\n        }\n        else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n            // Allow long sequences, eg. --->, ]]]>\n            this.sequenceIndex = 0;\n        }\n    }\n    /**\n     * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a tag name.\n     *\n     * XML allows a lot more characters here (@see https://www.w3.org/TR/REC-xml/#NT-NameStartChar).\n     * We allow anything that wouldn't end the tag.\n     */\n    isTagStartChar(c) {\n        return this.xmlMode ? !isEndOfTagSection(c) : isASCIIAlpha(c);\n    }\n    startSpecial(sequence, offset) {\n        this.isSpecial = true;\n        this.currentSequence = sequence;\n        this.sequenceIndex = offset;\n        this.state = State.SpecialStartSequence;\n    }\n    stateBeforeTagName(c) {\n        if (c === CharCodes.ExclamationMark) {\n            this.state = State.BeforeDeclaration;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.Questionmark) {\n            this.state = State.InProcessingInstruction;\n            this.sectionStart = this.index + 1;\n        }\n        else if (this.isTagStartChar(c)) {\n            const lower = c | 0x20;\n            this.sectionStart = this.index;\n            if (!this.xmlMode && lower === Sequences.TitleEnd[2]) {\n                this.startSpecial(Sequences.TitleEnd, 3);\n            }\n            else {\n                this.state =\n                    !this.xmlMode && lower === Sequences.ScriptEnd[2]\n                        ? State.BeforeSpecialS\n                        : State.InTagName;\n            }\n        }\n        else if (c === CharCodes.Slash) {\n            this.state = State.BeforeClosingTagName;\n        }\n        else {\n            this.state = State.Text;\n            this.stateText(c);\n        }\n    }\n    stateInTagName(c) {\n        if (isEndOfTagSection(c)) {\n            this.cbs.onopentagname(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateBeforeClosingTagName(c) {\n        if (isWhitespace(c)) {\n            // Ignore\n        }\n        else if (c === CharCodes.Gt) {\n            this.state = State.Text;\n        }\n        else {\n            this.state = this.isTagStartChar(c)\n                ? State.InClosingTagName\n                : State.InSpecialComment;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInClosingTagName(c) {\n        if (c === CharCodes.Gt || isWhitespace(c)) {\n            this.cbs.onclosetag(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.AfterClosingTagName;\n            this.stateAfterClosingTagName(c);\n        }\n    }\n    stateAfterClosingTagName(c) {\n        // Skip everything until \">\"\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.state = State.Text;\n            this.baseState = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeAttributeName(c) {\n        if (c === CharCodes.Gt) {\n            this.cbs.onopentagend(this.index);\n            if (this.isSpecial) {\n                this.state = State.InSpecialTag;\n                this.sequenceIndex = 0;\n            }\n            else {\n                this.state = State.Text;\n            }\n            this.baseState = this.state;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.Slash) {\n            this.state = State.InSelfClosingTag;\n        }\n        else if (!isWhitespace(c)) {\n            this.state = State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInSelfClosingTag(c) {\n        if (c === CharCodes.Gt) {\n            this.cbs.onselfclosingtag(this.index);\n            this.state = State.Text;\n            this.baseState = State.Text;\n            this.sectionStart = this.index + 1;\n            this.isSpecial = false; // Reset special state, in case of self-closing special tags\n        }\n        else if (!isWhitespace(c)) {\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateInAttributeName(c) {\n        if (c === CharCodes.Eq || isEndOfTagSection(c)) {\n            this.cbs.onattribname(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.AfterAttributeName;\n            this.stateAfterAttributeName(c);\n        }\n    }\n    stateAfterAttributeName(c) {\n        if (c === CharCodes.Eq) {\n            this.state = State.BeforeAttributeValue;\n        }\n        else if (c === CharCodes.Slash || c === CharCodes.Gt) {\n            this.cbs.onattribend(QuoteType.NoValue, this.index);\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n        else if (!isWhitespace(c)) {\n            this.cbs.onattribend(QuoteType.NoValue, this.index);\n            this.state = State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateBeforeAttributeValue(c) {\n        if (c === CharCodes.DoubleQuote) {\n            this.state = State.InAttributeValueDq;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.SingleQuote) {\n            this.state = State.InAttributeValueSq;\n            this.sectionStart = this.index + 1;\n        }\n        else if (!isWhitespace(c)) {\n            this.sectionStart = this.index;\n            this.state = State.InAttributeValueNq;\n            this.stateInAttributeValueNoQuotes(c); // Reconsume token\n        }\n    }\n    handleInAttributeValue(c, quote) {\n        if (c === quote ||\n            (!this.decodeEntities && this.fastForwardTo(quote))) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(quote === CharCodes.DoubleQuote\n                ? QuoteType.Double\n                : QuoteType.Single, this.index);\n            this.state = State.BeforeAttributeName;\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.baseState = this.state;\n            this.state = State.BeforeEntity;\n        }\n    }\n    stateInAttributeValueDoubleQuotes(c) {\n        this.handleInAttributeValue(c, CharCodes.DoubleQuote);\n    }\n    stateInAttributeValueSingleQuotes(c) {\n        this.handleInAttributeValue(c, CharCodes.SingleQuote);\n    }\n    stateInAttributeValueNoQuotes(c) {\n        if (isWhitespace(c) || c === CharCodes.Gt) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(QuoteType.Unquoted, this.index);\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.baseState = this.state;\n            this.state = State.BeforeEntity;\n        }\n    }\n    stateBeforeDeclaration(c) {\n        if (c === CharCodes.OpeningSquareBracket) {\n            this.state = State.CDATASequence;\n            this.sequenceIndex = 0;\n        }\n        else {\n            this.state =\n                c === CharCodes.Dash\n                    ? State.BeforeComment\n                    : State.InDeclaration;\n        }\n    }\n    stateInDeclaration(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.ondeclaration(this.sectionStart, this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateInProcessingInstruction(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeComment(c) {\n        if (c === CharCodes.Dash) {\n            this.state = State.InCommentLike;\n            this.currentSequence = Sequences.CommentEnd;\n            // Allow short comments (eg. <!-->)\n            this.sequenceIndex = 2;\n            this.sectionStart = this.index + 1;\n        }\n        else {\n            this.state = State.InDeclaration;\n        }\n    }\n    stateInSpecialComment(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.oncomment(this.sectionStart, this.index, 0);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeSpecialS(c) {\n        const lower = c | 0x20;\n        if (lower === Sequences.ScriptEnd[3]) {\n            this.startSpecial(Sequences.ScriptEnd, 4);\n        }\n        else if (lower === Sequences.StyleEnd[3]) {\n            this.startSpecial(Sequences.StyleEnd, 4);\n        }\n        else {\n            this.state = State.InTagName;\n            this.stateInTagName(c); // Consume the token again\n        }\n    }\n    stateBeforeEntity(c) {\n        // Start excess with 1 to include the '&'\n        this.entityExcess = 1;\n        this.entityResult = 0;\n        if (c === CharCodes.Number) {\n            this.state = State.BeforeNumericEntity;\n        }\n        else if (c === CharCodes.Amp) {\n            // We have two `&` characters in a row. Stay in the current state.\n        }\n        else {\n            this.trieIndex = 0;\n            this.trieCurrent = this.entityTrie[0];\n            this.state = State.InNamedEntity;\n            this.stateInNamedEntity(c);\n        }\n    }\n    stateInNamedEntity(c) {\n        this.entityExcess += 1;\n        this.trieIndex = determineBranch(this.entityTrie, this.trieCurrent, this.trieIndex + 1, c);\n        if (this.trieIndex < 0) {\n            this.emitNamedEntity();\n            this.index--;\n            return;\n        }\n        this.trieCurrent = this.entityTrie[this.trieIndex];\n        const masked = this.trieCurrent & BinTrieFlags.VALUE_LENGTH;\n        // If the branch is a value, store it and continue\n        if (masked) {\n            // The mask is the number of bytes of the value, including the current byte.\n            const valueLength = (masked >> 14) - 1;\n            // If we have a legacy entity while parsing strictly, just skip the number of bytes\n            if (!this.allowLegacyEntity() && c !== CharCodes.Semi) {\n                this.trieIndex += valueLength;\n            }\n            else {\n                // Add 1 as we have already incremented the excess\n                const entityStart = this.index - this.entityExcess + 1;\n                if (entityStart > this.sectionStart) {\n                    this.emitPartial(this.sectionStart, entityStart);\n                }\n                // If this is a surrogate pair, consume the next two bytes\n                this.entityResult = this.trieIndex;\n                this.trieIndex += valueLength;\n                this.entityExcess = 0;\n                this.sectionStart = this.index + 1;\n                if (valueLength === 0) {\n                    this.emitNamedEntity();\n                }\n            }\n        }\n    }\n    emitNamedEntity() {\n        this.state = this.baseState;\n        if (this.entityResult === 0) {\n            return;\n        }\n        const valueLength = (this.entityTrie[this.entityResult] & BinTrieFlags.VALUE_LENGTH) >>\n            14;\n        switch (valueLength) {\n            case 1: {\n                this.emitCodePoint(this.entityTrie[this.entityResult] &\n                    ~BinTrieFlags.VALUE_LENGTH);\n                break;\n            }\n            case 2: {\n                this.emitCodePoint(this.entityTrie[this.entityResult + 1]);\n                break;\n            }\n            case 3: {\n                this.emitCodePoint(this.entityTrie[this.entityResult + 1]);\n                this.emitCodePoint(this.entityTrie[this.entityResult + 2]);\n            }\n        }\n    }\n    stateBeforeNumericEntity(c) {\n        if ((c | 0x20) === CharCodes.LowerX) {\n            this.entityExcess++;\n            this.state = State.InHexEntity;\n        }\n        else {\n            this.state = State.InNumericEntity;\n            this.stateInNumericEntity(c);\n        }\n    }\n    emitNumericEntity(strict) {\n        const entityStart = this.index - this.entityExcess - 1;\n        const numberStart = entityStart + 2 + Number(this.state === State.InHexEntity);\n        if (numberStart !== this.index) {\n            // Emit leading data if any\n            if (entityStart > this.sectionStart) {\n                this.emitPartial(this.sectionStart, entityStart);\n            }\n            this.sectionStart = this.index + Number(strict);\n            this.emitCodePoint(replaceCodePoint(this.entityResult));\n        }\n        this.state = this.baseState;\n    }\n    stateInNumericEntity(c) {\n        if (c === CharCodes.Semi) {\n            this.emitNumericEntity(true);\n        }\n        else if (isNumber(c)) {\n            this.entityResult = this.entityResult * 10 + (c - CharCodes.Zero);\n            this.entityExcess++;\n        }\n        else {\n            if (this.allowLegacyEntity()) {\n                this.emitNumericEntity(false);\n            }\n            else {\n                this.state = this.baseState;\n            }\n            this.index--;\n        }\n    }\n    stateInHexEntity(c) {\n        if (c === CharCodes.Semi) {\n            this.emitNumericEntity(true);\n        }\n        else if (isNumber(c)) {\n            this.entityResult = this.entityResult * 16 + (c - CharCodes.Zero);\n            this.entityExcess++;\n        }\n        else if (isHexDigit(c)) {\n            this.entityResult =\n                this.entityResult * 16 + ((c | 0x20) - CharCodes.LowerA + 10);\n            this.entityExcess++;\n        }\n        else {\n            if (this.allowLegacyEntity()) {\n                this.emitNumericEntity(false);\n            }\n            else {\n                this.state = this.baseState;\n            }\n            this.index--;\n        }\n    }\n    allowLegacyEntity() {\n        return (!this.xmlMode &&\n            (this.baseState === State.Text ||\n                this.baseState === State.InSpecialTag));\n    }\n    /**\n     * Remove data that has already been consumed from the buffer.\n     */\n    cleanup() {\n        // If we are inside of text or attributes, emit what we already have.\n        if (this.running && this.sectionStart !== this.index) {\n            if (this.state === State.Text ||\n                (this.state === State.InSpecialTag && this.sequenceIndex === 0)) {\n                this.cbs.ontext(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n            else if (this.state === State.InAttributeValueDq ||\n                this.state === State.InAttributeValueSq ||\n                this.state === State.InAttributeValueNq) {\n                this.cbs.onattribdata(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n        }\n    }\n    shouldContinue() {\n        return this.index < this.buffer.length + this.offset && this.running;\n    }\n    /**\n     * Iterates through the buffer, calling the function corresponding to the current state.\n     *\n     * States that are more likely to be hit are higher up, as a performance improvement.\n     */\n    parse() {\n        while (this.shouldContinue()) {\n            const c = this.buffer.charCodeAt(this.index - this.offset);\n            switch (this.state) {\n                case State.Text: {\n                    this.stateText(c);\n                    break;\n                }\n                case State.SpecialStartSequence: {\n                    this.stateSpecialStartSequence(c);\n                    break;\n                }\n                case State.InSpecialTag: {\n                    this.stateInSpecialTag(c);\n                    break;\n                }\n                case State.CDATASequence: {\n                    this.stateCDATASequence(c);\n                    break;\n                }\n                case State.InAttributeValueDq: {\n                    this.stateInAttributeValueDoubleQuotes(c);\n                    break;\n                }\n                case State.InAttributeName: {\n                    this.stateInAttributeName(c);\n                    break;\n                }\n                case State.InCommentLike: {\n                    this.stateInCommentLike(c);\n                    break;\n                }\n                case State.InSpecialComment: {\n                    this.stateInSpecialComment(c);\n                    break;\n                }\n                case State.BeforeAttributeName: {\n                    this.stateBeforeAttributeName(c);\n                    break;\n                }\n                case State.InTagName: {\n                    this.stateInTagName(c);\n                    break;\n                }\n                case State.InClosingTagName: {\n                    this.stateInClosingTagName(c);\n                    break;\n                }\n                case State.BeforeTagName: {\n                    this.stateBeforeTagName(c);\n                    break;\n                }\n                case State.AfterAttributeName: {\n                    this.stateAfterAttributeName(c);\n                    break;\n                }\n                case State.InAttributeValueSq: {\n                    this.stateInAttributeValueSingleQuotes(c);\n                    break;\n                }\n                case State.BeforeAttributeValue: {\n                    this.stateBeforeAttributeValue(c);\n                    break;\n                }\n                case State.BeforeClosingTagName: {\n                    this.stateBeforeClosingTagName(c);\n                    break;\n                }\n                case State.AfterClosingTagName: {\n                    this.stateAfterClosingTagName(c);\n                    break;\n                }\n                case State.BeforeSpecialS: {\n                    this.stateBeforeSpecialS(c);\n                    break;\n                }\n                case State.InAttributeValueNq: {\n                    this.stateInAttributeValueNoQuotes(c);\n                    break;\n                }\n                case State.InSelfClosingTag: {\n                    this.stateInSelfClosingTag(c);\n                    break;\n                }\n                case State.InDeclaration: {\n                    this.stateInDeclaration(c);\n                    break;\n                }\n                case State.BeforeDeclaration: {\n                    this.stateBeforeDeclaration(c);\n                    break;\n                }\n                case State.BeforeComment: {\n                    this.stateBeforeComment(c);\n                    break;\n                }\n                case State.InProcessingInstruction: {\n                    this.stateInProcessingInstruction(c);\n                    break;\n                }\n                case State.InNamedEntity: {\n                    this.stateInNamedEntity(c);\n                    break;\n                }\n                case State.BeforeEntity: {\n                    this.stateBeforeEntity(c);\n                    break;\n                }\n                case State.InHexEntity: {\n                    this.stateInHexEntity(c);\n                    break;\n                }\n                case State.InNumericEntity: {\n                    this.stateInNumericEntity(c);\n                    break;\n                }\n                default: {\n                    // `this._state === State.BeforeNumericEntity`\n                    this.stateBeforeNumericEntity(c);\n                }\n            }\n            this.index++;\n        }\n        this.cleanup();\n    }\n    finish() {\n        if (this.state === State.InNamedEntity) {\n            this.emitNamedEntity();\n        }\n        // If there is remaining data, emit it in a reasonable way\n        if (this.sectionStart < this.index) {\n            this.handleTrailingData();\n        }\n        this.cbs.onend();\n    }\n    /** Handle any trailing data. */\n    handleTrailingData() {\n        const endIndex = this.buffer.length + this.offset;\n        if (this.state === State.InCommentLike) {\n            if (this.currentSequence === Sequences.CdataEnd) {\n                this.cbs.oncdata(this.sectionStart, endIndex, 0);\n            }\n            else {\n                this.cbs.oncomment(this.sectionStart, endIndex, 0);\n            }\n        }\n        else if (this.state === State.InNumericEntity &&\n            this.allowLegacyEntity()) {\n            this.emitNumericEntity(false);\n            // All trailing data will have been consumed\n        }\n        else if (this.state === State.InHexEntity &&\n            this.allowLegacyEntity()) {\n            this.emitNumericEntity(false);\n            // All trailing data will have been consumed\n        }\n        else if (this.state === State.InTagName ||\n            this.state === State.BeforeAttributeName ||\n            this.state === State.BeforeAttributeValue ||\n            this.state === State.AfterAttributeName ||\n            this.state === State.InAttributeName ||\n            this.state === State.InAttributeValueSq ||\n            this.state === State.InAttributeValueDq ||\n            this.state === State.InAttributeValueNq ||\n            this.state === State.InClosingTagName) {\n            /*\n             * If we are currently in an opening or closing tag, us not calling the\n             * respective callback signals that the tag should be ignored.\n             */\n        }\n        else {\n            this.cbs.ontext(this.sectionStart, endIndex);\n        }\n    }\n    emitPartial(start, endIndex) {\n        if (this.baseState !== State.Text &&\n            this.baseState !== State.InSpecialTag) {\n            this.cbs.onattribdata(start, endIndex);\n        }\n        else {\n            this.cbs.ontext(start, endIndex);\n        }\n    }\n    emitCodePoint(cp) {\n        if (this.baseState !== State.Text &&\n            this.baseState !== State.InSpecialTag) {\n            this.cbs.onattribentity(cp);\n        }\n        else {\n            this.cbs.ontextentity(cp);\n        }\n    }\n}\n//# sourceMappingURL=Tokenizer.js.map","import Tokenizer, { QuoteType } from \"./Tokenizer.js\";\nimport { fromCodePoint } from \"entities/lib/decode.js\";\nconst formTags = new Set([\n    \"input\",\n    \"option\",\n    \"optgroup\",\n    \"select\",\n    \"button\",\n    \"datalist\",\n    \"textarea\",\n]);\nconst pTag = new Set([\"p\"]);\nconst tableSectionTags = new Set([\"thead\", \"tbody\"]);\nconst ddtTags = new Set([\"dd\", \"dt\"]);\nconst rtpTags = new Set([\"rt\", \"rp\"]);\nconst openImpliesClose = new Map([\n    [\"tr\", new Set([\"tr\", \"th\", \"td\"])],\n    [\"th\", new Set([\"th\"])],\n    [\"td\", new Set([\"thead\", \"th\", \"td\"])],\n    [\"body\", new Set([\"head\", \"link\", \"script\"])],\n    [\"li\", new Set([\"li\"])],\n    [\"p\", pTag],\n    [\"h1\", pTag],\n    [\"h2\", pTag],\n    [\"h3\", pTag],\n    [\"h4\", pTag],\n    [\"h5\", pTag],\n    [\"h6\", pTag],\n    [\"select\", formTags],\n    [\"input\", formTags],\n    [\"output\", formTags],\n    [\"button\", formTags],\n    [\"datalist\", formTags],\n    [\"textarea\", formTags],\n    [\"option\", new Set([\"option\"])],\n    [\"optgroup\", new Set([\"optgroup\", \"option\"])],\n    [\"dd\", ddtTags],\n    [\"dt\", ddtTags],\n    [\"address\", pTag],\n    [\"article\", pTag],\n    [\"aside\", pTag],\n    [\"blockquote\", pTag],\n    [\"details\", pTag],\n    [\"div\", pTag],\n    [\"dl\", pTag],\n    [\"fieldset\", pTag],\n    [\"figcaption\", pTag],\n    [\"figure\", pTag],\n    [\"footer\", pTag],\n    [\"form\", pTag],\n    [\"header\", pTag],\n    [\"hr\", pTag],\n    [\"main\", pTag],\n    [\"nav\", pTag],\n    [\"ol\", pTag],\n    [\"pre\", pTag],\n    [\"section\", pTag],\n    [\"table\", pTag],\n    [\"ul\", pTag],\n    [\"rt\", rtpTags],\n    [\"rp\", rtpTags],\n    [\"tbody\", tableSectionTags],\n    [\"tfoot\", tableSectionTags],\n]);\nconst voidElements = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\nconst foreignContextElements = new Set([\"math\", \"svg\"]);\nconst htmlIntegrationElements = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignobject\",\n    \"desc\",\n    \"title\",\n]);\nconst reNameEnd = /\\s|\\//;\nexport class Parser {\n    constructor(cbs, options = {}) {\n        var _a, _b, _c, _d, _e;\n        this.options = options;\n        /** The start index of the last event. */\n        this.startIndex = 0;\n        /** The end index of the last event. */\n        this.endIndex = 0;\n        /**\n         * Store the start index of the current open tag,\n         * so we can update the start index for attributes.\n         */\n        this.openTagStart = 0;\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribvalue = \"\";\n        this.attribs = null;\n        this.stack = [];\n        this.foreignContext = [];\n        this.buffers = [];\n        this.bufferOffset = 0;\n        /** The index of the last written buffer. Used when resuming after a `pause()`. */\n        this.writeIndex = 0;\n        /** Indicates whether the parser has finished running / `.end` has been called. */\n        this.ended = false;\n        this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};\n        this.lowerCaseTagNames = (_a = options.lowerCaseTags) !== null && _a !== void 0 ? _a : !options.xmlMode;\n        this.lowerCaseAttributeNames =\n            (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0 ? _b : !options.xmlMode;\n        this.tokenizer = new ((_c = options.Tokenizer) !== null && _c !== void 0 ? _c : Tokenizer)(this.options, this);\n        (_e = (_d = this.cbs).onparserinit) === null || _e === void 0 ? void 0 : _e.call(_d, this);\n    }\n    // Tokenizer event handlers\n    /** @internal */\n    ontext(start, endIndex) {\n        var _a, _b;\n        const data = this.getSlice(start, endIndex);\n        this.endIndex = endIndex - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, data);\n        this.startIndex = endIndex;\n    }\n    /** @internal */\n    ontextentity(cp) {\n        var _a, _b;\n        /*\n         * Entities can be emitted on the character, or directly after.\n         * We use the section start here to get accurate indices.\n         */\n        const index = this.tokenizer.getSectionStart();\n        this.endIndex = index - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, fromCodePoint(cp));\n        this.startIndex = index;\n    }\n    isVoidElement(name) {\n        return !this.options.xmlMode && voidElements.has(name);\n    }\n    /** @internal */\n    onopentagname(start, endIndex) {\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        this.emitOpenTag(name);\n    }\n    emitOpenTag(name) {\n        var _a, _b, _c, _d;\n        this.openTagStart = this.startIndex;\n        this.tagname = name;\n        const impliesClose = !this.options.xmlMode && openImpliesClose.get(name);\n        if (impliesClose) {\n            while (this.stack.length > 0 &&\n                impliesClose.has(this.stack[this.stack.length - 1])) {\n                const element = this.stack.pop();\n                (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, true);\n            }\n        }\n        if (!this.isVoidElement(name)) {\n            this.stack.push(name);\n            if (foreignContextElements.has(name)) {\n                this.foreignContext.push(true);\n            }\n            else if (htmlIntegrationElements.has(name)) {\n                this.foreignContext.push(false);\n            }\n        }\n        (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, name);\n        if (this.cbs.onopentag)\n            this.attribs = {};\n    }\n    endOpenTag(isImplied) {\n        var _a, _b;\n        this.startIndex = this.openTagStart;\n        if (this.attribs) {\n            (_b = (_a = this.cbs).onopentag) === null || _b === void 0 ? void 0 : _b.call(_a, this.tagname, this.attribs, isImplied);\n            this.attribs = null;\n        }\n        if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) {\n            this.cbs.onclosetag(this.tagname, true);\n        }\n        this.tagname = \"\";\n    }\n    /** @internal */\n    onopentagend(endIndex) {\n        this.endIndex = endIndex;\n        this.endOpenTag(false);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onclosetag(start, endIndex) {\n        var _a, _b, _c, _d, _e, _f;\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        if (foreignContextElements.has(name) ||\n            htmlIntegrationElements.has(name)) {\n            this.foreignContext.pop();\n        }\n        if (!this.isVoidElement(name)) {\n            const pos = this.stack.lastIndexOf(name);\n            if (pos !== -1) {\n                if (this.cbs.onclosetag) {\n                    let count = this.stack.length - pos;\n                    while (count--) {\n                        // We know the stack has sufficient elements.\n                        this.cbs.onclosetag(this.stack.pop(), count !== 0);\n                    }\n                }\n                else\n                    this.stack.length = pos;\n            }\n            else if (!this.options.xmlMode && name === \"p\") {\n                // Implicit open before close\n                this.emitOpenTag(\"p\");\n                this.closeCurrentTag(true);\n            }\n        }\n        else if (!this.options.xmlMode && name === \"br\") {\n            // We can't use `emitOpenTag` for implicit open, as `br` would be implicitly closed.\n            (_b = (_a = this.cbs).onopentagname) === null || _b === void 0 ? void 0 : _b.call(_a, \"br\");\n            (_d = (_c = this.cbs).onopentag) === null || _d === void 0 ? void 0 : _d.call(_c, \"br\", {}, true);\n            (_f = (_e = this.cbs).onclosetag) === null || _f === void 0 ? void 0 : _f.call(_e, \"br\", false);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onselfclosingtag(endIndex) {\n        this.endIndex = endIndex;\n        if (this.options.xmlMode ||\n            this.options.recognizeSelfClosing ||\n            this.foreignContext[this.foreignContext.length - 1]) {\n            this.closeCurrentTag(false);\n            // Set `startIndex` for next node\n            this.startIndex = endIndex + 1;\n        }\n        else {\n            // Ignore the fact that the tag is self-closing.\n            this.onopentagend(endIndex);\n        }\n    }\n    closeCurrentTag(isOpenImplied) {\n        var _a, _b;\n        const name = this.tagname;\n        this.endOpenTag(isOpenImplied);\n        // Self-closing tags will be on the top of the stack\n        if (this.stack[this.stack.length - 1] === name) {\n            // If the opening tag isn't implied, the closing tag has to be implied.\n            (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, name, !isOpenImplied);\n            this.stack.pop();\n        }\n    }\n    /** @internal */\n    onattribname(start, endIndex) {\n        this.startIndex = start;\n        const name = this.getSlice(start, endIndex);\n        this.attribname = this.lowerCaseAttributeNames\n            ? name.toLowerCase()\n            : name;\n    }\n    /** @internal */\n    onattribdata(start, endIndex) {\n        this.attribvalue += this.getSlice(start, endIndex);\n    }\n    /** @internal */\n    onattribentity(cp) {\n        this.attribvalue += fromCodePoint(cp);\n    }\n    /** @internal */\n    onattribend(quote, endIndex) {\n        var _a, _b;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).onattribute) === null || _b === void 0 ? void 0 : _b.call(_a, this.attribname, this.attribvalue, quote === QuoteType.Double\n            ? '\"'\n            : quote === QuoteType.Single\n                ? \"'\"\n                : quote === QuoteType.NoValue\n                    ? undefined\n                    : null);\n        if (this.attribs &&\n            !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) {\n            this.attribs[this.attribname] = this.attribvalue;\n        }\n        this.attribvalue = \"\";\n    }\n    getInstructionName(value) {\n        const index = value.search(reNameEnd);\n        let name = index < 0 ? value : value.substr(0, index);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        return name;\n    }\n    /** @internal */\n    ondeclaration(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`!${name}`, `!${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onprocessinginstruction(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`?${name}`, `?${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    oncomment(start, endIndex, offset) {\n        var _a, _b, _c, _d;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).oncomment) === null || _b === void 0 ? void 0 : _b.call(_a, this.getSlice(start, endIndex - offset));\n        (_d = (_c = this.cbs).oncommentend) === null || _d === void 0 ? void 0 : _d.call(_c);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    oncdata(start, endIndex, offset) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex - offset);\n        if (this.options.xmlMode || this.options.recognizeCDATA) {\n            (_b = (_a = this.cbs).oncdatastart) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_d = (_c = this.cbs).ontext) === null || _d === void 0 ? void 0 : _d.call(_c, value);\n            (_f = (_e = this.cbs).oncdataend) === null || _f === void 0 ? void 0 : _f.call(_e);\n        }\n        else {\n            (_h = (_g = this.cbs).oncomment) === null || _h === void 0 ? void 0 : _h.call(_g, `[CDATA[${value}]]`);\n            (_k = (_j = this.cbs).oncommentend) === null || _k === void 0 ? void 0 : _k.call(_j);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onend() {\n        var _a, _b;\n        if (this.cbs.onclosetag) {\n            // Set the end index for all remaining tags\n            this.endIndex = this.startIndex;\n            for (let index = this.stack.length; index > 0; this.cbs.onclosetag(this.stack[--index], true))\n                ;\n        }\n        (_b = (_a = this.cbs).onend) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    /**\n     * Resets the parser to a blank state, ready to parse a new HTML document\n     */\n    reset() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.cbs).onreset) === null || _b === void 0 ? void 0 : _b.call(_a);\n        this.tokenizer.reset();\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribs = null;\n        this.stack.length = 0;\n        this.startIndex = 0;\n        this.endIndex = 0;\n        (_d = (_c = this.cbs).onparserinit) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n        this.buffers.length = 0;\n        this.bufferOffset = 0;\n        this.writeIndex = 0;\n        this.ended = false;\n    }\n    /**\n     * Resets the parser, then parses a complete document and\n     * pushes it to the handler.\n     *\n     * @param data Document to parse.\n     */\n    parseComplete(data) {\n        this.reset();\n        this.end(data);\n    }\n    getSlice(start, end) {\n        while (start - this.bufferOffset >= this.buffers[0].length) {\n            this.shiftBuffer();\n        }\n        let slice = this.buffers[0].slice(start - this.bufferOffset, end - this.bufferOffset);\n        while (end - this.bufferOffset > this.buffers[0].length) {\n            this.shiftBuffer();\n            slice += this.buffers[0].slice(0, end - this.bufferOffset);\n        }\n        return slice;\n    }\n    shiftBuffer() {\n        this.bufferOffset += this.buffers[0].length;\n        this.writeIndex--;\n        this.buffers.shift();\n    }\n    /**\n     * Parses a chunk of data and calls the corresponding callbacks.\n     *\n     * @param chunk Chunk to parse.\n     */\n    write(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".write() after done!\"));\n            return;\n        }\n        this.buffers.push(chunk);\n        if (this.tokenizer.running) {\n            this.tokenizer.write(chunk);\n            this.writeIndex++;\n        }\n    }\n    /**\n     * Parses the end of the buffer and clears the stack, calls onend.\n     *\n     * @param chunk Optional final chunk to parse.\n     */\n    end(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".end() after done!\"));\n            return;\n        }\n        if (chunk)\n            this.write(chunk);\n        this.ended = true;\n        this.tokenizer.end();\n    }\n    /**\n     * Pauses parsing. The parser won't emit events until `resume` is called.\n     */\n    pause() {\n        this.tokenizer.pause();\n    }\n    /**\n     * Resumes parsing after `pause` was called.\n     */\n    resume() {\n        this.tokenizer.resume();\n        while (this.tokenizer.running &&\n            this.writeIndex < this.buffers.length) {\n            this.tokenizer.write(this.buffers[this.writeIndex++]);\n        }\n        if (this.ended)\n            this.tokenizer.end();\n    }\n    /**\n     * Alias of `write`, for backwards compatibility.\n     *\n     * @param chunk Chunk to parse.\n     * @deprecated\n     */\n    parseChunk(chunk) {\n        this.write(chunk);\n    }\n    /**\n     * Alias of `end`, for backwards compatibility.\n     *\n     * @param chunk Optional final chunk to parse.\n     * @deprecated\n     */\n    done(chunk) {\n        this.end(chunk);\n    }\n}\n//# sourceMappingURL=Parser.js.map","import { Parser } from \"./Parser.js\";\nexport { Parser } from \"./Parser.js\";\nimport { DomHandler, } from \"domhandler\";\nexport { DomHandler, \n// Old name for DomHandler\nDomHandler as DefaultHandler, } from \"domhandler\";\n// Helper methods\n/**\n * Parses the data, returns the resulting document.\n *\n * @param data The data that should be parsed.\n * @param options Optional options for the parser and DOM builder.\n */\nexport function parseDocument(data, options) {\n    const handler = new DomHandler(undefined, options);\n    new Parser(handler, options).end(data);\n    return handler.root;\n}\n/**\n * Parses data, returns an array of the root nodes.\n *\n * Note that the root nodes still have a `Document` node as their parent.\n * Use `parseDocument` to get the `Document` node instead.\n *\n * @param data The data that should be parsed.\n * @param options Optional options for the parser and DOM builder.\n * @deprecated Use `parseDocument` instead.\n */\nexport function parseDOM(data, options) {\n    return parseDocument(data, options).children;\n}\n/**\n * Creates a parser instance, with an attached DOM handler.\n *\n * @param callback A callback that will be called once parsing has been completed.\n * @param options Optional options for the parser and DOM builder.\n * @param elementCallback An optional callback that will be called every time a tag has been completed inside of the DOM.\n */\nexport function createDomStream(callback, options, elementCallback) {\n    const handler = new DomHandler(callback, options, elementCallback);\n    return new Parser(handler, options);\n}\nexport { default as Tokenizer, } from \"./Tokenizer.js\";\n/*\n * All of the following exports exist for backwards-compatibility.\n * They should probably be removed eventually.\n */\nexport * as ElementType from \"domelementtype\";\nimport { getFeed } from \"domutils\";\nexport { getFeed } from \"domutils\";\nconst parseFeedDefaultOptions = { xmlMode: true };\n/**\n * Parse a feed.\n *\n * @param feed The feed that should be parsed, as a string.\n * @param options Optionally, options for parsing. When using this, you should set `xmlMode` to `true`.\n */\nexport function parseFeed(feed, options = parseFeedDefaultOptions) {\n    return getFeed(parseDOM(feed, options));\n}\nexport * as DomUtils from \"domutils\";\n//# sourceMappingURL=index.js.map","/**\n * Types used in signatures of Cheerio methods.\n *\n * @category Cheerio\n */\nexport * from './types.js';\nimport { getLoad } from './load.js';\nimport { getParse } from './parse.js';\nimport { renderWithParse5, parseWithParse5 } from './parsers/parse5-adapter.js';\nimport renderWithHtmlparser2 from 'dom-serializer';\nimport { parseDocument as parseWithHtmlparser2 } from 'htmlparser2';\nconst parse = getParse((content, options, isDocument, context) => options.xmlMode || options._useHtmlParser2\n    ? parseWithHtmlparser2(content, options)\n    : parseWithParse5(content, options, isDocument, context));\n// Duplicate docs due to https://github.com/TypeStrong/typedoc/issues/1616\n/**\n * Create a querying function, bound to a document created from the provided markup.\n *\n * Note that similar to web browser contexts, this operation may introduce\n * `<html>`, `<head>`, and `<body>` elements; set `isDocument` to `false` to\n * switch to fragment mode and disable this.\n *\n * @param content - Markup to be loaded.\n * @param options - Options for the created instance.\n * @param isDocument - Allows parser to be switched to fragment mode.\n * @returns The loaded document.\n * @see {@link https://cheerio.js.org#loading} for additional usage information.\n */\nexport const load = getLoad(parse, (dom, options) => options.xmlMode || options._useHtmlParser2\n    ? renderWithHtmlparser2(dom, options)\n    : renderWithParse5(dom));\n/**\n * The default cheerio instance.\n *\n * @deprecated Use the function returned by `load` instead.\n */\nexport default load([]);\nexport { html, xml, text } from './static.js';\nimport * as staticMethods from './static.js';\n/**\n * In order to promote consistency with the jQuery library, users are encouraged\n * to instead use the static method of the same name.\n *\n * @deprecated\n * @example\n *\n * ```js\n * const $ = cheerio.load('<div><p></p></div>');\n *\n * $.contains($('div').get(0), $('p').get(0));\n * //=> true\n *\n * $.contains($('p').get(0), $('div').get(0));\n * //=> false\n * ```\n *\n * @returns {boolean}\n */\nexport const { contains } = staticMethods;\n/**\n * In order to promote consistency with the jQuery library, users are encouraged\n * to instead use the static method of the same name.\n *\n * @deprecated\n * @example\n *\n * ```js\n * const $ = cheerio.load('');\n *\n * $.merge([1, 2], [3, 4]);\n * //=> [1, 2, 3, 4]\n * ```\n */\nexport const { merge } = staticMethods;\n/**\n * In order to promote consistency with the jQuery library, users are encouraged\n * to instead use the static method of the same name as it is defined on the\n * \"loaded\" Cheerio factory function.\n *\n * @deprecated See {@link static/parseHTML}.\n * @example\n *\n * ```js\n * const $ = cheerio.load('');\n * $.parseHTML('<b>markup</b>');\n * ```\n */\nexport const { parseHTML } = staticMethods;\n/**\n * Users seeking to access the top-level element of a parsed document should\n * instead use the `root` static method of a \"loaded\" Cheerio function.\n *\n * @deprecated\n * @example\n *\n * ```js\n * const $ = cheerio.load('');\n * $.root();\n * ```\n */\nexport const { root } = staticMethods;\n//# sourceMappingURL=index.js.map","import { default as defaultOptions, flatten as flattenOptions, } from './options.js';\nimport * as staticMethods from './static.js';\nimport { Cheerio } from './cheerio.js';\nimport { isHtml, isCheerio } from './utils.js';\nexport function getLoad(parse, render) {\n    /**\n     * Create a querying function, bound to a document created from the provided markup.\n     *\n     * Note that similar to web browser contexts, this operation may introduce\n     * `<html>`, `<head>`, and `<body>` elements; set `isDocument` to `false` to\n     * switch to fragment mode and disable this.\n     *\n     * @param content - Markup to be loaded.\n     * @param options - Options for the created instance.\n     * @param isDocument - Allows parser to be switched to fragment mode.\n     * @returns The loaded document.\n     * @see {@link https://cheerio.js.org#loading} for additional usage information.\n     */\n    return function load(content, options, isDocument = true) {\n        if (content == null) {\n            throw new Error('cheerio.load() expects a string');\n        }\n        const internalOpts = { ...defaultOptions, ...flattenOptions(options) };\n        const initialRoot = parse(content, internalOpts, isDocument, null);\n        /** Create an extended class here, so that extensions only live on one instance. */\n        class LoadedCheerio extends Cheerio {\n            _make(selector, context) {\n                const cheerio = initialize(selector, context);\n                cheerio.prevObject = this;\n                return cheerio;\n            }\n            _parse(content, options, isDocument, context) {\n                return parse(content, options, isDocument, context);\n            }\n            _render(dom) {\n                return render(dom, this.options);\n            }\n        }\n        function initialize(selector, context, root = initialRoot, opts) {\n            // $($)\n            if (selector && isCheerio(selector))\n                return selector;\n            const options = {\n                ...internalOpts,\n                ...flattenOptions(opts),\n            };\n            const r = typeof root === 'string'\n                ? [parse(root, options, false, null)]\n                : 'length' in root\n                    ? root\n                    : [root];\n            const rootInstance = isCheerio(r)\n                ? r\n                : new LoadedCheerio(r, null, options);\n            // Add a cyclic reference, so that calling methods on `_root` never fails.\n            rootInstance._root = rootInstance;\n            // $(), $(null), $(undefined), $(false)\n            if (!selector) {\n                return new LoadedCheerio(undefined, rootInstance, options);\n            }\n            const elements = typeof selector === 'string' && isHtml(selector)\n                ? // $(<html>)\n                    parse(selector, options, false, null).children\n                : isNode(selector)\n                    ? // $(dom)\n                        [selector]\n                    : Array.isArray(selector)\n                        ? // $([dom])\n                            selector\n                        : undefined;\n            const instance = new LoadedCheerio(elements, rootInstance, options);\n            if (elements) {\n                return instance;\n            }\n            if (typeof selector !== 'string') {\n                throw new Error('Unexpected type of selector');\n            }\n            // We know that our selector is a string now.\n            let search = selector;\n            const searchContext = !context\n                ? // If we don't have a context, maybe we have a root, from loading\n                    rootInstance\n                : typeof context === 'string'\n                    ? isHtml(context)\n                        ? // $('li', '<ul>...</ul>')\n                            new LoadedCheerio([parse(context, options, false, null)], rootInstance, options)\n                        : // $('li', 'ul')\n                            ((search = `${context} ${search}`), rootInstance)\n                    : isCheerio(context)\n                        ? // $('li', $)\n                            context\n                        : // $('li', node), $('li', [nodes])\n                            new LoadedCheerio(Array.isArray(context) ? context : [context], rootInstance, options);\n            // If we still don't have a context, return\n            if (!searchContext)\n                return instance;\n            /*\n             * #id, .class, tag\n             */\n            return searchContext.find(search);\n        }\n        // Add in static methods & properties\n        Object.assign(initialize, staticMethods, {\n            load,\n            // `_root` and `_options` are used in static methods.\n            _root: initialRoot,\n            _options: internalOpts,\n            // Add `fn` for plugins\n            fn: LoadedCheerio.prototype,\n            // Add the prototype here to maintain `instanceof` behavior.\n            prototype: LoadedCheerio.prototype,\n        });\n        return initialize;\n    };\n}\nfunction isNode(obj) {\n    return (!!obj.name ||\n        obj.type === 'root' ||\n        obj.type === 'text' ||\n        obj.type === 'comment');\n}\n//# sourceMappingURL=load.js.map","import cheerio from 'cheerio';\n\n\nconst cloneNode = (node, $) => {\n    if (node.type === 'text') {\n      return $.parseHTML(node.data)[0];\n    } else if (node.type === 'tag') {\n      const clonedNode = $('<' + node.name + '>')[0];\n      for (const attr in node.attribs) {\n        $(clonedNode).attr(attr, node.attribs[attr]);\n      }\n      return clonedNode;\n    }\n  };\n  \n  export const truncateHTML = (html, targetWordCount) => {\n    const $ = cheerio.load(html);\n    const $truncated = cheerio.load('<body></body>');\n  \n    let wordCount = 0;\n  \n    const truncateNode = (node, parent) => {\n      const clonedNode = cloneNode(node, $);\n      $truncated(clonedNode).appendTo(parent);\n  \n      if (node.type === 'text') {\n        const words = node.data.split(' ');\n        if (wordCount + words.length > targetWordCount) {\n          words.length = targetWordCount - wordCount;\n          clonedNode.data = words.join(' ') + '...';\n          wordCount = targetWordCount;\n        } else {\n          wordCount += words.length;\n        }\n      } else if (node.type === 'tag' && node.name !== 'img') {\n        for (const child of node.children) {\n          if (wordCount >= targetWordCount) break;\n          truncateNode(child, clonedNode);\n        }\n      }\n    };\n  \n    for (const child of $('body')[0].children) {\n      if (wordCount >= targetWordCount) break;\n      truncateNode(child, $truncated('body'));\n    }\n  \n    return $truncated('body').html();\n  };\n  ","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport Layout from \"../components/layout\";\nimport { truncateHTML } from './truncateHTML';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport IconButton from '@material-ui/core/IconButton';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport EmailIcon from '@material-ui/icons/Email';\nimport { useLocation } from \"@reach/router\";\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport cheerio from 'cheerio';\n\n\n\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"gatsby\";\nimport Button from '@material-ui/core/Button';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    width: '120%',\n    marginLeft: '-10%',\n    height: 'auto',\n    objectFit: 'cover',\n  },\n  content: {\n    maxWidth: '800px',\n    margin: '0 auto',\n  },\n  shareButtons: {\n    [theme.breakpoints.up('lg')]: {\n      textAlign: 'right',\n    },\n    [theme.breakpoints.down('md')]: {\n      textAlign: 'right',\n    },\n    [theme.breakpoints.down('sm')]: {\n      textAlign: 'center',\n    },\n  },\n  shareButton: {\n    margin: theme.spacing(1),\n    color: 'darkred',\n    '&:hover': {\n      color: 'red',\n    },\n  },\n  tooltip: {\n    fontSize: '1em',\n  },\n\n\n  caption: {\n    display: 'block',\n    textAlign: 'center',\n    color: 'grey',\n    fontStyle: 'italic',\n    marginBottom: '1em', // change this to adjust the gap after the caption\n  },\n  \n\n  customButton: {\n    backgroundColor: 'white', // Background color\n    border: '1px solid red', // Red border\n    color: 'black', // Text color\n    '&:hover': {\n      color: 'white', // Text color on hover\n      backgroundColor: 'rgb(47, 102, 151)', // Background color on hover\n    },\n  },\n\n\n\n\n}));\n\nconst convertDate = (inputFormat) => {\n  const splitDate = inputFormat.split(\"/\");\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const month = months[parseInt(splitDate[1]) - 1];\n  return `${month} ${splitDate[0]}, ${splitDate[2]}`;\n}\n\nexport default function BlogPost({ data }) {\n  const classes = useStyles();\n  const post = data.markdownRemark;\n  const articleType = post.frontmatter.article;\n  \n  const location = useLocation();\n\n\n\n  const [content, setContent] = useState(post.html);\nconst [isMagazine, setIsMagazine] = useState(false);\n\n\n\n\n\n\n\n\n// image caption code..\nuseEffect(() => {\n  const $ = cheerio.load(post.html);\n  $('img').each(function() {\n    const caption = $(this).attr('alt');\n    $(this).after(`<figcaption class=\"${classes.caption}\">${caption}</figcaption>`);\n  });\n  setContent($.html());\n}, [post.html, classes.caption]);\n\n\n\n\n\n\n  const shareToSocial = (platform) => {\n    const postUrl = window.location.origin + location.pathname;\n    const postTitle = encodeURIComponent(post.frontmatter.title);\n\n    let url;\n    switch(platform) {\n      case 'facebook':\n        url = `https://www.facebook.com/sharer/sharer.php?u=${postUrl}`;\n        break;\n      case 'twitter':\n        url = `https://twitter.com/share?url=${postUrl}&text=${postTitle}`;\n        break;\n      case 'linkedin':\n        url = `https://www.linkedin.com/shareArticle?mini=true&url=${postUrl}&title=${postTitle}`;\n        break;\n      case 'email':\n        url = `mailto:?subject=${postTitle}&body=${postUrl}`;\n        break;\n      default:\n        url = '';\n    }\n\n    window.open(url, '_blank');\n  }\n\n  useEffect(() => {\n    if (articleType === 'Magazine') {\n      setContent(prevContent => truncateHTML(prevContent, 200));\n      setIsMagazine(true);\n    } else {\n      setIsMagazine(false);\n    }\n  }, [articleType]);\n  \n\n  return (\n    <Layout>\n      <Container className={classes.content}>\n        <Grid container>\n          <Grid item xs={12}>\n            <h1>{post.frontmatter.title}</h1>\n            <h3>{post.frontmatter.summary}</h3>\n            <GatsbyImage\n              image={getImage(post.frontmatter.image)}\n              alt={post.frontmatter.title}\n              className={classes.image}\n            />\n            <Grid item xs={12} className={classes.shareButtons}>\n              <Tooltip title={<Typography className={classes.tooltip}>Share with Facebook</Typography>} placement=\"top\">\n                <IconButton onClick={() => shareToSocial('facebook')} color=\"primary\" className={classes.shareButton}>\n                  <FacebookIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title={<Typography className={classes.tooltip}>Share with Twitter</Typography>} placement=\"top\">\n                <IconButton onClick={() => shareToSocial('twitter')} color=\"primary\" className={classes.shareButton}>\n                  <TwitterIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title={<Typography className={classes.tooltip}>Share with LinkedIn</Typography>} placement=\"top\">\n                <IconButton onClick={() => shareToSocial('linkedin')} color=\"primary\" className={classes.shareButton}>\n                  <LinkedInIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title={<Typography className={classes.tooltip}>Mail to anyone</Typography>} placement=\"top\">\n                <IconButton onClick={() => shareToSocial('email')} color=\"primary\" className={classes.shareButton}>\n                  <EmailIcon />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n            <Divider />\n            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n              <Grid item xs>\n                <h5>{post.frontmatter.author}</h5>\n              </Grid>\n              <Grid item xs style={{textAlign: 'right'}}>\n                <em>{convertDate(post.frontmatter.time)}</em>\n              </Grid>\n            </Grid>\n            <div dangerouslySetInnerHTML={{ __html: content }} />\n            {isMagazine && (\n               <div style={{display: 'flex', justifyContent: 'center'}}>\n                <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/subscription\" className={classes.customButton}>\n                  Subscribe to read more\n               </Button>\n                </div>\n              )}\n            <Divider />\n          </Grid>\n        </Grid>\n      </Container>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        author\n        time\n        summary\n        article\n        image {\n          childImageSharp {\n            gatsbyImageData(\n              layout: CONSTRAINED\n              placeholder: BLURRED\n              aspectRatio: 2.00\n              width: 800\n            )\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_interopRequireDefault","_interopRequireWildcard","exports","React","_default","default","createElement","d","module","trueFunc","falseFunc","xml","decodeEntities","xmlModeDefault","_useHtmlParser2","xmlMode","flatten","options","undefined","elem","type","Tag","Script","Style","ElementType","Root","Text","Directive","Comment","CDATA","Doctype","Node","constructor","this","parent","prev","next","startIndex","endIndex","parentNode","previousSibling","nextSibling","cloneNode","recursive","DataNode","data","super","nodeValue","arguments","nodeType","name","NodeWithChildren","children","firstChild","_a","lastChild","length","childNodes","attribs","tagName","attributes","Object","keys","map","_b","value","namespace","prefix","node","isComment","prototype","hasOwnProperty","call","result","cloneChildren","clone","forEach","child","isDirective","Error","instruction","sourceCodeLocation","childs","i","withStartIndices","withEndIndices","callback","elementCB","dom","root","done","tagStack","lastNode","parser","onparserinit","onreset","onend","handleCallback","onerror","error","onclosetag","pop","onopentag","element","addNode","push","ontext","oncomment","oncommentend","oncdatastart","text","oncdataend","onprocessinginstruction","Uint16Array","split","c","charCodeAt","decodeMap","Map","fromCodePoint","String","codePoint","output","fromCharCode","replaceCodePoint","get","CharCodes","BinTrieFlags","EntityDecoderState","isNumber","code","ZERO","NINE","isEntityInAttributeInvalidEnd","EQUALS","UPPER_A","UPPER_Z","LOWER_A","LOWER_Z","isAsciiAlphaNumeric","DecodingMode","EntityDecoder","decodeTree","emitCodePoint","errors","state","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","startEntity","write","str","offset","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","start","end","base","digitCount","Math","pow","parseInt","substr","startIdx","char","UPPER_F","LOWER_F","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","current","valueLength","VALUE_LENGTH","determineBranch","max","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","ret","decoder","lastIndex","indexOf","slice","len","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","restoreDiff","arr","v","n","o","xmlCodeMap","codePointAt","index","match","lastIdx","exec","substring","toString","Number","getEscaper","regex","EntityLevel","EncodingMode","elementNames","val","toLowerCase","attributeNames","unencodedElements","Set","replaceQuotes","replace","singleTag","render","nodes","renderNode","renderComment","renderCdata","opts","foreignModeIntegrationPoints","has","foreignElements","tag","encode","encodeEntities","key","emptyAttrs","join","formatAttributes","selfClosingTags","renderTag","renderText","Array","isArray","innerText","getChildren","nextElementSibling","prevElementSibling","removeElement","childsIndex","lastIndexOf","splice","DocumentPosition","uniqueSort","filter","includes","sort","a","b","relative","nodeA","nodeB","aParents","bParents","unshift","maxIdx","min","idx","DISCONNECTED","sharedParent","siblings","aSibling","bSibling","FOLLOWING","CONTAINED_BY","PRECEDING","CONTAINS","compareDocumentPosition","that","_root","html","isOptions","_options","elements","elems","parseHTML","context","keepScripts","parsed","load","remove","contains","container","contained","merge","arr1","arr2","isArrayLike","newLength","item","isCheerio","maybeCheerio","cheerio","domEach","array","fn","cloneDom","el","CharacterCodes","isHtml","tagStart","tagChar","LowerA","LowerZ","UpperA","UpperZ","Exclamation","hasOwn","rspace","dataAttrPrefix","primitives","null","true","false","rboolean","rbrace","getAttr","test","setAttr","removeAttribute","attr","objName","objValue","getProp","setProp","prop","property","css","p","toUpperCase","URL","baseURI","href","wrap","setData","assign","readData","domNames","jsNames","attrName","startsWith","domName","_","x","jsName","JSON","parse","e","dataEl","querying","option","find","removeAttr","values","toArray","splitNames","names","trim","attrNames","hasClass","className","some","clazz","addClass","classNames","numElements","setClass","j","appendClass","removeClass","classes","numClasses","removeAll","elClasses","changed","toggleClass","stateVal","elementClasses","SelectorType","AttributeAction","reName","reEscape","actionTypes","Element","Start","End","Any","Not","Hyphen","unpackPseudos","isTraversal","selector","Adjacent","Child","Descendant","Parent","Sibling","ColumnCombinator","stripQuotesFromPseudos","funescape","escaped","escapedWhitespace","high","unescapeCSS","isQuote","isWhitespace","subselects","parseSelector","selectorIndex","tokens","getName","stripWhitespace","readValueWithParenthesis","counter","isEscaped","pos","slashCount","ensureNotTraversal","addTraversal","addSpecialAttribute","action","ignoreCase","finalizeSubselector","loop","firstChar","Equals","Exists","possibleAction","quote","sectionEnd","valueStart","forceIgnore","attributeSelector","PseudoElement","quot","Pseudo","Universal","isDocument","replacement","sibling","currNext","recurse","limit","Infinity","nodeStack","indexStack","shift","checked","tag_name","tag_type","tag_contains","attrib","funcs","reduce","id","ancestor","doc","feedRoot","feed","items","entry","media","link","description","pubDate","Date","updated","where","medium","isDefault","expression","obj","procedure","token","sortByProcedure","procs","getProcedure","procNew","proc","reChars","escapeRegex","caseInsensitiveAttributes","shouldIgnoreCase","quirksMode","attributeRules","equals","adapter","getAttributeValue","hyphen","charAt","boolbase","RegExp","exists","hasAttrib","endsWith","any","not","whitespace","nthCheck","formula","absA","abs","bMod","compile","sign","readSign","number","readNumber","skipWhitespace","getChildFunc","getParent","isTag","filters","getText","icontains","itext","rule","func","getSiblings","currentSibling","_rule","scope","hover","dynamicStatePseudo","visited","active","pseudos","empty","elemName","every","verifyPseudoArgs","subselect","argIndex","aliases","disabled","enabled","required","optional","selected","checkbox","file","password","radio","reset","image","submit","header","button","input","PLACEHOLDER_ELEMENT","ensureIsTag","getNextSiblings","elemIndex","copyOptions","lowerCaseAttributeNames","lowerCaseTags","cacheResults","is","compileToken","matches","_context","relativeSelector","s","compiled","hasElement","shouldTestNextSiblings","nextElements","existsOne","getElementParent","compileGeneralSelector","userPseudo","stringPseudo","alias","pseudo","compilePseudoSelector","WeakSet","isFalseCache","add","previous","lastElement","compileUnsafe","includesScopePseudo","t","DESCENDANT_TOKEN","FLEXIBLE_DESCENDANT_TOKEN","SCOPE_TOKEN","isArrayContext","finalContext","hasContext","absolutize","query","rules","first","second","rootFunc","compileRules","reduceRules","defaultEquals","defaultOptions","convertOptionFormats","_c","_d","wrapCompile","_compileToken","getSelectorFunc","searchFunc","filteredElements","prepareContext","elemsLength","nextSiblings","appendNextSiblings","removeSubsets","findAll","findOne","filterNames","isFilter","groupSelectors","selectors","filteredSelectors","plainSelectors","UNIVERSAL_SELECTOR","SCOPE_PSEUDO","plain","filtered","sel","filterBySelector","filterParsed","found","filterElements","size","filteredSelector","getDocumentRoot","findFilterElements","queryForSelector","totalLimit","filterIndex","findIndex","sub","partLimit","num","NaN","isFinite","getLimit","findElements","filterByPosition","remainingSelector","remainingHasTraversal","els","reSiblingSelector","selectorOrHaystack","_make","haystack","results","_getMatcher","matchMap","postFns","matched","filterArray","_matcher","concat","_singleMatcher","_matchUntil","nextElem","innerMatcher","filterSelector","getFilterFn","_removeDuplicates","from","parents","reverse","parentsUntil","closest","set","selectOpts","selectFn","nextAll","nextUntil","prevAll","prevUntil","contents","newElems","each","filterFn","last","eq","selectorOrNeedle","$haystack","needle","prevObject","other","selection","addBack","update","newChilds","_makeDomArray","_parse","_insert","concatenator","domSrc","_render","uniqueSplice","spliceIdx","spliceCount","spliceArgs","oldParent","prevIdx","appendTo","target","append","prependTo","prepend","_wrap","insert","wrapper","lastParent","wrapperDom","elInsertLocation","wrapInner","unwrap","replaceWith","wrapAll","insertBefore","after","insertAfter","clones","clonedSelf","before","targetArr","content","cont","setCss","getCss","styles","k","trimmed","trimEnd","newStyles","submittableSelector","r20","rCRLF","serialize","retArr","serializeArray","encodeURIComponent","$elem","Cheerio","Symbol","iterator","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","ERR","Preprocessor","handler","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","line","lastErrOffset","col","getError","startLine","endLine","startCol","endCol","startOffset","endOffset","_err","onParseError","_addGap","_processSurrogate","nextCp","isSurrogatePair","surrogateInInputStream","willDropParsedChunk","dropParsedChunk","chunk","isLastChunk","insertHtmlAtCurrentPos","pattern","caseSensitive","peek","advance","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","retreat","count","TokenType","getTokenAttr","attrs","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SCRIPT","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","UNKNOWN","$","SPECIAL_ELEMENTS","MATHML","XLINK","XML","XMLNS","isNumberedHeader","tn","UNESCAPED_TEXT","C1_CONTROLS_REFERENCE_REPLACEMENTS","State","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiDigit","isAsciiUpper","isAsciiLetter","isAsciiLower","isAsciiUpperHexDigit","isAsciiLowerHexDigit","toAsciiLower","isScriptDataDoubleEscapeSequenceEnd","Tokenizer","paused","inLoop","inForeignNode","lastStartTagName","returnState","charRefCode","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","sourceCodeLocationInfo","_runParsingLoop","_consume","_ensureHibernation","_callState","pause","resume","writeCallback","_unconsume","_reconsumeInState","_advanceBy","_consumeSequenceIfMatch","_createStartTagToken","START_TAG","tagID","selfClosing","ackSelfClosing","location","_createEndTagToken","END_TAG","_createCommentToken","COMMENT","_createDoctypeToken","initialName","DOCTYPE","forceQuirks","publicId","systemId","_createCharacterToken","chars","_createAttr","attrNameFirstCh","_leaveAttrName","create","_leaveAttrValue","duplicateAttribute","prepareToken","ct","_emitCurrentCharacterToken","emitCurrentTagToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","emitCurrentComment","onComment","emitCurrentDoctype","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","_emitEOFToken","onEof","EOF","_appendCharToCurrentCharacterToken","ch","_emitCodePoint","_emitChars","_matchNamedCharacterReference","withoutSemicolon","masked","_isCharacterReferenceInAttribute","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_flushCodePointConsumedAsCharacterReference","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","CHARACTER_REFERENCE","_stateCharacterReference","NAMED_CHARACTER_REFERENCE","_stateNamedCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","NUMERIC_CHARACTER_REFERENCE","_stateNumericCharacterReference","HEXADEMICAL_CHARACTER_REFERENCE_START","_stateHexademicalCharacterReferenceStart","HEXADEMICAL_CHARACTER_REFERENCE","_stateHexademicalCharacterReference","DECIMAL_CHARACTER_REFERENCE","_stateDecimalCharacterReference","NUMERIC_CHARACTER_REFERENCE_END","_stateNumericCharacterReferenceEnd","unexpectedNullCharacter","unexpectedQuestionMarkInsteadOfTagName","eofBeforeTagName","invalidFirstCharacterOfTagName","missingEndTagName","eofInTag","handleSpecialEndTag","_cp","eofInScriptHtmlCommentLikeText","unexpectedEqualsSignBeforeAttributeName","unexpectedCharacterInAttributeName","missingAttributeValue","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","eofInCdata","matchResult","unknownNamedCharacterReference","isAsciiHexDigit","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENT_NS","NAMED_HEADERS","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","currentTmplContentOrNode","_isInTemplate","treeAdapter","getTemplateContent","document","tagIDs","stackTop","tmplCount","currentTagId","_indexOf","getNamespaceURI","_updateCurrentElement","onItemPush","popped","onItemPop","oldElement","newElement","referenceElement","newElementID","insertionIdx","popUntilTagNamePopped","targetIdx","shortenToLength","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","tryPeekProperlyNestedBodyElement","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInScope","ns","hasNumberedHeaderInScope","hasInListItemScope","hasInButtonScope","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId","EntryType","MARKER","Marker","FormattingElementList","entries","bookmark","_getNoahArkConditionCandidates","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","elementAttrs","getAttrList","_ensureNoahArkCondition","neAttrsMap","neAttr","validCandidates","candidate","cAttr","insertMarker","pushElement","insertElementAfterBookmark","bookmarkIdx","removeEntry","entryIndex","clearToLastMarker","markerIdx","getElementEntryInScopeWithTagName","getElementEntry","createTextNode","nodeName","defaultTreeAdapter","createDocument","mode","NO_QUIRKS","createDocumentFragment","namespaceURI","createCommentNode","appendChild","newNode","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","VALID_DOCTYPE_NAME","VALID_SYSTEM_ID","QUIRKS_MODE_SYSTEM_ID","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","MIME_TYPES","TEXT_HTML","APPLICATION_XML","DEFINITION_URL_ATTR","ADJUSTED_DEFINITION_URL_ATTR","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","isIntegrationPoint","foreignNS","ENCODING","isHtmlIntegrationPoint","isMathMLTextIntegrationPoint","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","scriptingEnabled","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","tokenizer","activeFormattingElements","fragmentContextID","_setContextModes","openElements","static","documentMock","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","fragment","_adoptNodes","beforeToken","loc","err","tid","isTop","_setEndLocation","isHTML","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","TEXT","switchToPlaintextParsing","IN_BODY","_getAdjustedCurrentElement","_setDocumentType","docTypeNode","_attachElementToTree","startTag","_shouldFosterParentOnInsertion","_fosterParentElement","_appendElement","_insertFakeElement","_insertTemplate","tmpl","_appendCommentNode","_insertCharacters","beforeElement","_findFosterParentingLocation","textNodeIdx","donor","closingToken","ctLoc","endLoc","endTag","shouldProcessStartTagTokenInForeignContent","_processToken","_processStartTag","_reconstructActiveFormattingElements","listLength","_closeTableCell","IN_ROW","_closePElement","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_isSpecialElement","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","QUIRKS","LIMITED_QUIRKS","nonConformingDoctype","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagToken","COLOR","SIZE","FACE","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","currentNs","adjustedTagName","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","nextElement","elementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","closingOfElementWithOpenChildElements","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","areaStartTagInBody","isHiddenInput","inputType","TYPE","noembedStartTagInBody","genericStartTagInBody","bStartTagInBody","activeElementEntry","aStartTagInBody","numberedHeaderStartTagInBody","addressStartTagInBody","elementId","listItemStartTagInBody","hrStartTagInBody","rbStartTagInBody","rtStartTagInBody","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","htmlStartTagInBody","bodyStartTagInBody","inTemplate","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","tableStartTagInBody","inputStartTagInBody","paramStartTagInBody","imageStartTagInBody","buttonStartTagInBody","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","VOID_ELEMENTS","isVoidElement","serializeOuter","serializeNode","serializeChildNodes","currentNode","serializeAttributes","serializeElement","parentTn","serializeTextNode","serializeCommentNode","serializeDocumentTypeNode","enquoteDoctypeId","attribsNamespace","attribsPrefix","serializeDoctypeContent","parseWithParse5","parseFragment","renderOpts","QuoteType","Space","NewLine","Tab","FormFeed","CarriageReturn","isEndOfTagSection","Slash","Gt","Zero","Nine","Sequences","Cdata","Uint8Array","CdataEnd","CommentEnd","ScriptEnd","StyleEnd","TitleEnd","cbs","buffer","sectionStart","baseState","isSpecial","running","currentSequence","sequenceIndex","trieIndex","trieCurrent","entityResult","entityExcess","entityTrie","finish","getIndex","getSectionStart","stateText","Lt","fastForwardTo","BeforeTagName","Amp","BeforeEntity","stateSpecialStartSequence","isEnd","InTagName","stateInTagName","stateInSpecialTag","endOfText","actualIndex","stateInClosingTagName","stateCDATASequence","InCommentLike","InDeclaration","stateInDeclaration","stateInCommentLike","oncdata","isTagStartChar","isASCIIAlpha","startSpecial","sequence","SpecialStartSequence","stateBeforeTagName","ExclamationMark","BeforeDeclaration","Questionmark","InProcessingInstruction","lower","BeforeSpecialS","BeforeClosingTagName","onopentagname","BeforeAttributeName","stateBeforeAttributeName","stateBeforeClosingTagName","InClosingTagName","InSpecialComment","AfterClosingTagName","stateAfterClosingTagName","onopentagend","InSpecialTag","InSelfClosingTag","InAttributeName","stateInSelfClosingTag","onselfclosingtag","stateInAttributeName","Eq","onattribname","AfterAttributeName","stateAfterAttributeName","BeforeAttributeValue","onattribend","NoValue","stateBeforeAttributeValue","DoubleQuote","InAttributeValueDq","SingleQuote","InAttributeValueSq","InAttributeValueNq","stateInAttributeValueNoQuotes","handleInAttributeValue","onattribdata","Double","Single","stateInAttributeValueDoubleQuotes","stateInAttributeValueSingleQuotes","Unquoted","stateBeforeDeclaration","OpeningSquareBracket","CDATASequence","Dash","BeforeComment","ondeclaration","stateInProcessingInstruction","stateBeforeComment","stateInSpecialComment","stateBeforeSpecialS","stateBeforeEntity","BeforeNumericEntity","InNamedEntity","stateInNamedEntity","emitNamedEntity","allowLegacyEntity","Semi","entityStart","emitPartial","stateBeforeNumericEntity","LowerX","InHexEntity","InNumericEntity","stateInNumericEntity","strict","stateInHexEntity","UpperF","LowerF","isHexDigit","cleanup","shouldContinue","handleTrailingData","onattribentity","ontextentity","formTags","pTag","tableSectionTags","ddtTags","rtpTags","openImpliesClose","voidElements","foreignContextElements","htmlIntegrationElements","reNameEnd","_e","openTagStart","tagname","attribname","attribvalue","stack","foreignContext","buffers","bufferOffset","writeIndex","ended","lowerCaseTagNames","getSlice","emitOpenTag","impliesClose","endOpenTag","isImplied","_f","closeCurrentTag","recognizeSelfClosing","isOpenImplied","onattribute","getInstructionName","search","_g","_h","_j","_k","recognizeCDATA","parseComplete","shiftBuffer","parseChunk","parseDocument","Buffer","isBuffer","internalOpts","initialRoot","LoadedCheerio","initialize","r","rootInstance","instance","searchContext","getLoad","renderWithParse5","truncateHTML","targetWordCount","$truncated","wordCount","truncateNode","clonedNode","words","useStyles","makeStyles","theme","width","marginLeft","height","objectFit","maxWidth","margin","shareButtons","breakpoints","up","textAlign","down","shareButton","spacing","color","tooltip","fontSize","caption","display","fontStyle","marginBottom","customButton","backgroundColor","border","convertDate","inputFormat","splitDate","BlogPost","post","markdownRemark","articleType","frontmatter","article","useLocation","setContent","useState","isMagazine","setIsMagazine","useEffect","shareToSocial","platform","postUrl","window","origin","pathname","postTitle","title","url","open","prevContent","Layout","Container","Grid","xs","summary","GatsbyImage","getImage","alt","Tooltip","Typography","placement","IconButton","onClick","FacebookIcon","TwitterIcon","LinkedInIcon","EmailIcon","Divider","direction","justify","alignItems","author","style","time","dangerouslySetInnerHTML","__html","justifyContent","Button","variant","component","Link","to"],"sourceRoot":""}