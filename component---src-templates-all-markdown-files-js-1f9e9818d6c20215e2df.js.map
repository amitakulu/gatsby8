{"version":3,"file":"component---src-templates-all-markdown-files-js-1f9e9818d6c20215e2df.js","mappings":"uKAaIA,EAAoB,cAAiB,SAAcC,EAAOC,GAC5D,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAgBJ,EAAMK,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,GAAQ,OAAyBN,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoB,gBAAoB,KAAO,OAAS,CACtDG,WAAW,OAAKD,EAAQK,KAAMJ,GAC9BK,UAAWH,EAAS,EAAI,EACxBJ,IAAKA,GACJK,GACL,IA4BA,KAAe,OA9CK,CAElBC,KAAM,CACJE,SAAU,WA2CoB,CAChCC,KAAM,WADR,CAEGX,E,6ECxCCY,EAA2B,cAAiB,SAAqBX,EAAOC,GAC1E,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBS,EAAmBZ,EAAMa,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDN,GAAQ,OAAyBN,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoB,gBAAoBc,GAAW,OAAS,CAC1DX,WAAW,OAAKD,EAAQK,KAAMJ,GAC9BF,IAAKA,GACJK,GACL,IA+BA,KAAe,OAnDK,CAElBC,KAAM,CACJQ,QAAS,GACT,eAAgB,CACdC,cAAe,MA8Ca,CAChCN,KAAM,kBADR,CAEGC,E,qHCxBH,IA9B8BM,IAAe,IAAd,KAAEC,GAAM,EACrC,OACEC,EAAAA,cAACC,EAAAA,EAAI,CAACC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACnCN,EAAAA,cAACO,EAAAA,GAAI,CAACC,GAAIT,EAAKU,OAAOC,KAAMC,MAAO,CAAEC,eAAgB,SACnDZ,EAAAA,cAACa,EAAAA,GAAO,CAACC,MAAOf,EAAKgB,YAAYD,MAAO/B,QAAS,CAAEiC,QAAS,mBAC1DhB,EAAAA,cAACpB,EAAAA,EAAI,CAAC+B,MAAO,CAAEM,SAAU,IAAKC,UAAW,OAAQC,SAAU,aACzDnB,EAAAA,cAAAA,MAAAA,CAAKW,MAAO,CAAEQ,SAAU,WAAYC,IAAK,OAAQC,MAAO,OAAQC,gBAAiB,cAAeC,MAAO,MAAO3B,QAAS,UAAW4B,SAAU,QAASC,WAAY,OAAQC,OAAQ,IAC9K3B,EAAKgB,YAAYY,SAEpB3B,EAAAA,cAAC4B,EAAAA,EAAW,CACVC,OAAOC,EAAAA,EAAAA,GAAS/B,EAAKgB,YAAYc,OACjCE,IAAKhC,EAAKgB,YAAYD,MACtBH,MAAO,CAAEqB,OAAQ,OAEnBhC,EAAAA,cAACR,EAAAA,EAAW,KACVQ,EAAAA,cAACiC,EAAAA,EAAU,CAACC,QAAQ,KAAKxC,UAAU,MAChCK,EAAKgB,YAAYD,OAEpBd,EAAAA,cAACmC,EAAAA,EAAO,CAACxB,MAAO,CAAEyB,OAAQ,YAC1BpC,EAAAA,cAACiC,EAAAA,EAAU,CAACC,QAAQ,QAAQX,MAAM,gBAAgB7B,UAAU,KACzDK,EAAKgB,YAAYsB,aAMvB,C,gHCzBI,SAASC,EAAiB,GAAW,IAAX,KAAEC,GAAM,EAC/C,OACEvC,EAAAA,cAACwC,EAAAA,EAAM,KACLxC,EAAAA,cAACC,EAAAA,EAAI,CAACwC,WAAS,EAACC,QAAS,GACtBH,EAAKI,kBAAkBC,MAAMC,KAAIC,IAAAA,IAAC,KAAE/C,GAAM,SACzCC,EAAAA,cAAC+C,EAAAA,EAAqB,CAACC,IAAKjD,EAAKkD,GAAIlD,KAAMA,GAAQ,KAK7D,C","sources":["webpack://newsweb/./node_modules/@material-ui/core/esm/Card/Card.js","webpack://newsweb/./node_modules/@material-ui/core/esm/CardContent/CardContent.js","webpack://newsweb/./src/components/GridListTileComponent.js","webpack://newsweb/./src/templates/allMarkdownFiles.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React from 'react';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport { Link } from 'gatsby';\nimport { Typography, Tooltip, Grid, Card, CardContent, Divider } from '@material-ui/core';\n\nconst GridListTileComponent = ({ node }) => {\n  return (\n    <Grid item xs={12} sm={6} md={4} lg={3}>\n      <Link to={node.fields.slug} style={{ textDecoration: 'none' }}>\n        <Tooltip title={node.frontmatter.title} classes={{ tooltip: 'custom-tooltip' }}>\n          <Card style={{ maxWidth: 345, boxShadow: 'none', position: 'relative' }}>\n            <div style={{ position: 'absolute', top: '10px', right: '10px', backgroundColor: 'transparent', color: 'red', padding: '2px 5px', fontSize: '0.7em', fontWeight: 'bold', zIndex: 1 }}>\n              {node.frontmatter.article}\n            </div>\n            <GatsbyImage\n              image={getImage(node.frontmatter.image)}\n              alt={node.frontmatter.title}\n              style={{ height: 140 }}\n            />\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\">\n                {node.frontmatter.title}\n              </Typography>\n              <Divider style={{ margin: '10px 0' }} />\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {node.frontmatter.summary}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Tooltip>\n      </Link>\n    </Grid>\n  );\n};\n\nexport default GridListTileComponent;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport GridListTileComponent from '../components/GridListTileComponent';\nimport { Grid } from '@material-ui/core';\n\nexport default function AllMarkdownFiles({ data }) {\n  return (\n    <Layout>\n      <Grid container spacing={3}>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <GridListTileComponent key={node.id} node={node} />\n        ))}\n      </Grid>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query($folderName: String!) {\n    allMarkdownRemark(filter: {fields: {folderName: {eq: $folderName}}}) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            article\n            summary\n            image {\n              childImageSharp {\n                gatsbyImageData(\n                  layout: CONSTRAINED\n                  placeholder: BLURRED\n                  aspectRatio: 2.33\n                  width: 900\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["Card","props","ref","classes","className","_props$raised","raised","other","root","elevation","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","_ref","node","React","Grid","item","xs","sm","md","lg","Link","to","fields","slug","style","textDecoration","Tooltip","title","frontmatter","tooltip","maxWidth","boxShadow","position","top","right","backgroundColor","color","fontSize","fontWeight","zIndex","article","GatsbyImage","image","getImage","alt","height","Typography","variant","Divider","margin","summary","AllMarkdownFiles","data","Layout","container","spacing","allMarkdownRemark","edges","map","_ref2","GridListTileComponent","key","id"],"sourceRoot":""}